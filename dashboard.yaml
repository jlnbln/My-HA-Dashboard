kiosk_mode:
  non_admin_settings:
    hide_header: true
    ignore_entity_settings: true
  entity_settings:
    - entity:
        input_boolean.debug_rounded: 'on'
      hide_header: false
    - entity:
        input_boolean.debug_rounded: 'off'
      hide_header: true
decluttering_templates:
  footer_template:
    default:
      - color-1: var(--contrast20)
      - color-2: var(--contrast20)
      - color-3: var(--contrast20)
      - color-4: var(--contrast20)
      - color-5: var(--contrast20)
      - bgcolor-1: var(--contrast4)
      - bgcolor-2: var(--contrast4)
      - bgcolor-3: var(--contrast4)
      - bgcolor-4: var(--contrast4)
      - bgcolor-5: var(--contrast4)
    card:
      type: vertical-stack
      cards:
        - type: conditional
          conditions:
            - condition: and
              conditions:
                - condition: screen
                  media_query: '(min-width: 0px) and (max-width: 767px)'
                - condition: state
                  entity: binary_sensor.alexa_timer_active
                  state: 'on'
          card:
            type: custom:button-card
            template: custom_card_timer_bottom
        - type: conditional
          conditions:
            - condition: and
              conditions:
                - condition: screen
                  media_query: '(min-width: 0px) and (max-width: 767px)'
                - condition: or
                  conditions:
                    - condition: state
                      entity: media_player.music_and_tv
                      state: playing
                    - condition: state
                      entity: media_player.music_and_tv
                      state: paused
          card:
            type: custom:button-card
            template: custom_card_mediaplayer_bottom
            entity: media_player.music_and_tv
        - type: conditional
          conditions:
            - entity: input_boolean.sound_alarm_is_running
              state: 'on'
            - condition: screen
              media_query: '(min-width: 0px) and (max-width: 767px)'
            - condition: user
              users:
                - 82def695e9504f63b1eb09150073737d
                - 3eea636aa3de4c7f9c662ad29c6e92e0
          card:
            type: custom:button-card
            template: custom_card_alarm_bottom
button_card_templates:
  custom_card_number_slider:
    variables:
      icon: '[[[ return entity.attributes.icon ]]]'
      label: false
      state: false
      color: var(--blue)
    template: setup
    icon: '[[[ return entity.attributes.icon ]]]'
    label: '[[[ return variables.label ]]]'
    show_label: |
      [[[
        if (variables.label == "false") return false;
        else return true;
      ]]]
    show_icon: false
    show_state: true
    tap_action:
      action: toggle
      haptic: success
    hold_action:
      action: more-info
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: '[[[ return variables.icon ]]]'
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 27px
              - height: 27px
            icon:
              - width: 15px
              - color: var(--contrast20)
      slider:
        card:
          type: custom:my-slider
          entity: '[[[ return entity.entity_id ]]]'
          radius: 100px
          height: 12px
          thumbColor: var(--black)
          mainSliderColor: '[[[ return variables.color ]]]'
    styles:
      grid:
        - grid-template-areas: |
            [[[
              if (variables.label == false) return "\"s icon2\" \" n n\" \"slider slider\"";
              else return "\"l icon2\" \" n n\" \"slider slider\"";
            ]]]
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr min-content min-content
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 6px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
        - opacity: 0.7
      card:
        - height: 75px
        - background-color: |
            [[[
              if (entity.state == "on") return "var(--yellow)";
              else return "var(--contrast2)";
            ]]]
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - z-index: 1
      state:
        - justify-self: start
        - font-size: 15px
        - margin-top: 3px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      label:
        - justify-self: start
        - font-size: 15px
        - margin-top: 3px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      custom_fields:
        icon2:
          - margin-top: '-6px'
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 10px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
        slider:
          - padding-right: 16px
  volume_slider_small:
    template: setup
    label: >-
      [[[return Math.round(states[entity.entity_id].attributes.volume_level*100)
      + "%"]]]
    show_label: true
    show_icon: false
    tap_action:
      action: none
    styles:
      grid:
        - grid-template-areas: |
            'n slider l' 
        - grid-template-columns: 80px 1fr 40px
      card:
        - background: none
        - box-shadow: none
        - height: 30px
        - border-radius: 0
        - '--mdc-ripple-color': black
        - '--mdc-ripple-press-opacity': 0
      label:
        - justify-self: end
        - align-self: start
        - color: var(--contrast16)
        - font-weight: 500
        - font-size: 12px
        - padding-left: 10px
      name:
        - justify-self: start
        - align-self: start
        - color: var(--contrast16)
        - font-weight: 500
        - font-size: 12px
        - padding-right: 10px
      custom_fields:
        slider:
          - margin-top: 3px
    custom_fields:
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return entity.entity_id ]]]'
          mode: volume
          styles:
            container:
              - overflow: visible
            card:
              - height: 6px
              - background: var(--contrast4)
            track:
              - background: none
            progress:
              - background: var(--temperature)
              - border-radius: 4px
            thumb:
              - background: var(--contrast20)
              - border-radius: 50%
              - top: '-3px'
              - height: 12px
              - width: 12px
  media_player:
    template: setup
    variables:
      room: Select Room
      icon_1: <ha-icon icon="mdi:arrow-up"></ha-icon>
    show_entity_picture: true
    show_label: true
    entity_picture: |
      [[[
        if (states[ entity.entity_id ].attributes.active_child == "media_player.bedroom_nest_music_assistant") {
          return states["media_player.alarm_clock_2"].attributes.entity_picture
        } else if (entity.attributes.media_title == undefined || entity.attributes.entity_picture == undefined){
          return "/local/images/abstract-gif-colors.gif";
        } else {
          return states[entity.entity_id].attributes.entity_picture;
        }
      ]]]
    name: '[[[ return entity.attributes.media_title ]]]'
    label: '[[[ return entity.attributes.media_artist ]]]'
    tap_action:
      action: none
    styles:
      grid:
        - grid-template-areas: >
            'icon1 select_room play_state icon2' 'i i i i' 'n n n n' 'l l l l'
            'album album album album' 'buttons buttons buttons buttons'
        - grid-template-columns: min-content 1fr 1fr min-content
      card:
        - background: none
        - box-shadow: none
        - border-radius: 0px
        - margin-top: '-10px'
        - margin-bottom: '-10px'
        - '--mdc-ripple-color': black
        - '--mdc-ripple-press-opacity': 0
      entity_picture:
        - border-radius: 16px
        - margin-bottom: 35px
        - margin-top: 20px
        - object-fit: cover
        - width: 200px
        - height: 200px
      name:
        - justify-self: center
        - align-self: end
        - font-weight: 600
        - font-size: 15px
        - padding-top: 10px
        - width: 90%
      label:
        - justify-self: center
        - align-self: start
        - color: var(--contrast16)
        - font-weight: 500
        - font-size: 12px
      custom_fields:
        album:
          - justify-self: center
          - align-self: start
          - color: var(--contrast16)
          - font-weight: 400
          - font-size: 10px
          - margin-bottom: 5px
        icon1:
          - justify-self: start
          - width: 24px
          - color: var(--contrast20)
        icon2:
          - justify-self: end
          - width: 24px
          - color: var(--contrast20)
        select_room:
          - font-size: 10px
          - justify-self: start
          - align-self: center
          - color: var(--contrast16)
          - padding-left: 10px
        play_state:
          - font-size: 10px
          - justify-self: end
          - align-self: center
          - color: var(--contrast16)
          - padding-right: 10px
        bar:
          - background-color: var(--green)
          - position: absolute
          - bottom: 185px
          - left: 20%
          - top: unset
          - height: 2px
          - z-index: 1
          - transition: 1s ease-out
          - border-radius: 4px
        progress:
          - background-color: var(--contrast4)
          - position: absolute
          - top: unset
          - bottom: 185px
          - left: 20%
          - height: 2px
          - width: 60%
          - border-radius: 4px
    custom_fields:
      progress: |
        [[[
          if (entity.attributes.media_position !== undefined) {
          return ' ';}
        ]]]
      bar: |
        [[[
          if (entity.attributes.media_position !== undefined) {
          setTimeout(() => {
            let elt = this.shadowRoot,
                card = elt.getElementById('card'),
                container = elt.getElementById('container'),
                bar = elt.getElementById('bar');
            if (elt && card && container && bar) {
                card.insertBefore(bar, container);
                  function update() {
                    let mediaPositionUpdatedAt = entity.attributes.media_position_updated_at,
                        mediaPosition = entity.attributes.media_position,
                        mediaDuration = entity.attributes.media_duration,
                        mediaContentType = entity.attributes.media_content_type;
                    let percentage = entity.state === 'paused'
                      ? (mediaPosition / mediaDuration * 60)
                      : entity.state === 'playing'
                        ? (((Date.now() / 1000) - (new Date(mediaPositionUpdatedAt).getTime() / 1000) + mediaPosition) / mediaDuration * 60)
                        : 0;
                    bar.style.width = percentage.toFixed(1) + '%';
                    requestAnimationFrame(update);
                  }
                  requestAnimationFrame(update);
            }
          }, 0);
          return ' ';}
        ]]]
      buttons:
        card:
          type: custom:button-card
          styles:
            grid:
              - grid-template-areas: |
                  '. loop prev play_pause next shuffle .'
              - grid-template-columns: 12px 1fr 1fr 1fr 1fr 1fr 12px
            card:
              - background: none
              - box-shadow: none
              - padding-left: 20px
              - padding-right: 20px
          custom_fields:
            loop:
              card:
                type: custom:button-card
                icon: |
                  [[[
                    if (states[entity.entity_id].attributes.repeat == "off") {
                      return "mdi:repeat-off"
                    } else if (states[entity.entity_id].attributes.repeat == "all") {
                      return "mdi:repeat"
                    } else {
                      return "mdi:repeat-once"
                    }
                  ]]]
                styles:
                  icon:
                    - width: 20px
                  card:
                    - background: none
                    - box-shadow: none
                tap_action:
                  action: call-service
                  service: media_player.repeat_set
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
                  data:
                    repeat: |
                      [[[
                        if (states[entity.entity_id].attributes.repeat == "off") {
                          return "all"
                        } else if (states[entity.entity_id].attributes.repeat == "all") {
                          return "one"
                        } else {
                          return "off"
                        }
                      ]]]
            prev:
              card:
                type: custom:button-card
                icon: mdi:skip-backward
                styles:
                  icon:
                    - width: 20px
                  card:
                    - background: none
                    - box-shadow: none
                tap_action:
                  action: call-service
                  service: media_player.media_previous_track
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            play_pause:
              card:
                type: custom:button-card
                icon: mdi:play
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                styles:
                  img_cell:
                    - background: |
                        [[[
                          if (states[entity.entity_id].state == "playing") {
                            return "var(--yellow)"
                          } else {
                            return "var(--green)"
                          }
                        ]]]
                    - border-radius: 50%
                    - width: 60px
                    - height: 60px
                  icon:
                    - width: 35px
                    - color: var(--black)
                  card:
                    - background: none
                    - box-shadow: none
                state:
                  - value: playing
                    icon: mdi:pause
                tap_action:
                  action: call-service
                  service: media_player.media_play_pause
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            next:
              card:
                type: custom:button-card
                icon: mdi:skip-forward
                styles:
                  icon:
                    - width: 20px
                  card:
                    - background: none
                    - box-shadow: none
                tap_action:
                  action: call-service
                  service: media_player.media_next_track
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            shuffle:
              card:
                type: custom:button-card
                icon: |
                  [[[
                    if (states[entity.entity_id].attributes.shuffle == true) {
                      return "mdi:shuffle"
                    } else {
                      return "mdi:shuffle-disabled"
                    }
                  ]]]
                styles:
                  icon:
                    - width: 20px
                  card:
                    - background: none
                    - box-shadow: none
                tap_action:
                  action: call-service
                  service: media_player.shuffle_set
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
                  data:
                    shuffle: |
                      [[[
                        if (states[entity.entity_id].attributes.shuffle == true) {
                          return "false"
                        } else {
                          return "true"
                        }
                      ]]]
      album:
        card:
          type: custom:button-card
          show_label: true
          label: |
            [[[
                return states[entity.entity_id].attributes.media_album_name
            ]]]
          styles:
            card:
              - background: none
              - box-shadow: none
              - border-radius: 0
              - padding: 0
            label:
              - justify-self: center
              - align-self: start
              - color: var(--contrast16)
              - font-weight: 400
              - font-size: 10px
              - margin-bottom: 5px
      play_state: |
        [[[
          if (entity.entity_id == "media_player.music") {
            if (states[entity.entity_id].attributes.active_child == "media_player.spotify_junglemoney") {
              return states[entity.entity_id].state + " - " + states[entity.entity_id].attributes.source
            } else if (states[entity.entity_id].attributes.active_child == "media_player.playstation_5") {
              return states[entity.entity_id].state + " - Playstation 5"
            } else if (states[entity.entity_id].attributes.active_child == "media_player.audiobook") {
              return states[entity.entity_id].state + " - Alarm Clock"
            } else if (states[entity.entity_id].attributes.active_child == "media_player.plex_bedroom") {
              return states[entity.entity_id].state + " - Bedroom TV"
            } else if (states[entity.entity_id].attributes.active_child == "media_player.apple_tv_4k_2") {
              return states[entity.entity_id].state + " - " + states[entity.entity_id].attributes.app_name
            } else {
              return states[entity.entity_id].state + " - " + states["sensor.music_room"].state
            }
          } else {
            return states[entity.entity_id].state + " - " + states[entity.entity_id].attributes.friendly_name
          }
        ]]]
      select_room: '[[[ return variables.room ]]]'
      icon1: |
        [[[
          return variables.icon_1;
        ]]]
      icon2: |
        [[[
          return '<ha-icon icon="mdi:music"></ha-icon>';
        ]]]
  custom_card_user:
    template: setup
    show_entity_picture: false
    show_icon: false
    show_label: true
    entity: |
      [[[
        if (user.name == "Julian") return "person.julian_";
        else return "person." + user.name.toLowerCase();
      ]]]
    name: '[[[return "Hello, " + user.name +"!"]]]'
    label: |
      [[[
        if (entity.state == "home") {
          if (user.name == "Julian") {
            return "Room: " + states["sensor.julians_apple_watch_area"].state;
          } else {
            return "Welcome home.";
          }
        } else {
          return "See you later.";
        }
      ]]]
    tap_action:
      action: navigate
      navigation_path: settings
    state:
      - value: not_home
        styles:
          entity_picture:
            - filter: grayscale(100%)
    styles:
      card:
        - padding: 12px 0px 12px 12px
        - background: none
        - box-shadow: none
      grid:
        - grid-template-areas: '"pic n one two three four" "pic l one two three four"'
        - grid-template-rows: min-content min-content min-content
        - grid-template-columns: 50px 1fr 50px 50px 50px 50px
      name:
        - justify-self: start
        - align-self: center
        - font-weight: 700
        - font-size: 15px
        - padding-left: 15px
      label:
        - justify-self: start
        - align-self: start
        - font-size: 12px
        - font-weight: 500
        - color: var(--contrast14)
        - padding-left: 15px
      entity_picture:
        - width: 40px
        - height: 40px
        - border-radius: 12px
      custom_fields:
        badge:
          - position: absolute
          - left: 47px
          - top: 9px
    custom_fields:
      badge:
        card:
          type: custom:button-card
          entity: '[[[ return entity.entity_id ]]]'
          show_icon: true
          show_name: false
          icon: mdi:account-tie-voice
          state:
            - value: not_home
              styles:
                card:
                  - background: var(--red)
          styles:
            card:
              - border-radius: 50%
              - width: 16px
              - height: 16px
              - background: var(--green)
              - z-index: 1
            icon:
              - color: var(--black)
              - width: 10px
      pic:
        card:
          type: custom:button-card
          entity: |
            [[[
              return entity.entity_id;
            ]]]
          show_name: false
          show_entity_picture: true
          state:
            - value: not_home
              styles:
                entity_picture:
                  - filter: grayscale(100%)
          double_tap_action:
            action: assist
            pipeline_id: preferred
          styles:
            card:
              - background: none
              - box-shadow: none
            entity_picture:
              - width: 40px
              - height: 40px
              - border-radius: 12px
            img_cell:
              - background-color: var(--contrast1)
              - width: 40px
              - height: 40px
              - border-radius: 12px
      one:
        card:
          type: custom:button-card
          entity: |
            [[[
              if (user.name == "Julian") return "person.anna";
              else return "person.julian_";
            ]]]
          show_name: false
          show_entity_picture: true
          state:
            - value: not_home
              styles:
                entity_picture:
                  - filter: grayscale(100%)
                  - opacity: 0.5
          styles:
            card:
              - background: none
              - box-shadow: none
              - z-index: 5
              - margin-left: 60px
            entity_picture:
              - width: 40px
              - height: 40px
              - border-radius: 12px
            img_cell:
              - background-color: var(--contrast1)
              - width: 40px
              - height: 40px
              - border-radius: 12px
      two:
        card:
          type: custom:button-card
          entity: |
            [[[
              if (user.name == "Julian") return "person.dog";
              else if (user.name == "Anna") return "person.dog";
              else return "person.anna";
            ]]]
          show_name: false
          show_entity_picture: true
          state:
            - value: not_home
              styles:
                entity_picture:
                  - filter: grayscale(100%)
                  - opacity: 0.5
          styles:
            card:
              - background: none
              - box-shadow: none
              - z-index: 4
              - margin-left: 40px
            entity_picture:
              - width: 40px
              - height: 40px
              - border-radius: 12px
            img_cell:
              - background-color: var(--contrast1)
              - width: 40px
              - height: 40px
              - border-radius: 12px
      three:
        card:
          type: custom:button-card
          entity: |
            [[[
              if (user.name == "Julian") return "person.dog_simone";
              else if (user.name == "Anna") return "person.dog_simone";
              else return "person.dog";
            ]]]
          show_name: false
          show_entity_picture: true
          state:
            - value: not_home
              styles:
                entity_picture:
                  - filter: grayscale(100%)
                  - opacity: 0.5
          styles:
            card:
              - background: none
              - box-shadow: none
              - z-index: 3
              - margin-left: 20px
            entity_picture:
              - width: 40px
              - height: 40px
              - border-radius: 12px
            img_cell:
              - background-color: var(--contrast1)
              - width: 40px
              - height: 40px
              - border-radius: 12px
      four:
        card:
          type: custom:button-card
          entity: |
            [[[
              if (user.name == "Julian") return "person.guest";
              else if (user.name == "Anna") return "person.guest";
              else return "person.dog_simone";
            ]]]
          show_name: false
          show_entity_picture: true
          state:
            - value: not_home
              styles:
                entity_picture:
                  - filter: grayscale(100%)
                  - opacity: 0.5
          styles:
            card:
              - background: none
              - box-shadow: none
              - z-index: 2
            entity_picture:
              - width: 40px
              - height: 40px
              - border-radius: 12px
            img_cell:
              - background-color: var(--contrast1)
              - width: 40px
              - height: 40px
              - border-radius: 12px
  custom_card_sensor_big:
    template: setup
    variables:
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      state_on: 'on'
      state_off: 'off'
      background_color_on: var(--red)
      background_color_off: var(--green)
      color_on: var(--black)
      color_off: var(--black)
      state: |
        [[[ 
          var st = states[entity.entity_id].state;
          var uni = ' ';
          return `
          ${st}<span style="font-size:
        0.5em;opacity:0.7">${uni}</span>
          `
        ]]]
    label: |
      [[[  return variables.state ]]]
    show_label: true
    state:
      - value: '[[[ return variables.state_on ]]]'
        icon: '[[[ return variables.icon_on ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_on ]]]'
          name:
            - color: '[[[ return variables.color_on ]]]'
          label:
            - color: '[[[ return variables.color_on ]]]'
      - value: '[[[ return variables.state_off ]]]'
        icon: '[[[ return variables.icon_off ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_off ]]]'
          name:
            - color: '[[[ return variables.color_off ]]]'
          label:
            - color: '[[[ return variables.color_off ]]]'
    styles:
      card:
        - padding: 20px 20px 12px 14px
        - height: 147px
        - background: var(--contrast2)
      grid:
        - grid-template-areas: '"i" "l" "n"'
      img_cell:
        - justify-self: end
        - align-self: start
        - background: var(--contrast1)
        - padding: 7px
        - border-radius: 50%
        - margin: '-16px -16px 0 0'
        - width: 30px
        - height: 30px
      icon:
        - width: 24px
        - height: 24px
        - color: var(--contrast20)
      label:
        - justify-self: start
        - font-size: 1.4em
        - font-weight: 300
        - color: var(--contrast20)
        - margin-top: 10px
      name:
        - justify-self: start
        - font-size: 11px
        - color: var(--contrast20)
        - opacity: '0.7'
  custom_card_sensor_medium:
    template: setup
    variables:
      state: |
        [[[ 
          var st = states[entity.entity_id].state;
          var uni = ' %';
          return `
          ${parseFloat(st).toFixed(0)}<span style="font-size:
        0.5em;opacity:0.7">${uni}</span>
          `
        ]]]
    show_label: true
    label: '[[[ return variables.state ]]]'
    styles:
      grid:
        - grid-template-columns: 62px 1fr
        - grid-template-areas: '"i l" "i n"'
      icon:
        - width: 24px
        - color: var(--contrast20)
      img_cell:
        - justify-self: start
        - width: 45px
        - height: 45px
        - background: var(--contrast1)
        - border-radius: 50%
        - margin-left: 7px
      label:
        - justify-self: start
        - font-size: 20px
        - padding-top: 4px
        - font-weight: 500
        - color: var(--contrast20)
      card:
        - height: 66px
        - border-radius: 24px
        - padding: 4px 20px 4px 4px
        - background: var(--contrast2)
      name:
        - justify-self: start
        - font-size: 11px
        - color: var(--contrast20)
        - opacity: 0.7
        - padding-bottom: 7px
  custom_card_sensor_small:
    template: setup
    variables:
      state: |
        [[[ 
          var st = states[entity.entity_id].state;
          var uni = ' %';
          return `
          ${parseFloat(st).toFixed(0)}<span style="font-size:
        0.5em;opacity:0.7">${uni}</span>
          `
        ]]]
    show_label: true
    show_icon: false
    label: '[[[ return variables.state ]]]'
    styles:
      grid:
        - grid-template-columns: 1fr
        - grid-template-areas: '"l" "n"'
      label:
        - justify-self: start
        - font-size: 20px
        - padding-top: 4px
        - font-weight: 500
        - color: var(--contrast20)
      card:
        - height: 66px
        - border-radius: 24px
        - padding: 12px 10px 10px 14px
        - background: var(--contrast2)
      name:
        - justify-self: start
        - font-size: 11px
        - color: var(--contrast20)
        - opacity: 0.7
        - padding-bottom: 7px
  custom_card_climate:
    template: setup
    variables:
      name: |
        [[[ return 'Living<br>room']]]
      state: |
        [[[ 
          var temp = states[entity.entity_id].attributes.current_temperature;
          var hum = states[entity.entity_id].attributes.current_humidity;
          return `
          ${parseFloat(temp).toFixed(0)}°<span style="font-size:
        0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
          `
        ]]]
      open: |
        [[[ 
          var state = states[entity.entity_id].state;
          var hum = states[entity.entity_id].attributes.current_humidity;
          return `
          ${state} <span style="font-size:
        0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
          `
        ]]]
      radius: 24px 24px 6px 24px
      sensor: binary_sensor.living_room_window_door_sensor
    icon: |
      [[[
        if (states[variables.sensor].state == "on") return "mdi:window-open-variant";
        else if (entity.attributes.current_humidity > "70") return "mdi:water-percent";
        else if (entity.state == "auto") return "mdi:thermostat-auto";
        else if (entity.state == "heat") return "mdi:fire";
        else return "mdi:thermostat";
      ]]]
    name: '[[[ return variables.name ]]]'
    tap_action:
      action: more-info
      haptic: success
    double_tap_action:
      action: call-service
      service: climate.set_hvac_mode
      data:
        hvac_mode: auto
      target:
        entity_id: '[[[ return entity.entity_id ]]]'
    hold_action:
      action: more-info
    custom_fields:
      temp: |
        [[[
          if (states[variables.sensor].state == "on") return variables.open;
          else return variables.state;
        ]]]
      slider:
        card:
          type: custom:button-card
          entity: '[[[return entity.entity_id ]]]'
          show_label: true
          show_name: false
          show_icon: false
          label: '[[[return states[ entity.entity_id ].attributes.temperature ]]]'
          custom_fields:
            minus:
              card:
                type: custom:button-card
                icon: mdi:minus
                styles:
                  icon:
                    - width: 20px
                  card:
                    - box-shadow: none
                    - background: none
                tap_action:
                  action: call-service
                  service: climate.set_temperature
                  data:
                    temperature: |
                      [[[
                        return states[entity.entity_id].attributes.temperature - 0.5;
                      ]]]
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            plus:
              card:
                type: custom:button-card
                icon: mdi:plus
                styles:
                  icon:
                    - width: 20px
                  card:
                    - box-shadow: none
                    - background: none
                tap_action:
                  action: call-service
                  service: climate.set_temperature
                  data:
                    temperature: |
                      [[[
                        return states[entity.entity_id].attributes.temperature + 0.5;
                      ]]]
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
          styles:
            grid:
              - grid-template-areas: |
                  'minus l plus'
              - grid-template-columns: 50px 1fr 50px
            card:
              - background-color: var(--contrast4)
              - padding: 5px
              - border-radius: 12px
              - height: 35px
            label:
              - font-weight: 500
              - font-size: 14px
    styles:
      card:
        - padding: 8px
        - height: 194px
        - border-radius: '[[[ return variables.radius ]]]'
        - background: var(--contrast2)
      grid:
        - grid-template-areas: '"n i" "temp temp" "slider slider"'
        - grid-template-rows: 1fr min-content
        - grid-template-columns: min-content 1fr
      icon:
        - width: 24px
        - color: |
            [[[
              if (states[variables.sensor].state == "on") return "var(--black)";
              else if (entity.attributes.current_humidity > "70") return "var(--black)";
              else if (entity.state == "auto") return "var(--black)";
              else if (entity.state == "heat") return "var(--black)";
              else if (entity.state == "off") return "var(--contrast10)";
              else return "var(--contrast20)";
            ]]]
      img_cell:
        - justify-self: end
        - background: |
            [[[
              if (states[variables.sensor].state == "on") return "var(--red)";
              else if (entity.attributes.current_humidity > "70") return "var(--red)";
              else if (entity.state == "auto") return "var(--green)";
              else if (entity.state == "heat") return "var(--red)";
              else return "var(--contrast1)";
            ]]]
        - border-radius: 100%
        - align-self: start
        - width: 50px
        - height: 50px
      name:
        - justify-self: start
        - align-self: start
        - text-align: left
        - font-size: 1em
        - font-weight: 500
        - color: var(--contrast20)
        - padding: 14px
        - margin-bottom: 7px
      custom_fields:
        temp:
          - justify-self: start
          - font-size: 2.4em
          - line-height: 1em
          - font-weight: 300
          - color: var(--contrast20)
          - padding: 0 0 6px 14px
          - margin-bottom: 10px
        slider:
          - margin-bottom: 10px
  custom_card_mushroom_climate:
    template: setup
    variables:
      sensor: test
    icon: |
      [[[
        if (entity.attributes.current_humidity > "70") return "mdi:water-percent";
        else if (entity.state == "auto") return "mdi:thermostat-auto";
        else if (entity.state == "heat") return "mdi:fire";
        else return "mdi:thermostat";
      ]]]
    show_label: true
    tap_action:
      action: more-info
      haptic: success
    double_tap_action:
      action: call-service
      service: climate.set_hvac_mode
      data:
        hvac_mode: auto
      target:
        entity_id: '[[[ return entity.entity_id ]]]'
    hold_action:
      action: more-info
    custom_fields:
      temp:
        card:
          type: custom:button-card
          entity: '[[[return entity.entity_id ]]]'
          show_label: true
          show_name: false
          show_icon: false
          label: '[[[return states[ entity.entity_id ].attributes.temperature ]]]'
          custom_fields:
            minus:
              card:
                type: custom:button-card
                icon: mdi:minus
                styles:
                  icon:
                    - width: 20px
                  card:
                    - box-shadow: none
                    - background: none
                tap_action:
                  action: call-service
                  service: climate.set_temperature
                  data:
                    temperature: |
                      [[[
                        return states[entity.entity_id].attributes.temperature - 0.5;
                      ]]]
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            plus:
              card:
                type: custom:button-card
                icon: mdi:plus
                styles:
                  icon:
                    - width: 20px
                  card:
                    - box-shadow: none
                    - background: none
                tap_action:
                  action: call-service
                  service: climate.set_temperature
                  data:
                    temperature: |
                      [[[
                        return states[entity.entity_id].attributes.temperature + 0.5;
                      ]]]
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
          styles:
            grid:
              - grid-template-areas: |
                  'minus l plus'
              - grid-template-columns: 50px 1fr 50px
            card:
              - background-color: var(--contrast4)
              - padding: 5px
              - border-radius: 12px
              - height: 35px
            label:
              - font-weight: 500
              - font-size: 14px
      window:
        card:
          type: custom:button-card
          entity: '[[[return variables.sensor ]]]'
          show_name: false
          icon: mdi:window-closed-variant
          state:
            - value: 'on'
              icon: mdi:window-open-variant
              styles:
                icon:
                  - color: var(--red)
          styles:
            card:
              - background: none
              - box-shadow: none
              - padding: 5px
            img_cell:
              - width: 35px
              - height: 35px
              - background-color: var(--contrast4)
              - border-radius: 12px
              - justify-content: center
            icon:
              - width: 18px
              - justify-self: center
              - align-self: center
              - color: var(--contrast16)
      auto:
        card:
          type: custom:button-card
          entity: '[[[ return entity.entity_id ]]]'
          show_name: false
          icon: mdi:thermostat-auto
          tap_action:
            action: call-service
            service: climate.set_hvac_mode
            data:
              hvac_mode: auto
            target:
              entity_id: '[[[ return entity.entity_id ]]]'
          styles:
            card:
              - background: none
              - box-shadow: none
              - padding: 5px
            img_cell:
              - width: 35px
              - height: 35px
              - background-color: var(--contrast4)
              - border-radius: 12px
              - justify-content: center
            icon:
              - width: 18px
              - justify-self: center
              - align-self: center
              - color: |
                  [[[
                    if (entity.state == "auto") return "var(--green)";
                    else return "var(--contrast12)";
                  ]]]
    styles:
      grid:
        - grid-template-areas: |
            'i n window'
            'i l window'
            'temp temp auto'
        - grid-template-columns: 50px 1fr 50px
        - grid-template-rows: min-content min-content min-content
      img_cell:
        - width: 40px
        - height: 40px
        - background-color: var(--contrast4)
        - border-radius: 12px
        - justify-content: center
      icon:
        - width: 24px
        - justify-self: center
        - align-self: center
        - color: |
            [[[
              if (entity.attributes.current_humidity > "70") return "var(--red)";
              else if (entity.state == "auto") return "var(--green)";
              else if (entity.state == "heat") return "var(--red)";
              else return "var(--contrast10)";
            ]]]
      card:
        - background-color: var(--contrast2)
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 12px 12px 12px
        - z-index: 1
      name:
        - justify-self: start
        - align-self: end
        - color: var(--contrast20)
        - font-size: 13px
        - font-weight: 600
        - margin-bottom: 0px
        - padding-left: 3px
      label:
        - justify-self: start
        - align-self: center
        - color: var(--contrast16)
        - font-size: 12px
        - font-weight: 400
        - padding-left: 3px
      custom_fields:
        window:
          - justify-self: end
        auto:
          - justify-self: end
  custom_card_mediaplayer_music:
    template: setup
    show_entity_picture: true
    entity_picture: |
      [[[
        if (states[ entity.entity_id ].attributes.active_child == "media_player.bedroom_nest_music_assistant") {
          return states["media_player.alarm_clock_2"].attributes.entity_picture
        } else if (entity.attributes.media_title == undefined || entity.attributes.entity_picture == undefined){
          return "/local/images/abstract-gif-colors.gif";
        } else {
          return states[entity.entity_id].attributes.entity_picture;
        }
      ]]]
    show_label: true
    name: '[[[ return states[entity.entity_id].attributes.media_artist ]]]'
    label: '[[[ return states[entity.entity_id].attributes.media_title ]]]'
    styles:
      grid:
        - grid-template-areas: |
            'i play_state icon1'
            'i l l'
            'i n n'
            'i buttons buttons'
            'bar bar bar'
        - grid-template-rows: min-content min-content
        - grid-template-columns: min-content 1fr
      icon:
        - width: 8rem
      card:
        - padding: 10px 15px 28px 15px
      img_cell:
        - height: 8rem
        - width: auto
        - border-radius: 15px
        - opacity: 70%
      name:
        - justify-self: center
        - align-self: start
        - color: var(--contrast16)
        - font-weight: 500
        - font-size: 12px
      label:
        - justify-self: center
        - align-self: end
        - font-weight: 600
        - font-size: 15px
        - padding-top: 10px
        - width: 90%
      custom_fields:
        play_state:
          - font-size: 10px
          - justify-self: end
          - align-self: center
          - color: var(--contrast16)
          - padding-right: 10px
        progress:
          - background-color: var(--contrast10)
          - position: absolute
          - top: unset
          - bottom: 18px
          - left: 15px
          - height: 2px
          - width: 93%
        bar:
          - background-color: var(--green)
          - position: absolute
          - bottom: 18px
          - left: 15px
          - top: unset
          - height: 2px
          - z-index: 1
          - transition: 1s ease-out
        icon1:
          - justify-self: end
          - width: 24px
          - color: var(--contrast20)
    state:
      - value: idle
        name: No music playing...
    custom_fields:
      buttons:
        card:
          type: custom:button-card
          styles:
            grid:
              - grid-template-areas: |
                  'prev play_pause next'
              - grid-template-columns: 1fr 1fr 1fr
            card:
              - background: none
              - box-shadow: none
              - padding-left: 20px
              - padding-right: 20px
          custom_fields:
            prev:
              card:
                type: custom:button-card
                icon: mdi:skip-backward
                styles:
                  icon:
                    - width: 15px
                  card:
                    - background: none
                    - box-shadow: none
                tap_action:
                  action: call-service
                  service: media_player.media_previous_track
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            play_pause:
              card:
                type: custom:button-card
                icon: mdi:play
                entity: '[[[ return entity.entity_id ]]]'
                show_name: false
                styles:
                  icon:
                    - width: 15px
                    - color: var(--contrast20)
                  card:
                    - background: none
                    - box-shadow: none
                state:
                  - value: playing
                    icon: mdi:pause
                tap_action:
                  action: call-service
                  service: media_player.media_play_pause
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            next:
              card:
                type: custom:button-card
                icon: mdi:skip-forward
                styles:
                  icon:
                    - width: 15px
                  card:
                    - background: none
                    - box-shadow: none
                tap_action:
                  action: call-service
                  service: media_player.media_next_track
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
      play_state: |
        [[[
          if (states[entity.entity_id].attributes.active_child == "media_player.spotify_junglemoney") {
            return states[entity.entity_id].state + " - " + states[entity.entity_id].attributes.source
          } else if (states[entity.entity_id].attributes.active_child == "media_player.playstation_5") {
            return states[entity.entity_id].state + " - Playstation 5"
          } else if (states[entity.entity_id].attributes.active_child == "media_player.audiobook") {
            return states[entity.entity_id].state + " - Alarm Clock"
          } else if (states[entity.entity_id].attributes.active_child == "media_player.plex_bedroom") {
            return states[entity.entity_id].state + " - Bedroom TV"
          } else if (states[entity.entity_id].attributes.active_child == "media_player.apple_tv_4k_2") {
            return states[entity.entity_id].state + " - " + states[entity.entity_id].attributes.app_name
          } else {
            return states[entity.entity_id].state + " - " + states["sensor.music_room"].state
          }
        ]]]
      icon1: |
        [[[
          return '<ha-icon icon="mdi:music"></ha-icon>';
        ]]]
      bar: |
        [[[
          if (entity.attributes.media_position !== undefined) {
          setTimeout(() => {
            let elt = this.shadowRoot,
                card = elt.getElementById('card'),
                container = elt.getElementById('container'),
                bar = elt.getElementById('bar');
            if (elt && card && container && bar) {
                card.insertBefore(bar, container);
                  function update() {
                    let mediaPositionUpdatedAt = entity.attributes.media_position_updated_at,
                        mediaPosition = entity.attributes.media_position,
                        mediaDuration = entity.attributes.media_duration,
                        mediaContentType = entity.attributes.media_content_type;
                    let percentage = entity.state === 'paused'
                      ? (mediaPosition / mediaDuration * 93)
                      : entity.state === 'playing'
                        ? (((Date.now() / 1000) - (new Date(mediaPositionUpdatedAt).getTime() / 1000) + mediaPosition) / mediaDuration * 93)
                        : 0;
                    bar.style.width = percentage.toFixed(1) + '%';
                    requestAnimationFrame(update);
                  }
                  requestAnimationFrame(update);
            }
          }, 0);
          return ' ';}
        ]]]
      progress: |
        [[[
          if (entity.attributes.media_position !== undefined) {
          return ' ';}
        ]]]
  custom_card_mediaplayer_tv:
    template: setup
    icon: mdi:play
    label: |
      [[[
        if (states[ entity.entity_id ].attributes.active_child == "media_player.playstation_5") {
          return 'Playstation'
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.steam_jlnbln") {
          return 'Steam'
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.plex_bedroom") {
          return 'Plex'
        } else {
          return states[entity.entity_id].attributes.app_name
        }
      ]]]
    name: |
      [[[
        if (states[ entity.entity_id ].attributes.active_child == "media_player.playstation_5") {
          return states["sensor.ps5_343_activity"].attributes.players
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.steam_jlnbln") {
          return 'jlnbln'
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.plex_bedroom") {
          return states[ entity.entity_id ].attributes.media_series_title
        } else {
          if (states[ entity.entity_id ].attributes.media_artist != null ) {
            return states[ entity.entity_id ].attributes.media_artist
          } else {
            return "Streaming"
          }
        }
      ]]]
    show_label: true
    show_state: true
    state_display: |
      [[[
        if (entity.state == 'off') {
          return 'Nothing Playing'
        } else {
          return states[entity.entity_id].attributes.media_title
        }
      ]]]
    styles:
      grid:
        - grid-template-areas: |
            'app_icon l i'
            's s s'
            'n n n'
        - grid-template-columns: min-content 1fr
        - grid-template-rows: min-content min-content min-content
        - column-gap: 10px
        - row-gap: 3px
      label:
        - justify-self: start
        - align-self: start
        - font-weight: 600
        - z-index: 1
        - font-size: 1rem
        - margin-top: 5px
      card:
        - padding: 15px
      icon:
        - height: 15px
        - width: 15px
        - color: var(--contrast16)
        - bottom: 4px
        - z-index: 1
      img_cell:
        - align-self: start
        - height: 15px
        - width: 15px
        - background: var(--contrast4)
        - border-radius: 6px
        - padding: 5px
        - z-index: 1
      name:
        - justify-self: start
        - align-self: end
        - color: var(--contrast16)
        - font-weight: 300
        - font-size: 0.9rem
        - z-index: 1
      state:
        - justify-self: start
        - font-weight: 700
        - font-size: 15px
        - z-index: 1
      custom_fields:
        app_icon:
          - width: 25px
          - height: 25px
          - margin-bottom: 20px
          - align-self: start
        background_cover:
          - position: absolute
          - left: 50%
          - bottom: 1px
          - border-radius: 1000px
          - transform: scale(1.3)
          - width: 110%
          - opacity: 80%
          - height: 13rem
          - background: |
              [[[
                if (states[entity.entity_id].attributes.active_child == "media_player.playstation_5") {
                  return 'center / cover no-repeat url("' + states["sensor.ps5_343_activity"].attributes.title_image + '")';
                } else if (states[ entity.entity_id ].attributes.active_child == "media_player.steam") {
                  return 'center / cover no-repeat url("' + states["sensor.steam_76561197981585794"].attributes.game_image_main + '")';
                } else if ( entity.entity_id == "media_player.steam") {
                  return 'center / cover no-repeat url("' + states["sensor.steam_76561197981585794"].attributes.game_image_main + '")';
                } else {
                  if (entity.attributes.entity_picture == undefined ){
                    if (states[ entity.entity_id ].attributes.media_artist == "Rocket League Esports") {
                      return 'center / cover no-repeat url("/local/images/rlesports.jpg")'
                    } else {
                      return 'center / cover no-repeat url("/local/images/abstract-gif-colors.gif")'
                    }
                  } else {
                    return 'center / cover no-repeat url("' + states[entity.entity_id].attributes.entity_picture + '")';
                  }
                }
              ]]]
    state:
      - value: playing
        icon: |
          [[[
            if (states[entity.entity_id].attributes.active_child == "media_player.playstation_5") {
              return 'mdi:controller'
            } else if (states[entity.entity_id].attributes.active_child == "media_player.steam_jlnbln") {
              return 'mdi:controller'
            } else {
              return 'mdi:pause'
            }
          ]]]
    custom_fields:
      background_cover: ''
      app_icon: |
        [[[
          if (states[ entity.entity_id ].attributes.active_child == "media_player.playstation_5") {
            return '<ha-icon icon="mdi:sony-playstation"></ha-icon>'
          } else if (states[ entity.entity_id ].attributes.active_child == "media_player.steam_jlnbln") {
            return '<ha-icon icon="mdi:steam"></ha-icon>'
          } else if (states[ entity.entity_id ].attributes.active_child == "media_player.plex_bedroom") {
            return '<ha-icon icon="mdi:plex"></ha-icon>'
          } else {
            if (entity.attributes.app_name == "YouTube") {
              return '<ha-icon icon="mdi:youtube-tv"></ha-icon>';
            } else if (entity.attributes.app_name == "Netflix") {
              return '<ha-icon icon="mdi:netflix"></ha-icon>';
            } else if (entity.attributes.app_name == "Plex") {
              return '<ha-icon icon="mdi:plex"></ha-icon>';
            } else {
              return '<ha-icon icon="mdi:television-guide"></ha-icon>';
            }
          }
        ]]]
  custom_card_device_sensor:
    template: setup
    show_label: true
    styles:
      card:
        - padding: 10px 25px 10px 10px
      grid:
        - grid-template-areas: '''i n indicator'' ''i l indicator'''
        - grid-template-columns: min-content
        - grid-template-rows: min-content min-content
        - column-gap: 15px
      icon:
        - width: 2rem
        - margin: 0.8rem
        - color: var(--contrast20)
      img_cell:
        - justify-self: start
        - width: 3rem
        - background: var(--contrast4)
        - border-radius: 12px
      name:
        - justify-self: start
        - align-self: end
        - font-weight: 700
        - font-size: 12px
        - color: var(--contrast20)
      state:
        - justify-self: start
        - align-self: start
        - font-weight: 600
        - font-size: 10px
      label:
        - justify-self: start
        - align-self: start
        - font-weight: 600
        - font-size: 10px
        - color: var(--contrast14)
      custom_fields:
        indicator:
          - justify-self: end
    custom_fields:
      indicator:
        card:
          type: custom:button-card
          entity: '[[[ return entity.entity_id ]]]'
          show_icon: false
          show_name: false
          styles:
            card:
              - height: 20px
              - width: 20px
              - border-radius: 500px
              - background: var(--yellow)
          state:
            - value: 0
              styles:
                card:
                  - background: var(--contrast8)
  custom_card_navigationbar:
    template: setup
    variables:
      color1: var(--contrast10)
      color2: var(--contrast10)
      color3: var(--contrast10)
      color4: var(--contrast10)
      color5: var(--contrast10)
      bgcolor1: var(--contrast4)
      bgcolor2: var(--contrast4)
      bgcolor3: var(--contrast4)
      bgcolor4: var(--contrast4)
      bgcolor5: var(--contrast4)
    tap_action:
      action: none
    styles:
      grid:
        - grid-template-areas: '". item_1 item_2 item_3 item_4 item_5 ."'
        - grid-template-columns: 1fr repeat(5, min-content) 1fr
        - grid-template-rows: 1fr
        - column-gap: 1.5rem
      card:
        - height: 70px
        - background-color: var(--contrast2)
        - width: 90vw
        - border-radius: 40px
        - overflow: visible
        - position: |
            [[[
              if (states["input_boolean.debug_rounded"].state == "on") {
                return 'static'
              } else {
                return 'fixed'
              }
            ]]]
        - box-shadow: 0px 25px 80px rgba(0, 0, 0, 0.5);
        - margin: 0
        - bottom: 10px
        - left: 5%
        - z-index: 8
        - padding-bottom: 50px
    custom_fields:
      item_1:
        card:
          type: custom:button-card
          icon: mdi:home
          tap_action:
            action: navigate
            navigation_path: home
          styles:
            icon:
              - color: '[[[ return variables.color1 ]]]'
            card:
              - height: 40px
              - width: 40px
              - margin: 0
              - padding: 10
              - border-radius: 500px
              - background: '[[[ return variables.bgcolor1 ]]]'
              - align-self: start
      item_2:
        card:
          type: custom:button-card
          entity: weather.pirateweather_berlin
          show_name: false
          show_state: false
          tap_action:
            action: navigate
            navigation_path: weather
          styles:
            icon:
              - color: '[[[ return variables.color2 ]]]'
            card:
              - height: 40px
              - width: 40px
              - margin: 0
              - padding: 10
              - border-radius: 500px
              - background: '[[[ return variables.bgcolor2 ]]]'
              - align-self: start
      item_3:
        card:
          type: custom:button-card
          icon: |
            [[[
              if (states["media_player.spotify_junglemoney"].state == "playing") {
                return 'mdi:spotify'
              } else if (states["binary_sensor.is_tv_on"].state == "on") {
                return 'mdi:television'
              } else {
                return 'mdi:spotify'
              }
            ]]]
          tap_action:
            action: navigate
            navigation_path: |
              [[[
                if (states["media_player.spotify_junglemoney"].state == "playing") {
                  return 'music'
                } else if (states["binary_sensor.is_tv_on"].state == "on") {
                  return 'television'
                } else {
                  return 'music'
                }
              ]]]
          double_tap_action:
            action: navigate
            navigation_path: |
              [[[
                if (states["media_player.spotify_junglemoney"].state == "playing") {
                  return 'television'
                } else if (states["binary_sensor.is_tv_on"].state == "on") {
                  return 'music'
                } else {
                  return 'television'
                }
              ]]]
          styles:
            card:
              - height: 40px
              - width: 40px
              - margin: 0
              - padding: 10
              - border-radius: 500px
              - background: '[[[ return variables.bgcolor3 ]]]'
              - align-self: start
            icon:
              - color: '[[[ return variables.color3 ]]]'
              - width: 17px
      item_4:
        card:
          type: custom:button-card
          icon: |
            [[[
              if (states["switch.junglemoneyguest"].state == "on") {
                return 'mdi:wifi'
              } else {
                return 'mdi:network-pos'
              }
            ]]]
          tap_action:
            action: navigate
            navigation_path: wifi
          styles:
            card:
              - height: 40px
              - width: 40px
              - margin: 0
              - padding: 10
              - border-radius: 500px
              - background: '[[[ return variables.bgcolor4 ]]]'
              - align-self: start
            icon:
              - color: '[[[ return variables.color4 ]]]'
              - width: 17px
      item_5:
        card:
          type: custom:button-card
          icon: mdi:security
          tap_action:
            action: navigate
            navigation_path: security
          styles:
            card:
              - height: 40px
              - width: 40px
              - margin: 0
              - padding: 10
              - border-radius: 500px
              - background: '[[[ return variables.bgcolor5 ]]]'
              - align-self: start
            icon:
              - color: '[[[ return variables.color5 ]]]'
              - width: 17px
  custom_card_alarm_bottom:
    template: setup
    entity: sensor.wake_time_1
    show_label: false
    name: '[[[ return states["sensor.time"].state ]]]'
    show_state: false
    show_entity_picture: false
    icon: mdi:alarm
    styles:
      grid:
        - grid-template-areas: |
            "i n snooze stop"
        - grid-template-columns: min-content min-content 1fr 1fr
        - grid-template-rows: min-content
        - column-gap: 15px
      icon:
        - width: 60px
        - color: var(--red)
        - animation: alarm 0.8s ease infinite
      card:
        - padding: 15px 15px 15px 15px
        - height: 180px
        - width: 100vw
        - overflow: hidden
        - position: |
            [[[
              if (states["input_boolean.debug_rounded"].state == "on") {
                return 'static'
              } else {
                return 'fixed'
              }
            ]]]
        - margin: 0
        - bottom: 0
        - left: 0
        - z-index: 2
        - border-radius: 20px 20px 0px 0px
        - box-shadow: >-
            rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px
            2px 16px 0px;
      img_cell:
        - background: none
        - border-radius: 10px
        - width: 50px
        - height: 50px
        - justify-self: start
        - align-self: start
        - left: 10px
      name:
        - font-size: 28px
        - font-weight: 700
        - justify-self: start
        - align-self: center
        - padding-left: 10px
      custom_fields:
        snooze:
          - justify-self: end
        stop:
          - justify-self: end
    extra_styles: |
      @keyframes alarm {
        0%, 80%, 100% { transform: translateY(0); }
        10% { transform: translateY(-2px) rotate(-8deg); }
        20% { transform: translateY(-2px) rotate(9deg); }
        30% { transform: translateY(-2px) rotate(-5deg); }
        40% { transform: translateY(-2px) rotate(4deg); }
        50% { transform: translateY(0); }
        60% { transform: translateY(-1.2px) }
      }
    custom_fields:
      snooze:
        card:
          type: custom:button-card
          icon: mdi:alarm-snooze
          entity: input_boolean.alarm_snoozed
          name: Snooze
          show_name: true
          show_icon: true
          tap_action:
            action: toggle
          styles:
            grid:
              - grid-template-areas: '"i n"'
              - grid-template-columns: min-content min-content
            card:
              - padding: 4px
              - background: var(--orange)
              - border-radius: 24px
              - width: 90px
            img_cell:
              - justify-self: start
              - width: 25px
              - height: 25px
              - background: var(--contrast1)
              - border-radius: 100%
            name:
              - font-size: 12px
              - color: var(--black)
              - font-weight: 500
              - justify-self: start
              - align-self: center
              - padding-left: 5px
            icon:
              - width: 14px
              - color: var(--orange)
              - align-self: center
      stop:
        card:
          type: custom:button-card
          icon: mdi:alarm-off
          entity: input_boolean.sound_alarm_is_running
          name: STOP
          show_name: true
          show_icon: true
          tap_action:
            action: toggle
          styles:
            grid:
              - grid-template-areas: '"i n"'
              - grid-template-columns: min-content min-content
            card:
              - padding: 4px
              - background: var(--red)
              - border-radius: 24px
              - width: 90px
              - margin-right: 5px
            img_cell:
              - justify-self: start
              - width: 25px
              - height: 25px
              - background: var(--contrast1)
              - border-radius: 100%
            name:
              - font-size: 12px
              - color: var(--black)
              - font-weight: 500
              - justify-self: start
              - align-self: center
              - padding-left: 5px
            icon:
              - width: 14px
              - color: var(--red)
              - align-self: center
  custom_card_timer_bottom:
    template: setup
    type: custom:button-card
    entity: |
      [[[
        if (states["sensor.kitchen_timer"].state == "on") {
          return 'sensor.kitchen_timer'
        } else if (states["sensor.living_room_timer"].state == "on") {
          return 'sensor.living_room_timer'
        } else if (states["sensor.office_timer"].state == "on") {
          return 'sensor.office_timer'
        } else if (states["sensor.bed_room_timer"].state == "on") {
          return 'sensor.bed_room_timer'
        } else if (states["sensor.bathroom_timer"].state == "on") {
          return 'sensor.bathroom_timer'
        } else {
          return 'sensor.kitchen_timer'
        }
      ]]]
    show_name: true
    show_icon: false
    show_label: false
    show_state: false
    tap_action:
      action: more-info
    hold_action:
      action: more-info
    custom_fields:
      bar: |
        [[[
          var color = "var(--green)";
          var state = 100 - states[ entity.entity_id ].attributes.remaining_perc;
          if (state < 10) color = "var(--red)";
          else if (state < 50) color = "var(--yellow)";
          else if (state < 90) color = "var(--orange)";
          return `
          <div>
          <div style="background:${color}; height: 12px; width:${state}%">
          </div>
          </div>`
        ]]]
      rem:
        card:
          type: custom:button-card
          entity: '[[[ return entity.entity_id ]]]'
          name: |
            [[[
            var remainingTime = states[ entity.entity_id ].attributes.remaining;
            return `${remainingTime}`;
            ]]]
          show_icon: false
          styles:
            card:
              - width: min
              - background: none
              - overflow: visible
            name:
              - font-size: 14px
              - margin-top: 6px
              - font-weight: 600
              - color: var(--contrast20)
      icon1: |
        [[[
            return '<ha-icon icon="mdi:timer-outline"></ha-icon>';
        ]]]
    styles:
      grid:
        - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
        - grid-template-rows: min-content min-content min-content
        - grid-template-columns: 60% 40%
      card:
        - padding: 15px 35px 15px 35px
        - background: var(--contrast2)
        - height: |
            [[[
              if (states["media_player.music_and_tv"].state == "playing") {
                return '280px'
              } else if (states["media_player.music_and_tv"].state == "paused") {
                return '280px'
              } else {
                return '180px'
              }
            ]]]
        - width: 100vw
        - overflow: hidden
        - position: |
            [[[
              if (states["input_boolean.debug_rounded"].state == "on") {
                return 'static'
              } else {
                return 'fixed'
              }
            ]]]
        - margin: 0
        - bottom: 0
        - left: 0
        - z-index: 1
        - border-radius: 20px 20px 0px 0px
        - box-shadow: >-
            rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px
            2px 16px 0px;
      img_cell:
        - position: absolute
        - top: 20%
        - left: 40%
        - overflow: visible
      label:
        - text-align: left
        - font-size: 18px
        - font-weight: 500
        - justify-self: start
        - align-self: start
        - overflow: visible
        - color: var(--contrast20)
      name:
        - text-align: left
        - font-size: 12px
        - justify-self: start
        - align-self: start
        - overflow: visible
        - color: var(--contrast20)
      custom_fields:
        bar:
          - justify-self: start
          - align-self: start
          - margin-top: 10px
          - width: 100%
          - height: |
              [[[
                if (entity.state == 'on') {
                  return '12px';
                } else {
                  return '0px';
                }
              ]]]
          - background: var(--contrast1)
          - border-radius: 24px
        rem:
          - justify-self: start
          - font-size: 14px
          - font-weight: 600
          - align-self: end
          - height: |
              [[[
                if (entity.state == 'on') {
                  return '27px';
                } else {
                  return '0px';
                }
              ]]]
        icon1:
          - justify-self: end
          - align-self: start
          - width: 24px
          - color: var(--contrast20)
      hold_action:
        action: more-info
  custom_card_mediaplayer_bottom:
    template: setup
    show_label: true
    name: |
      [[[
        if (states[ entity.entity_id ].attributes.active_child == "media_player.playstation_5") {
          return states["sensor.ps5_343_activity"].attributes.players
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.steam_jlnbln") {
          return 'jlnbln'
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.plex_bedroom") {
          return states[ entity.entity_id ].attributes.media_series_title
        } else {
          if (states[ entity.entity_id ].attributes.media_artist != null ) {
            return states[ entity.entity_id ].attributes.media_artist
          } else {
            return "Streaming"
          }
        }
      ]]]
    label: '[[[ return states[ entity.entity_id ].attributes.media_title ]]]'
    show_state: false
    show_entity_picture: true
    entity_picture: |
      [[[
        if (states[ entity.entity_id ].attributes.active_child == "media_player.playstation_5") {
          return states["sensor.ps5_343_activity"].attributes.title_image
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.apple_tv_4k_2") {
          if (states[ entity.entity_id ].attributes.media_artist == "Rocket League Esports") {
            return '/local/images/rlesports.jpg';
          } else {
            return states["media_player.apple_tv_4k_2"].attributes.entity_picture
          }
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.steam_jlnbln") {
          return states["sensor.steam_76561197981585794"].attributes.game_image_main
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.plex_bedroom") {
          return states["media_player.plex_bedroom"].attributes.entity_picture
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.music") {
          if (states["media_player.music"].attributes.active_child == "media_player.bedroom_nest_music_assistant") {
            return states["media_player.alarm_clock_2"].attributes.entity_picture
          } else {
            return states[ entity.entity_id ].attributes.entity_picture
          }
        } else if (states[ entity.entity_id ].attributes.active_child == "media_player.audiobook") {
          if (states['input_select.audiobook'].state == "Harry Potter") {
            if (states['input_number.hp_book'].state == 1.0) {
              return '/local/images/HP_1.jpg';
            } else if (states['input_number.hp_book'].state == 2.0) {
              return '/local/images/HP_2.jpg';
            } else if (states['input_number.hp_book'].state == 3.0) {
              return '/local/images/HP_3.jpg';
            } else if (states['input_number.hp_book'].state == 4.0) {
              return '/local/images/HP_4.jpg';
            } else if (states['input_number.hp_book'].state == 5.0) {
              return '/local/images/HP_5.jpg';
            } else if (states['input_number.hp_book'].state == 6.0) {
              return '/local/images/HP_6.jpg';
            } else if (states['input_number.hp_book'].state == 7.0) {
              return '/local/images/HP_7.jpg';
            }
          }
        } else {
          return states[ entity.entity_id ].attributes.entity_picture
        }
      ]]]
    icon: |
      [[[
        if (states[ entity.entity_id ].attributes.active_child == "media_player.playstation_5") {
          return 'mdi:sony-playstation'
        } else if (states[ entity.entity_id ].attributes.app_name == "YouTube") {
          return 'mdi:youtube-tv'
        } else if (states[ entity.entity_id ].attributes.app_name == "Netflix") {
          return 'mdi:netflix'
        } else if (states[ entity.entity_id ].attributes.app_name == "Plex") {
          return 'mdi:plex'
        } else {
          return 'mdi:television-guide'
        }
      ]]]
    styles:
      grid:
        - grid-template-areas: |
            "i play_state button"
            "i l button"
            "i n button"
            "bar bar bar"
        - grid-template-columns: min-content
        - grid-template-rows: min-content min-content min-content
        - column-gap: 15px
      icon:
        - width: 60px
        - height: 60px
        - color: var(--red)
      card:
        - padding: 15px 15px 15px 15px
        - height: 180px
        - width: 100vw
        - overflow: hidden
        - position: |
            [[[
              if (states["input_boolean.debug_rounded"].state == "on") {
                return 'static'
              } else {
                return 'fixed'
              }
            ]]]
        - margin: 0
        - bottom: 0
        - left: 0
        - z-index: 2
        - border-radius: 20px 20px 0px 0px
        - box-shadow: >-
            rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px
            2px 16px 0px;
      img_cell:
        - background: none
        - border-radius: 10px
        - width: 60px
        - height: 60px
        - justify-self: start
        - align-self: start
        - left: 20px
      entity_picture:
        - object-fit: cover
      state:
        - font-size: 10px
        - justify-self: start
        - align-self: start
        - color: var(--contrast10)
        - padding-left: 25px
      name:
        - font-size: 11px
        - justify-self: start
        - align-self: start
        - padding-left: 20px
        - animation: my-animation 15s linear infinite
      label:
        - justify-self: start
        - align-self: end
        - font-weight: 700
        - padding-left: 20px
        - font-size: 13px
        - margin-top: '-5px'
      custom_fields:
        button:
          - justify-self: end
          - align-self: center
          - padding-right: 20px
          - padding-top: 7px
        play_state:
          - font-size: 10px
          - justify-self: start
          - align-self: start
          - color: var(--contrast14)
          - padding-left: 21px
          - padding-top: 10px
        progress:
          - background-color: var(--contrast10)
          - position: absolute
          - top: unset
          - bottom: 90px
          - left: 40px
          - height: 2px
          - width: 80%
        bar:
          - background-color: var(--green)
          - position: absolute
          - bottom: 90px
          - left: 40px
          - top: unset
          - height: 2px
          - z-index: 1
          - transition: 1s ease-out
    custom_fields:
      button:
        card:
          type: custom:button-card
          icon: mdi:play
          entity: '[[[ return entity.entity_id ]]]'
          show_name: false
          tap_action:
            action: call-service
            service: media_player.media_play_pause
            target:
              entity_id: '[[[ return entity.entity_id ]]]'
          styles:
            card:
              - overflow: visible
              - background: var(--contrast6)
              - border-radius: 10px
            icon:
              - width: 17px
              - color: var(--contrast16)
            img_cell:
              - padding: 10px
              - width: 20px
          state:
            - value: playing
              icon: |
                [[[
                  if (states[entity.entity_id].attributes.active_child == "media_player.playstation_5") {
                    return 'mdi:sony-playstation'
                  } else if (states[entity.entity_id].attributes.active_child == "media_player.steam_jlnbln") {
                    return 'mdi:steam'
                  } else {
                    return 'mdi:pause'
                  }
                ]]]
      play_state: |
        [[[
          if (states[entity.entity_id].attributes.active_child == "media_player.spotify_junglemoney") {
            return states[entity.entity_id].state + " - " + states[entity.entity_id].attributes.source
          } else if (states[entity.entity_id].attributes.active_child == "media_player.playstation_5") {
            return states[entity.entity_id].state + " - Playstation 5"
          } else if (states[entity.entity_id].attributes.active_child == "media_player.audiobook") {
            return states[entity.entity_id].state + " - Alarm Clock"
          } else if (states[entity.entity_id].attributes.active_child == "media_player.plex_bedroom") {
            return states[entity.entity_id].state + " - Bedroom TV"
          } else if (states[entity.entity_id].attributes.active_child == "media_player.steam_jlnbln") {
            return states[entity.entity_id].state + " - Steam"
          } else if (states[entity.entity_id].attributes.active_child == "media_player.apple_tv_4k_2") {
            return states[entity.entity_id].state + " - " + states[entity.entity_id].attributes.app_name
          } else {
            return states[entity.entity_id].state + " - " + states["sensor.music_room"].state
          }
        ]]]
      bar: |
        [[[
          if (entity.attributes.media_position !== undefined) {
          setTimeout(() => {
            let elt = this.shadowRoot,
                card = elt.getElementById('card'),
                container = elt.getElementById('container'),
                bar = elt.getElementById('bar');
            if (elt && card && container && bar) {
                card.insertBefore(bar, container);
                  function update() {
                    let mediaPositionUpdatedAt = entity.attributes.media_position_updated_at,
                        mediaPosition = entity.attributes.media_position,
                        mediaDuration = entity.attributes.media_duration,
                        mediaContentType = entity.attributes.media_content_type;
                    let percentage = entity.state === 'paused'
                      ? (mediaPosition / mediaDuration * 80)
                      : entity.state === 'playing'
                        ? (((Date.now() / 1000) - (new Date(mediaPositionUpdatedAt).getTime() / 1000) + mediaPosition) / mediaDuration * 80)
                        : 0;
                    bar.style.width = percentage.toFixed(1) + '%';
                    requestAnimationFrame(update);
                  }
                  requestAnimationFrame(update);
            }
          }, 0);
          return ' ';}
        ]]]
      progress: |
        [[[
          if (entity.attributes.media_position !== undefined) {
          return ' ';}
        ]]]
  custom_card_greeting:
    template: setup
    show_entity_picture: true
    show_label: true
    entity: |
      [[[
        if (user.name == "Julian") return "person.julian_";
        else return "person." + user.name.toLowerCase();
      ]]]
    name: '[[[return "Hello, " + user.name +"!"]]]'
    label: |
      [[[
        if (entity.state == "home") return "Welcome home.";
        else return "See you later.";
      ]]]
    styles:
      card:
        - padding: 12px
        - background: none
        - box-shadow: none
      grid:
        - grid-template-areas: '"n i" "l i"'
        - grid-template-rows: min-content min-content
        - grid-template-columns: 1fr min-content
      name:
        - justify-self: start
        - font-weight: 700
        - font-size: 15px
      label:
        - justify-self: start
        - font-size: 12px
        - font-weight: 500
        - color: var(--contrast14)
      entity_picture:
        - width: 40px
        - height: 40px
        - border-radius: 12px
  nav_button:
    template: setup
    variables:
      navigation_path: home
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      state_on: 'on'
      state_off: 'off'
      background_color_on: var(--red)
      background_color_off: var(--green)
      color_on: var(--black)
      color_off: var(--black)
    type: custom:button-card
    icon: '[[[ return entity.attributes.icon ]]]'
    show_label: true
    tap_action:
      action: navigate
      navigation_path: '[[[ return variables.navigation_path ]]]'
      haptic: success
    hold_action:
      action: more-info
    state:
      - value: '[[[ return variables.state_on ]]]'
        icon: '[[[ return variables.icon_on ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_on ]]]'
          name:
            - color: '[[[ return variables.color_on ]]]'
          label:
            - color: '[[[ return variables.color_on ]]]'
          icon:
            - color: '[[[ return variables.color_on ]]]'
      - value: '[[[ return variables.state_off ]]]'
        icon: '[[[ return variables.icon_off ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_off ]]]'
          name:
            - color: '[[[ return variables.color_off ]]]'
          label:
            - color: '[[[ return variables.color_off ]]]'
          icon:
            - color: '[[[ return variables.color_off ]]]'
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: mdi:arrow-right-bold
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 27px
              - height: 27px
            icon:
              - width: 15px
              - color: var(--contrast20)
    styles:
      grid:
        - grid-template-areas: '"i l icon2" "n n n"'
        - grid-template-columns: 20px 1fr 1fr
        - grid-template-rows: 1fr min-content
      icon:
        - width: 20px
        - margin-top: 7px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      img_cell:
        - justify-content: flex-start
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 3px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
        - opacity: 0.7
      card:
        - height: 75px
        - background-color: |
            [[[
              if (entity.state == "on") return "var(--yellow)";
              else return "var(--contrast2)";
            ]]]
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - z-index: 1
      label:
        - justify-self: start
        - font-size: 20px
        - margin-top: 11px
        - padding-left: 3px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      custom_fields:
        icon2:
          - margin-top: '-20px'
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 10px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
  nav_button_small:
    template: setup
    variables:
      navigation_path: home
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      state_on: 'on'
      state_off: 'off'
      background_color_on: var(--red)
      background_color_off: var(--green)
      color_on: var(--black)
      color_off: var(--black)
    type: custom:button-card
    icon: '[[[ return entity.attributes.icon ]]]'
    show_label: true
    tap_action:
      action: navigate
      navigation_path: '[[[ return variables.navigation_path ]]]'
      haptic: success
    hold_action:
      action: more-info
    state:
      - value: '[[[ return variables.state_on ]]]'
        icon: '[[[ return variables.icon_on ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_on ]]]'
          name:
            - color: '[[[ return variables.color_on ]]]'
          label:
            - color: '[[[ return variables.color_on ]]]'
          icon:
            - color: '[[[ return variables.color_on ]]]'
      - value: '[[[ return variables.state_off ]]]'
        icon: '[[[ return variables.icon_off ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_off ]]]'
          name:
            - color: '[[[ return variables.color_off ]]]'
          label:
            - color: '[[[ return variables.color_off ]]]'
          icon:
            - color: '[[[ return variables.color_off ]]]'
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: mdi:arrow-right-bold
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 27px
              - height: 27px
            icon:
              - width: 15px
              - color: var(--contrast20)
    styles:
      grid:
        - grid-template-areas: '"l l icon2" "i n n"'
        - grid-template-columns: 14px 1fr 1fr
        - grid-template-rows: 1fr min-content
      icon:
        - width: 14px
        - margin-bottom: 5px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      img_cell:
        - justify-content: flex-start
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 2px
        - margin-left: 3px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
        - opacity: 0.7
      card:
        - height: 75px
        - background-color: |
            [[[
              if (entity.state == "on") return "var(--yellow)";
              else return "var(--contrast2)";
            ]]]
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - z-index: 1
      label:
        - justify-self: start
        - font-size: 20px
        - margin-top: 11px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      custom_fields:
        icon2:
          - margin-top: '-20px'
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 10px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
  nav_button_state_small:
    template: setup
    variables:
      navigation_path: home
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      state_on: 'on'
      state_off: 'off'
      background_color_on: var(--red)
      background_color_off: var(--green)
      color_on: var(--black)
      color_off: var(--black)
    type: custom:button-card
    icon: '[[[ return entity.attributes.icon ]]]'
    show_label: false
    show_state: true
    tap_action:
      action: navigate
      navigation_path: '[[[ return variables.navigation_path ]]]'
      haptic: success
    hold_action:
      action: more-info
    state:
      - value: '[[[ return variables.state_on ]]]'
        icon: '[[[ return variables.icon_on ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_on ]]]'
          name:
            - color: '[[[ return variables.color_on ]]]'
          state:
            - color: '[[[ return variables.color_on ]]]'
          icon:
            - color: '[[[ return variables.color_on ]]]'
      - value: '[[[ return variables.state_off ]]]'
        icon: '[[[ return variables.icon_off ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_off ]]]'
          name:
            - color: '[[[ return variables.color_off ]]]'
          state:
            - color: '[[[ return variables.color_off ]]]'
          icon:
            - color: '[[[ return variables.color_off ]]]'
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: mdi:arrow-right-bold
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 27px
              - height: 27px
            icon:
              - width: 15px
              - color: var(--contrast20)
    styles:
      grid:
        - grid-template-areas: '"s s icon2" "i n n"'
        - grid-template-columns: 14px 1fr 1fr
        - grid-template-rows: 1fr min-content
      icon:
        - width: 14px
        - margin-bottom: 5px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      img_cell:
        - justify-content: flex-start
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 2px
        - margin-left: 3px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
        - opacity: 0.7
      card:
        - height: 75px
        - background-color: |
            [[[
              if (entity.state == "on") return "var(--yellow)";
              else return "var(--contrast2)";
            ]]]
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - z-index: 1
      state:
        - justify-self: start
        - font-size: 20px
        - margin-top: 11px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      custom_fields:
        icon2:
          - margin-top: '-20px'
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 10px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
  title:
    template: setup
    type: custom:button-card
    styles:
      grid:
        - grid-template-areas: '"n" "badge"'
      card:
        - background: none
        - padding: 16px 0
        - '--mdc-ripple-press-opacity': 0
        - box-shadow: none
        - margin-top: 70px
        - margin-bottom: '-20px'
      name:
        - font-size: 32px
        - color: var(--contrast20)
      custom_fields:
        badge:
          - margin: 16px auto 0 auto
          - '--mdc-ripple-press-opacity': 0.5
  square:
    template: setup
    variables:
      color: var(--purple)
    type: custom:button-card
    icon: '[[[ return entity.attributes.icon ]]]'
    show_name: false
    aspect_ratio: 1/1
    tap_action:
      action: toggle
      haptic: medium
    styles:
      card:
        - border-radius: 24px
        - background-color: '[[[ return variables.color ]]]'
      icon:
        - color: |
            [[[
              if (entity.state == "on") return "var(--white)";
              else return "var(--black)";
            ]]]
  light_switch:
    template: setup
    variables:
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      color: var(--yellow)
    icon: '[[[ return entity.attributes.icon ]]]'
    show_label: false
    show_state: true
    tap_action:
      action: toggle
      haptic: success
    hold_action:
      action: more-info
    state:
      - value: 'on'
        icon: '[[[ return variables.icon_on ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.color ]]]'
      - value: 'off'
        icon: '[[[ return variables.icon_off ]]]'
        styles:
          card:
            - background-color: var(--contrast2)
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: |
            [[[
              if (entity.state == "on"){
                return "mdi:toggle-switch";
              } else {
                return "mdi:toggle-switch-off-outline";
              }
            ]]]
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 35px
              - height: 35px
            icon:
              - width: 20px
              - color: var(--contrast20)
    styles:
      grid:
        - grid-template-areas: '"i s icon2" "n n n"'
        - grid-template-columns: 25px 1fr 1fr
        - grid-template-rows: 1fr min-content
      icon:
        - width: 25px
        - padding-top: 10px
        - margin-top: 7px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      img_cell:
        - justify-content: flex-start
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 3px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
        - opacity: 0.7
      card:
        - height: 90px
        - background-color: |
            [[[
              if (entity.state == "on") return "var(--yellow)";
              else return "var(--contrast2)";
            ]]]
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - z-index: 1
      state:
        - justify-self: start
        - font-size: 20px
        - margin-top: 11px
        - padding-top: 10px
        - padding-left: 3px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      custom_fields:
        icon2:
          - margin-top: '-27px'
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 20px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
  light_slider:
    template: setup
    type: custom:button-card
    icon: '[[[ return entity.attributes.icon ]]]'
    tap_action:
      action: toggle
      haptic: medium
    hold_action:
      action: more-info
      haptic: medium
    custom_fields:
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return entity.entity_id ]]]'
          colorMode: brightness
          styles:
            container:
              - background: none
              - border-radius: 100px
              - overflow: visible
            card:
              - height: 16px
              - padding: 0 8px
              - background: |
                  [[[
                    if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                    else return "var(--contrast4)";
                  ]]]
            track:
              - overflow: visible
              - background: none
            progress:
              - background: none
            thumb:
              - background: |
                  [[[
                    if (entity.state == "on") return "var(--black)";
                    if (entity.state == "off") return "var(--contrast20)";
                    else return "var(--contrast8)";
                  ]]]
              - top: 2px
              - right: '-8px'
              - height: 12px
              - width: 12px
              - border-radius: 10px
    styles:
      grid:
        - grid-template-areas: '"i" "n" "slider"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content
      card:
        - background: var(--contrast2)
        - padding: 16px
        - '--mdc-ripple-press-opacity': 0
      img_cell:
        - justify-self: start
        - width: 24px
      icon:
        - width: 24px
        - height: 24px
        - color: var(--contrast8)
      name:
        - justify-self: start
        - font-size: 14px
        - margin: 4px 0 12px 0
        - color: var(--contrast8)
  temperature_slider:
    template: setup
    type: custom:button-card
    name: Temperature
    custom_fields:
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return entity.entity_id ]]]'
          colorMode: temperature
          styles:
            container:
              - border-radius: 100px
              - overflow: visible
              - background: none
            card:
              - height: 40px
              - padding: 0 20px
              - background: var(--temperature)
            track:
              - overflow: visible
              - background: none
            progress:
              - background: none
            thumb:
              - background: var(--black)
              - top: 2px
              - right: '-18px'
              - height: 36px
              - width: 36px
              - border-radius: 100px
    styles:
      grid:
        - grid-template-areas: '"n" "slider"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content
      card:
        - background: var(--temperature-tint)
        - padding: 16px
        - '--mdc-ripple-press-opacity': 0
      name:
        - justify-self: start
        - font-size: 14px
        - margin: 4px 0 12px 0
        - color: var(--contrast20)
  brightness_slider:
    template: setup
    type: custom:button-card
    name: Brightness
    custom_fields:
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return entity.entity_id ]]]'
          colorMode: brightness
          styles:
            container:
              - border-radius: 100px
              - overflow: visible
              - background: none
            card:
              - height: 40px
              - padding: 0 20px
              - background: var(--brightness)
            track:
              - overflow: visible
              - background: none
            progress:
              - background: none
            thumb:
              - background: var(--black)
              - top: 2px
              - right: '-18px'
              - height: 36px
              - width: 36px
              - border-radius: 100px
    styles:
      grid:
        - grid-template-areas: '"n" "slider"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content
      card:
        - background: var(--brightness-tint)
        - padding: 16px
        - '--mdc-ripple-press-opacity': 0
      name:
        - justify-self: start
        - font-size: 14px
        - margin: 4px 0 12px 0
        - color: var(--contrast20)
  light_rgb:
    template: setup
    variables:
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      color: var(--yellow)
    label: 'Off'
    icon: '[[[ return entity.attributes.icon ]]]'
    show_label: true
    show_state: false
    tap_action:
      action: toggle
      haptic: success
    hold_action:
      action: more-info
    double_tap_action:
      action: call-service
      service: script.turn_light_to_random_color
      data:
        target: '[[[ return entity.entity_id ]]]'
      haptic: success
    state:
      - value: 'on'
        label: '[[[ return Math.round(entity.attributes.brightness/255*100) + ''%'' ]]]'
        styles:
          card:
            - background: |
                [[[
                    var color = entity.attributes?.rgb_color;
                    if (entity.state != "on"){
                      return 'var(--contrast20)';
                    }
                    else if (color){
                      return 'rgba(' + color + ')'
                    }
                    else{
                      return 'var(--yellow)'
                    }
                ]]]
          icon:
            - color: var(--black)
          name:
            - color: var(--black)
      - value: 'off'
        styles:
          icon:
            - color: var(--contrast20)
          name:
            - color: var(--contrast20)
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: '[[[ return entity.attributes.icon ]]]'
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 35px
              - height: 35px
            icon:
              - width: 20px
              - color: var(--contrast20)
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return entity.entity_id ]]]'
          colorMode: brightness
          styles:
            container:
              - background: none
              - border-radius: 100px
              - overflow: visible
            card:
              - height: 16px
              - padding: 0 8px
              - background: |
                  [[[
                    if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                    else return "var(--contrast4)";
                  ]]]
            track:
              - overflow: visible
              - background: none
            progress:
              - background: none
            thumb:
              - background: |
                  [[[
                    if (entity.state == "on") return "var(--black)";
                    if (entity.state == "off") return "var(--contrast20)";
                    else return "var(--contrast8)";
                  ]]]
              - top: 2px
              - right: '-8px'
              - height: 12px
              - width: 12px
              - border-radius: 10px
    styles:
      grid:
        - grid-template-areas: '"l icon2" "n n" "slider slider"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr min-content
      icon:
        - width: 20px
        - margin-top: 7px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      img_cell:
        - justify-content: flex-start
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 8px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
        - opacity: 0.7
      card:
        - height: 90px
        - background-color: |
            [[[
              if (entity.state == "on") return "var(--yellow)";
              else return "var(--contrast2)";
            ]]]
        - box-shadow: none
        - border-radius: 24px
        - padding: 0px 0 12px 14px
        - z-index: 1
      label:
        - justify-self: start
        - font-size: 20px
        - margin-top: 20px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      custom_fields:
        icon2:
          - margin-top: 5px
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 20px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
        slider:
          - padding-right: 16px
  back_button:
    template: setup
    type: custom:button-card
    name: Back to home screen
    show_icon: false
    styles:
      card:
        - background: none
        - border-radius: 24px
        - color: var(--contrast20)
        - margin-top: 8px
        - padding: 18px 0px
        - font-size: 16px
        - border: 2px solid var(--contrast5)
    tap_action:
      action: navigate
      navigation_path: home
      haptic: medium
  sensor:
    template: setup
    variables:
      unit: '%'
    type: custom:button-card
    show_label: true
    custom_fields:
      eenheid: '[[[ return "&nbsp;" + variables.unit ]]]'
    styles:
      grid:
        - grid-template-areas: '"l eenheid" "n n"'
        - grid-template-columns: min-content min-content
      label:
        - font-size: 27px
        - color: var(--contrast20)
      card:
        - height: 80px
        - border-radius: 24px
        - padding: 0px 0 6px 16px
        - box-sizing: border-box
        - background: var(--contrast2)
        - box-shadow: none
      name:
        - justify-self: start
        - font-size: 12px
        - color: var(--contrast20)
        - margin-top: '-30px'
      custom_fields:
        eenheid:
          - font-size: 12px
          - color: var(--contrast9)
          - padding-left: 2px
    tap_action:
      action: more-info
  switch_template:
    template: setup
    variables:
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      color: var(--yellow)
    icon: '[[[ return entity.attributes.icon ]]]'
    show_label: false
    show_state: true
    tap_action:
      action: toggle
      haptic: success
    hold_action:
      action: more-info
    state:
      - value: 'on'
        icon: '[[[ return variables.icon_on ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.color ]]]'
      - value: 'off'
        icon: '[[[ return variables.icon_off ]]]'
        styles:
          card:
            - background-color: var(--contrast2)
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: |
            [[[
              if (entity.state == "on"){
                return "mdi:toggle-switch";
              } else {
                return "mdi:toggle-switch-off-outline";
              }
            ]]]
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 27px
              - height: 27px
            icon:
              - width: 15px
              - color: var(--contrast20)
    styles:
      grid:
        - grid-template-areas: '"i s icon2" "n n n"'
        - grid-template-columns: 20px 1fr 1fr
        - grid-template-rows: 1fr min-content
      icon:
        - width: 20px
        - margin-top: 7px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      img_cell:
        - justify-content: flex-start
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 3px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
        - opacity: 0.7
      card:
        - height: 75px
        - background-color: |
            [[[
              if (entity.state == "on") return "var(--yellow)";
              else return "var(--contrast2)";
            ]]]
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - z-index: 1
      state:
        - justify-self: start
        - font-size: 20px
        - margin-top: 11px
        - padding-left: 3px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      custom_fields:
        icon2:
          - margin-top: '-20px'
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 10px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
  switch_label_template:
    template: setup
    variables:
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      color: var(--yellow)
    icon: '[[[ return entity.attributes.icon ]]]'
    show_label: true
    show_state: false
    tap_action:
      action: toggle
      haptic: success
    hold_action:
      action: more-info
    state:
      - value: 'on'
        icon: '[[[ return variables.icon_on ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.color ]]]'
      - value: 'off'
        icon: '[[[ return variables.icon_off ]]]'
        styles:
          card:
            - background-color: var(--contrast2)
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: |
            [[[
              if (entity.state == "on"){
                return "mdi:toggle-switch";
              } else {
                return "mdi:toggle-switch-off-outline";
              }
            ]]]
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 27px
              - height: 27px
            icon:
              - width: 15px
              - color: var(--contrast20)
    styles:
      grid:
        - grid-template-areas: '"i l icon2" "n n n"'
        - grid-template-columns: 20px 1fr 1fr
        - grid-template-rows: 1fr min-content
      icon:
        - width: 20px
        - margin-top: 7px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      img_cell:
        - justify-content: flex-start
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 3px
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
        - opacity: 0.7
      card:
        - height: 75px
        - background-color: |
            [[[
              if (entity.state == "on") return "var(--yellow)";
              else return "var(--contrast2)";
            ]]]
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - z-index: 1
      label:
        - justify-self: start
        - font-size: 20px
        - margin-top: 11px
        - padding-left: 3px
        - font-weight: 500
        - color: |
            [[[
              if (entity.state == "on") return "var(--black)";
              else return "var(--contrast20)";
            ]]]
      custom_fields:
        icon2:
          - margin-top: '-20px'
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 10px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
  button_template:
    template: setup
    variables:
      icon2: '[[[ return entity.attributes.icon ]]]'
      icon_on: '[[[ return entity.attributes.icon ]]]'
      icon_off: '[[[ return entity.attributes.icon ]]]'
      state_on: 'on'
      state_off: 'off'
      background_color_on: var(--yellow)
      background_color_off: var(--contrast2)
      color_on: var(--black)
      color_off: var(--contrast20)
    type: custom:button-card
    icon: '[[[ return entity.attributes.icon ]]]'
    show_label: true
    show_icon: false
    tap_action:
      action: more-info
      haptic: success
    hold_action:
      action: more-info
    state:
      - value: '[[[ return variables.state_on ]]]'
        icon: '[[[ return variables.icon_on ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_on ]]]'
          name:
            - color: '[[[ return variables.color_on ]]]'
          label:
            - color: '[[[ return variables.color_on ]]]'
          icon:
            - color: '[[[ return variables.color_on ]]]'
      - value: '[[[ return variables.state_off ]]]'
        icon: '[[[ return variables.icon_off ]]]'
        styles:
          card:
            - background-color: '[[[ return variables.background_color_off ]]]'
          name:
            - color: '[[[ return variables.color_off ]]]'
          label:
            - color: '[[[ return variables.color_off ]]]'
          icon:
            - color: '[[[ return variables.color_off ]]]'
    custom_fields:
      icon2:
        card:
          type: custom:button-card
          icon: '[[[ return variables.icon2 ]]]'
          styles:
            card:
              - background-color: var(--contrast1)
              - width: 27px
              - height: 27px
            icon:
              - width: 15px
              - color: var(--contrast20)
    styles:
      grid:
        - grid-template-areas: '"l l icon2" "n n n"'
        - grid-template-columns: 14px 1fr 1fr
        - grid-template-rows: 1fr min-content
      icon:
        - width: 14px
        - margin-bottom: 5px
        - color: '[[[ return variables.color_off ]]]'
      img_cell:
        - justify-content: flex-start
      name:
        - justify-self: start
        - font-size: 11px
        - margin-bottom: 2px
        - color: '[[[ return variables.color_off ]]]'
        - opacity: 0.7
      card:
        - height: 75px
        - background-color: '[[[ return variables.background_color_off ]]]'
        - box-shadow: none
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - z-index: 1
      label:
        - justify-self: start
        - font-size: 20px
        - margin-top: 11px
        - font-weight: 500
        - color: '[[[ return variables.color_off ]]]'
      custom_fields:
        icon2:
          - margin-top: '-20px'
          - justify-self: end
          - align-self: center
          - width: 24px
          - padding-right: 10px
          - color: |
              [[[
                if (entity.state == "on") return "var(--black)";
                else return "var(--contrast20)";
              ]]]
  en-en:
    variables:
      lang_on: 'On'
      lang_off: 'Off'
      lang_not_home: Away
      lang_home: Home
      lang_paused: paused
      lang_playing: playing
      lang_stopped: stopped
      lang_heat: heat
      lang_armed_night: Night
      lang_armed_custom_bypass: Silent Alarm
      lang_arming: Arming
      lang_armed_away: Away
      lang_disarmed: Disarmed
      date_format: de-DE
      time_unit: ' Uhr'
  state_engine:
    template:
      - en-en
    variables:
      round: -1
      multiplier: 1
      show_last_changed: false
      force_date: false
      show_unit: false
      has_time: >-
        [[[ return states[entity.entity_id].attributes.has_time != null &&
        states[entity.entity_id].attributes.has_time; ]]]
      has_date: >-
        [[[ return states[entity.entity_id].attributes.has_date != null &&
        states[entity.entity_id].attributes.has_date; ]]]
    custom_fields:
      cs: |
        [[[
          let state = states[entity.entity_id].state;

          if(!isNaN(state)) {
            state = state * variables.multiplier;

            let unit = variables.show_unit ? states[entity.entity_id].attributes.unit_of_measurement : '';

            if(variables.round >= 0) {
              let exp = Math.pow(10,variables.round);
              state = Math.round(state * exp) / exp;
            }

            return state + ' ' + unit;
          } 
          
          if ((variables.has_time || variables.has_date) || variables.show_last_changed || variables.show_last_triggered || variables.force_date) {

            let has_date = variables.has_date;
            let has_time = variables.has_time;

            let d = '';

            if (variables.show_last_changed) {
              d = new Date(states[entity.entity_id].last_changed);
            } else if (variables.show_last_triggered) {
              d = new Date(states[entity.entity_id].attributes.last_triggered);
            } else {
              d = new Date(state);
            }

            d = variables.force_date ? new Date(d) : d;

            if (!has_date && has_time) {
              return d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) + 'Uhr';
            } else if (!has_time && has_date) {
              return d.toLocaleString(variables.date_format,{day:'numeric', month:'short', year:'numeric'});
            } else {
              let d_date = d.toLocaleString(variables.date_format,{day:'numeric', month:'short', year:'numeric'});
              let today = (new Date()).toLocaleString(variables.date_format,{day:'numeric', month:'short', year:'numeric'});
              
              if(d_date == today) {
                let time = d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
                return time + variables.time_unit;
              }

              return d_date;
            }
          }

          var lang = {
            "on": variables.lang_on,
            "off": variables.lang_off,
            "not_home": variables.lang_not_home,
            "home": variables.lang_home,
            "paused": variables.lang_paused,
            "playing": variables.lang_playing,
            "stopped": variables.lang_stopped,
            "heat": variables.lang_heat,
            "night": variables.lang_armed_night,
            "armed_custom_bypass": variables.lang_armed_custom_bypass,
            "arming": variables.lang_arming,
            "armed_away": variables.lang_armed_away,
            "disarmed": variables.lang_disarmed
          };

          let trans_state = lang[state];

          return trans_state != null ? trans_state : state; 
        ]]]
      es: |
        [[[
          if ((variables.has_time || variables.has_date) || variables.show_last_changed || variables.show_last_triggered || variables.force_date) {
            let state = states[entity.entity_id].state;

            let has_time = variables.has_time;
            let has_date = variables.has_date;

            let d = '';

            if (variables.show_last_changed) {
              d = new Date(states[entity.entity_id].last_changed);
            } else if (variables.show_last_triggered) {
              d = new Date(states[entity.entity_id].attributes.last_triggered);
            } else {
              d = new Date(state);
            }

            d = variables.force_date ? new Date(d) : d;

            let d_date = d.toLocaleString('de-de',{day:'numeric', month:'short', year:'numeric'});
            let today = (new Date()).toLocaleString('de-de',{day:'numeric', month:'short', year:'numeric'});
              
            if(d_date != today) {
              let time = d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
              return time + variables.time_unit;
            }
          }
        ]]]
  setup:
    state:
      - value: unavailable
        icon: mdi:alert-circle-outline
        styles:
          state:
            - text-decoration: line-through
          label:
            - text-decoration: line-through
    styles:
      name:
        - font-family: null
      label:
        - font-family: null
      state:
        - font-family: null
  base:
    show_state: false
    template:
      - state_engine
    variables:
      active_color: orange
      max_height: false
      on_state: ''
    styles:
      grid:
        - grid-template-areas: '"i es" "n n" "space space" "cs cs"'
        - grid-template-columns: 1fr min-content
        - grid-template-rows: min-content min-content 1fr min-content
      card:
        - z-index: 0
        - background: >-
            [[[ return states[entity.entity_id].state == 'on' ||
            states[entity.entity_id].state == variables.on_state ? 'var(--' +
            variables.active_color + ')' : 'var(--contrast6)'; ]]]
        - padding: 16px
        - '--mdc-ripple-press-opacity': 0
        - height: '[[[ return variables.max_height ? ''100%'' : ''100px''; ]]]'
      img_cell:
        - z-index: 1
        - justify-self: start
        - width: 24px
        - height: 24px
        - line-height: 24px
        - border-radius: 8px
      icon:
        - z-index: 2
        - width: 24px
        - height: 24px
        - line-height: 24px
        - color: >-
            [[[ return states[entity.entity_id].state == 'on' ||
            states[entity.entity_id].state == variables.on_state ?
            'var(--black)' : 'var(--contrast18)'; ]]]
      name:
        - z-index: 3
        - text-align: start
        - white-space: no-wrap
        - justify-self: start
        - font-size: 13px
        - color: >-
            [[[ return states[entity.entity_id].state == 'on' ||
            states[entity.entity_id].state == variables.on_state ?
            'var(--black)' : 'var(--contrast18)'; ]]]
        - text-overflow: ellipsis
      custom_fields:
        cs:
          - text-align: left
          - white-space: '[[[ return variables.max_height ? ''normal'' : ''no_wrap''; ]]]'
          - z-index: 4
          - justify-self: start
          - font-size: 14px
          - margin: 6px 0 2px 0
          - line-height: 16px
          - width: 100%
          - color: >-
              [[[ return states[entity.entity_id].state == 'on' ||
              states[entity.entity_id].state == variables.on_state ?
              'var(--black)' : 'var(--contrast10)'; ]]]
        es:
          - min-width: 12px
          - z-index: 5
          - justify-self: end
          - font-size: 12px
          - height: 16px
          - border-radius: 16px
          - padding: 2px 4px 2px 4px
          - background: var(--darker)
          - color: >-
              [[[ return states[entity.entity_id].state == 'on' ||
              states[entity.entity_id].state == variables.on_state ?
              'var(--black)' : 'var(--contrast10)'; ]]]
    style: |
      ha-card {
        transition: 300ms !important;
      }
  alarm:
    template:
      - base
      - setup
    icon: mdi:shield-home
    variables:
      active_color: red
    state:
      - value: disarmed
        icon: mdi:shield-off-outline
        custom_fields:
          cs: Disarmed
      - value: armed_night
        icon: mdi:shield-moon
        custom_fields:
          cs: Night
      - value: arming
        icon: mdi:shield-lock-open
        styles:
          icon:
            - animation: blink 2s ease infinite
        custom_fields:
          cs: Arming...
      - value: armed_away
        icon: mdi:shield-lock
        custom_fields:
          cs: Away
      - value: armed_home
        icon: mdi:shield-home
        custom_fields:
          cs: Home
      - value: triggered
        icon: mdi:shield-alert-outline
        styles:
          card:
            - background-color: var(--red)
          name:
            - color: var(--black)
          icon:
            - color: var(--black)
            - animation: blink 2s ease infinite
          custom_fields:
            cs:
              - color: var(--black)
            es:
              - color: var(--black)
        custom_fields:
          cs: Triggered
    styles:
      grid:
        - grid-template-areas: '"i i" "cs ec" "n ec"'
        - grid-template-columns: 1fr min-content
        - grid-template-rows: 1fr min-content min-content min-content
      custom_fields:
        ec:
          - justify-self: start
          - justify-content: center
        cs:
          - color: var(--contrast18)
        es:
          - color: var(--contrast18)
      card:
        - background: var(--contrast2)
      icon:
        - color: var(--contrast18)
      name:
        - color: var(--contrast12)
    custom_fields:
      ec:
        card:
          type: tile
          entity: '[[[ return entity.entity_id; ]]]'
          color: red
          features:
            - type: alarm-modes
              modes:
                - armed_away
                - armed_night
                - armed_home
                - disarmed
          card_mod:
            style:
              .: |
                ha-card .content { 
                  display: none;
                } ha-card {
                  width: 200px;
                  background: transparent;
                  border-radius: 0px;
                } ha-card.active {
                  height: 40px;
                }
              .features hui-alarm-modes-tile-feature $: |
                .container {
                  padding: 0px !important;
                }
              .features hui-alarm-modes-tile-feature $ .container ha-control-select $ .container: |
                .option {
                  background-color: transparent !important;
                  border-radius: 13px !important;
                }
                card_mod:
              hui-card-features $:
                hui-alarm-modes-card-feature $:
                  ha-control-select$: |
                    .container {
                      color: var(--contrast10) !important;
                      --control-select-color: var(--green) !important;
                           }
views:
  - title: Home
    header:
      card:
        type: markdown
        text_only: true
        content: |-

          {% if (states("sensor.time_of_day") == "morning") %}
            # Good Morning, {{user}}!
            {{ states("input_text.ai_morning_brief") }}
          {% elif (states("sensor.time_of_day") == "day") %}
            # Hey, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}.
          {% elif (states("sensor.time_of_day") == "evening") %}
            # Good Evening, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% elif (states("sensor.time_of_day") == "night") %}
            # Good Night, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% endif %}
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      layout: responsive
      badges_position: top
      badges_wrap: scroll
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.vacation_mode
        color: orange
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.vacation_mode
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_julians_iphone
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_julians_iphone
            state: 'off'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_anna
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_anna
            state: 'off'
          - condition: user
            users:
              - 82def695e9504f63b1eb09150073737d
        icon: mdi:cellphone-message-off
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.lights_on_count
        color: amber
        visibility:
          - condition: numeric_state
            entity: sensor.lights_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#lights
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.chores_on_count
        color: yellow
        visibility:
          - condition: numeric_state
            entity: sensor.chores_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#chores
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            {{ 100 - state_attr('sensor.dishwasher_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            mdi:dishwasher
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            mdi:dishwasher-alert
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            mdi:dishwasher
          {% else %}
            mdi:dishwasher-off
          {% endif %}    
        color: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            blue
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            green
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.dishwasher_status
        label: ''
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_dishwasher
          data: {}
        visibility:
          - condition: state
            entity: sensor.dishwasher_status
            state_not: 'Off'
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            {{ 100 - state_attr('sensor.waschmaschine_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            mdi:washing-machine
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            mdi:washing-machine-alert
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            mdi:washing-machine
          {% else %}
            mdi:washing-machine-off
          {% endif %}
        color: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            blue
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            green
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.washing_machine_status
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_laundry
          data: {}
        visibility:
          - condition: state
            entity: sensor.washing_machine_status
            state_not: 'Off'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.prusalink_progress
        icon: mdi:printer-3d
        color: orange
        visibility:
          - condition: state
            entity: sensor.prusalink
            state: printing
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#3d-printer
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: vacuum.dobby
        color: purple
        visibility:
          - condition: state
            entity: vacuum.dobby
            state_not: docked
        tap_action:
          action: navigate
          navigation_path: home#vacuum
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.fan_outlet
        color: blue
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.fan_outlet
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.desk_webcam
        color: green
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.desk_webcam
            state: 'on'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.wake_time_1
        icon: mdi:alarm
        color: yellow
        visibility:
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
              - 82def695e9504f63b1eb09150073737d
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - entity: binary_sensor.is_alarm_on
                    state: 'on'
                  - entity: sensor.time_of_day
                    state_not: day
                  - condition: state
                    entity: input_boolean.alarm_has_run
                    state: 'off'
                  - entity: alarm_control_panel.security_system
                    state_not: armed_away
                  - entity: alarm_control_panel.security_system
                    state_not: triggered
                  - condition: state
                    entity: person.julian_
                    state: home
              - condition: state
                entity: input_boolean.sound_alarm_is_running
                state: 'on'
        tap_action:
          action: navigate
          navigation_path: home#alarm
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.raspberry_pi_health_attention
        icon: mdi:minidisc
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.raspberry_pi_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sensor.junglemoneynas_volume_1_status
        icon: mdi:nas
        color: red
        visibility:
          - condition: state
            entity: sensor.junglemoneynas_volume_1_status
            state_not: normal
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#nas
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.battery_health_attention
        icon: mdi:battery-20
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.battery_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#battery
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('alarm_control_panel.security_system', 'triggered') or
                is_state('alarm_control_panel.alexa_guard_431b6', 'triggered')  %}
                  TRIGGERED
                {% elif is_state('alarm_control_panel.security_system', 'armed_away')  %}
                  Armed
                {% elif is_state('alarm_control_panel.security_system', 'armed_home') %}
                  Home
                {% elif is_state('alarm_control_panel.security_system', 'armed_night') %}
                  Night
                {% else %}
                  Arming...
                {% endif %}
        icon: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            mdi:shield-home-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            mdi:shield-lock-outline
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            mdi:shield-alert-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            mdi:shield-moon-outline
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            mdi:shield-off-outline
          {% else %}
            mdi:shield-alert-outline
          {% endif %}
        color: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            green
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            red
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            orange
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            blue
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            grey
          {% else %}
            yellow
          {% endif %}
        entity: alarm_control_panel.security_system
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: '{{ states("sensor.window_open_count") }}'
        icon: mdi:window-open-variant
        entity: group.window_sensors
        color: red
        tap_action:
          action: more-info
        visibility:
          - condition: numeric_state
            entity: sensor.window_open_count
            above: 0
      - type: custom:mushroom-template-badge
        icon: |-
          {% if is_state('lock.flat_door', 'locked') %}
            mdi:lock
          {% else %}
            mdi:lock-open
          {% endif %}
        color: |-
          {% if is_state('lock.flat_door', 'locked') %}
            green
          {% else %}
            red
          {% endif %}
        entity: lock.flat_door
        double_tap_action:
          action: call-service
          service: lock.lock
          data: {}
          target:
            entity_id: lock.flat_door
        content: ''
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.home_assistant_update
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.home_assistant_update
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
          - condition: screen
            media_query: '(min-width: 768px)'
        tap_action:
          action: navigate
          navigation_path: server#updates
      - type: custom:mushroom-template-badge
        icon: mdi:account-tie-voice
        color: white
        content: ''
        tap_action:
          action: assist
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: custom:mushroom-template-badge
        entity: person.julian_
        picture: '{{ state_attr("person.julian_","entity_picture") }}'
        content: '{{ states("sensor.julians_apple_watch_area") }}'
        label: Julian
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        icon: ''
        color: ''
        tap_action:
          action: navigate
          navigation_path: home#julian
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:button-card
                    styles:
                      grid:
                        - grid-template-areas: '''item6 item1 item3 item2 item4 item5'''
                        - grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr
                      card:
                        - padding: 5px 0px
                        - background: none
                      custom_fields:
                        item1:
                          - justify-self: center
                        item2:
                          - justify-self: center
                        item3:
                          - justify-self: center
                        item4:
                          - justify-self: center
                        item5:
                          - justify-self: center
                        item6:
                          - justify-self: center
                    custom_fields:
                      item1:
                        card:
                          type: custom:button-card
                          icon: |
                            [[[
                              if (states['binary_sensor.heating'].state == "on") return "mdi:fire";
                              else if (states['binary_sensor.heating_auto'].state == "off") return "mdi:thermometer";
                              else return "mdi:thermostat";
                            ]]]
                          name: Temperature
                          label: >-
                            [[[ return states["sensor.temperature_mean"].state +
                            "°C" ]]]
                          show_label: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['binary_sensor.heating'].state == "on") return "var(--red)";
                                    else if (states['binary_sensor.heating_auto'].state == "off") return "var(--green)";
                                    else return "var(--contrast10)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#climate'
                      item2:
                        card:
                          type: custom:button-card
                          icon: mdi:lightning-bolt
                          name: Energy
                          label: >-
                            [[[ return
                            states["sensor.tasmota_power_power_curr"].state +
                            "kwh" ]]]
                          show_label: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--yellow)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: energy
                      item3:
                        card:
                          type: custom:button-card
                          icon: mdi:water-percent
                          name: Humidity
                          label: >-
                            [[[ return states["sensor.humidity_mean"].state +
                            "%"]]]
                          show_label: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['sensor.humidity_maximum'].state > "70") return "var(--red)";
                                    else return "var(--blue)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#climate'
                      item4:
                        card:
                          type: custom:button-card
                          entity: binary_sensor.is_alarm_on
                          icon: mdi:alarm-off
                          name: Alarm
                          label: '[[[ return states["sensor.wake_time_1"].state ]]]'
                          show_label: true
                          state:
                            - value: 'on'
                              icon: mdi:alarm
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['binary_sensor.is_alarm_on'].state == "on") return "var(--yellow)";
                                    else return "var(--contrast10)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#alarm'
                      item5:
                        card:
                          type: custom:button-card
                          entity: vacuum.dobby
                          icon: mdi:robot-vacuum-alert
                          name: Dobby
                          label: Error
                          show_label: true
                          state:
                            - value: docked
                              label: Docked
                              icon: mdi:robot-vacuum-off
                              styles:
                                icon:
                                  - color: var(--contrast10)
                            - value: cleaning
                              label: Cleaning
                              icon: mdi:robot-vacuum
                              styles:
                                icon:
                                  - color: var(--blue)
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--red)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#vacuum'
                          double_tap_action:
                            action: more-info
                      item6:
                        card:
                          type: custom:button-card
                          entity: weather.home
                          name: Berlin
                          show_label: true
                          show_state: true
                          show_name: false
                          label: >-
                            [[[ return
                            states["weather.home"].attributes.temperature + "°C"
                            ]]]
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i s'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['weather.home'].state == "partlycloudy") return "var(--contrast15)";
                                    else if (states['weather.home'].state == "sunny") return "var(--yellow)";
                                    else return "var(--blue)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            state:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#weather'
                          double_tap_action:
                            action: more-info
            grid_options:
              columns: full
              rows: auto
          - type: vertical-stack
            cards:
              - type: heading
                heading: Map
                heading_style: title
                icon: mdi:map-marker-account
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.julian_
                    icon: mdi:face-agent
                    color: green
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.anna
                    icon: mdi:face-woman
                    color: purple
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.dog
                    icon: mdi:dog
                    color: brown
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.dog_simone
                    icon: mdi:dog-side
                    color: white
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.guest
                    icon: mdi:account-group
                    color: orange
                    tap_action:
                      action: more-info
            visibility:
              - condition: state
                entity: switch.security_cameras
                state: 'off'
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.washing_machine_status
                    state: 'Off'
                  - condition: state
                    entity: sensor.dishwasher_status
                    state: 'Off'
                  - condition: state
                    entity: switch.coffee_maker_outlet
                    state_not: 'on'
                  - condition: state
                    entity: switch.fan_outlet
                    state_not: 'on'
                  - condition: state
                    entity: switch.desk_webcam
                    state_not: 'on'
                  - condition: state
                    entity: vacuum.dobby
                    state_not: cleaning
                  - condition: state
                    entity: sensor.prusalink_progress
                    state: unavailable
                  - condition: state
                    entity: remote.harmony_hub
                    state: 'off'
                  - condition: state
                    entity: switch.ps5_343_power
                    state_not: 'on'
                  - condition: state
                    entity: binary_sensor.alexa_timer_active
                    state_not: 'on'
            grid_options:
              columns: full
              rows: auto
          - type: map
            entities:
              - entity: zone.home
              - entity: person.dog
              - entity: person.julian_
            theme_mode: auto
            visibility:
              - condition: state
                entity: switch.security_cameras
                state: 'off'
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.washing_machine_status
                    state: 'Off'
                  - condition: state
                    entity: sensor.dishwasher_status
                    state: 'Off'
                  - condition: state
                    entity: switch.coffee_maker_outlet
                    state_not: 'on'
                  - condition: state
                    entity: switch.fan_outlet
                    state_not: 'on'
                  - condition: state
                    entity: switch.desk_webcam
                    state_not: 'on'
                  - condition: state
                    entity: vacuum.dobby
                    state_not: cleaning
                  - condition: state
                    entity: sensor.prusalink_progress
                    state: unavailable
                  - condition: state
                    entity: remote.harmony_hub
                    state: 'off'
                  - condition: state
                    entity: switch.ps5_343_power
                    state_not: 'on'
                  - condition: state
                    entity: binary_sensor.alexa_timer_active
                    state_not: 'on'
          - type: heading
            icon: mdi:cctv
            heading: Cameras
            heading_style: title
            badges:
              - type: entity
                show_state: true
                show_icon: true
                entity: switch.security_cameras
                color: red
                tap_action:
                  action: toggle
              - type: entity
                show_state: true
                show_icon: true
                entity: switch.camera_corridor_outlet
                icon: mdi:door
                color: green
                tap_action:
                  action: toggle
              - type: entity
                show_state: true
                show_icon: true
                entity: switch.camera_living_room
                icon: mdi:sofa-outline
                color: green
                tap_action:
                  action: toggle
              - type: entity
                show_state: true
                show_icon: true
                entity: switch.camera_office_outlet
                icon: mdi:monitor
                color: green
                tap_action:
                  action: toggle
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
              - condition: state
                entity: switch.security_cameras
                state: 'on'
              - condition: state
                entity: input_boolean.vacation_mode
                state: 'off'
          - square: false
            type: grid
            cards:
              - show_state: false
                show_name: false
                camera_view: live
                fit_mode: cover
                type: picture-entity
                camera_image: camera.192_168_178_78
                entity: camera.192_168_178_78
              - show_state: false
                show_name: false
                camera_view: live
                fit_mode: cover
                type: picture-entity
                camera_image: camera.192_168_178_125
                entity: camera.192_168_178_125
              - show_state: false
                show_name: false
                camera_view: live
                fit_mode: cover
                type: picture-entity
                camera_image: camera.192_168_178_77
                entity: camera.192_168_178_77
            columns: 3
            grid_options:
              columns: full
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
              - condition: state
                entity: switch.security_cameras
                state: 'on'
              - condition: state
                entity: input_boolean.vacation_mode
                state: 'off'
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: sensor.washing_machine_status
                    state_not: 'Off'
                  - condition: state
                    entity: sensor.dishwasher_status
                    state_not: 'Off'
                  - condition: state
                    entity: switch.coffee_maker_outlet
                    state: 'on'
                  - condition: state
                    entity: switch.fan_outlet
                    state: 'on'
                  - condition: state
                    entity: switch.desk_webcam
                    state: 'on'
                  - condition: state
                    entity: vacuum.dobby
                    state: cleaning
                  - condition: state
                    entity: sensor.prusalink_progress
                    state_not: unavailable
                  - condition: state
                    entity: remote.harmony_hub
                    state_not: 'off'
                  - condition: state
                    entity: switch.ps5_343_power
                    state: 'on'
                  - condition: state
                    entity: binary_sensor.alexa_timer_active
                    state: 'on'
            card:
              square: false
              type: grid
              cards:
                - type: heading
                  icon: mdi:star
                  heading: Active
                  heading_style: title
                - square: false
                  type: grid
                  cards:
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: remote.harmony_hub
                          state_not: 'off'
                      card:
                        type: custom:button-card
                        entity: select.harmony_hub_activities
                        template: nav_button_small
                        name: TV Remote
                        label: >-
                          [[[return
                          states["remote.harmony_hub"].attributes.current_activity]]]
                        variables:
                          navigation_path: home#remote
                        state:
                          - value: power_off
                            label: 'Off'
                            icon: mdi:television-off
                          - value: Smart TV
                            label: SmartTV
                            icon: mdi:television-guide
                            styles:
                              card:
                                - background-color: var(--green)
                              icon:
                                - color: var(--black)
                              name:
                                - color: var(--black)
                              label:
                                - color: var(--black)
                          - value: Netflix
                            label: Netflix
                            icon: mdi:netflix
                            styles:
                              card:
                                - background-color: var(--red)
                              icon:
                                - color: var(--black)
                              name:
                                - color: var(--black)
                              label:
                                - color: var(--black)
                          - value: Playstation
                            label: PS5
                            icon: mdi:sony-playstation
                            styles:
                              card:
                                - background-color: var(--blue)
                              icon:
                                - color: var(--black)
                              name:
                                - color: var(--black)
                              label:
                                - color: var(--black)
                          - value: Nintendo Switch
                            label: Switch
                            icon: mdi:nintendo-switch
                            styles:
                              card:
                                - background-color: var(--red)
                              icon:
                                - color: var(--black)
                              name:
                                - color: var(--black)
                              label:
                                - color: var(--black)
                          - value: Bluetooth
                            label: Bluetooth
                            icon: mdi:bluetooth
                            styles:
                              card:
                                - background-color: var(--blue)
                              icon:
                                - color: var(--black)
                              name:
                                - color: var(--black)
                              label:
                                - color: var(--black)
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: switch.ps5_343_power
                          state: 'on'
                      card:
                        type: custom:button-card
                        template: switch_template
                        entity: switch.ps5_343_power
                        label: >-
                          [[[return
                          states["sensor.ps5_343_activity"].attributes.activity]]]
                        name: Playstation 5
                        variables:
                          icon_on: mdi:sony-playstation
                          icon_off: mdi:sony-playstation
                          color: var(--blue)
                        tap_action:
                          action: call-service
                          service: switch.toggle
                          service_data:
                            entity_id:
                              - switch.harmony_hub_playstation
                              - switch.ps5_343_power
                          haptic: success
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: switch.desk_webcam
                          state: 'on'
                      card:
                        type: custom:button-card
                        entity: switch.desk_webcam
                        template: switch_template
                        name: Desk Webcam
                        variables:
                          icon_on: mdi:webcam
                          icon_off: mdi:webcam-off
                          color: var(--purple)
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: switch.fan_outlet
                          state: 'on'
                      card:
                        type: custom:button-card
                        entity: switch.fan_outlet
                        template: switch_template
                        name: Fan
                        variables:
                          icon_on: mdi:fan
                          icon_off: mdi:fan-off
                          color: var(--blue)
                  columns: 2
                - type: conditional
                  conditions:
                    - condition: state
                      entity: vacuum.dobby
                      state_not: docked
                    - condition: state
                      entity: vacuum.dobby
                      state_not: unavailable
                  card:
                    type: custom:button-card
                    entity: vacuum.dobby
                    name: Dobby
                    icon: |
                      [[[
                        if (entity.state == 'idle') {
                          return 'mdi:dots-circle';
                        } else if (entity.state == 'cleaning') {
                          return 'mdi:robot-vacuum';
                        } else if (entity.state == 'docked') {
                          return 'mdi:robot-vacuum-off';
                        } else {
                          return 'mdi:robot-vacuum-alert';
                        }
                      ]]]
                    show_name: true
                    show_icon: true
                    show_label: true
                    show_state: false
                    tap_action:
                      action: more-info
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: call-service
                      service: vacuum.return_to_base
                      service_data:
                        entity_id: vacuum.dobby
                    label: '[[[ return states["vacuum.dobby"].state ]]]'
                    custom_fields:
                      icon1:
                        card:
                          type: custom:button-card
                          icon: mdi:robot-vacuum
                          styles:
                            card:
                              - background-color: var(--contrast1)
                              - width: 30px
                              - height: 30px
                            icon:
                              - width: 18px
                              - color: var(--contrast20)
                      icon2:
                        card:
                          type: custom:button-card
                          entity: input_boolean.chores_empty_dobby
                          icon: |
                            [[[
                              if (states['input_boolean.chores_empty_dobby'].state == 'on'){
                                return "mdi:delete-empty";
                              } else {
                                return "mdi:delete";
                              }
                            ]]]
                          show_icon: true
                          show_name: false
                          tap_action:
                            action: more-info
                          styles:
                            card:
                              - width: 24px
                              - border: none
                              - background: none
                              - overflow: visible
                            icon:
                              - width: 22px
                              - color: |
                                  [[[
                                    if (entity.state == 'docked') {
                                      return 'var(--contrast20)';
                                    } else {
                                      return 'var(--black)';
                                    }
                                  ]]]
                    styles:
                      grid:
                        - grid-template-areas: >-
                            ". icon1" "l l" "n icon2" "rem icon2" "bar bar"
                            "start end"
                        - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                        - grid-template-columns: 60% 40%
                      card:
                        - height: 100%
                        - padding: 1rem
                        - background: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'var(--contrast2)';
                              } else if (entity.state == 'cleaning') {
                                return 'var(--green)';
                              } else if (entity.state == 'idle') {
                                return 'var(--yellow)';
                              } else {
                                return 'var(--red)';
                              }
                            ]]]
                      img_cell:
                        - position: absolute
                        - top: 20%
                        - left: 40%
                        - overflow: visible
                      icon:
                        - position: absolute
                        - width: 20em
                        - opacity: 20%
                        - color: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'var(--white)';
                              } else {
                                return 'var(--black)';
                              }
                            ]]]
                        - transform: rotate(-20deg)
                        - animation: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'null';
                              } else if (entity.state == 'idle') {
                                return 'blink 1.5s linear infinite';
                              } else if (entity.state == 'cleaning') {
                                return 'rotating 2s linear infinite';
                              } else {
                                return 'blink 1.5s linear infinite';
                              }
                            ]]] 
                      label:
                        - text-align: left
                        - font-size: 18px
                        - font-weight: 500
                        - justify-self: start
                        - align-self: end
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--black)';
                              }
                            ]]]
                      name:
                        - text-align: left
                        - font-size: 12px
                        - opacity: 0.7
                        - justify-self: start
                        - align-self: center
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--black)';
                              }
                            ]]]
                      custom_fields:
                        icon1:
                          - justify-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'docked') {
                                  return 'var(--contrast20)';
                                } else {
                                  return 'var(--black)';
                                }
                              ]]]
                        icon2:
                          - justify-self: end
                          - align-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'docked') {
                                  return 'var(--contrast20)';
                                } else {
                                  return 'var(--black)';
                                }
                              ]]]
                      hold_action:
                        action: more-info
                - type: conditional
                  conditions:
                    - condition: state
                      entity: binary_sensor.alexa_timer_active
                      state: 'on'
                  card:
                    type: custom:swipe-card
                    card_width: 100%
                    parameters:
                      centeredSlides: true
                      slidesPerView: auto
                      spaceBetween: 16
                      initialSlide: 0
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.kitchen_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.kitchen_next_timer
                          name: Kitchen Timer
                          icon: mdi:timer-outline
                          show_name: true
                          show_icon: true
                          show_label: false
                          show_state: false
                          tap_action:
                            action: more-info
                          hold_action:
                            action: more-info
                          custom_fields:
                            bar: |
                              [[[
                                var color = "var(--green)";
                                var state = 100 - states['sensor.kitchen_timer'].attributes.remaining_perc;
                                if (state < 10) color = "var(--red)";
                                else if (state < 50) color = "var(--yellow)";
                                else if (state < 90) color = "var(--orange)";
                                return `
                                <div>
                                <div style="background:${color}; height: 12px; width:${state}%">
                                </div>
                                </div>`
                              ]]]
                            rem:
                              card:
                                type: conditional
                                conditions:
                                  - condition: state
                                    entity: sensor.kitchen_next_timer
                                    state_not: unknown
                                card:
                                  type: custom:button-card
                                  entity: sensor.kitchen_timer
                                  name: >
                                    [[[

                                    var remainingTime =
                                    states['sensor.kitchen_timer'].attributes.remaining;

                                    return `${remainingTime}`;

                                    ]]]
                                  show_icon: false
                                  styles:
                                    card:
                                      - width: min
                                      - background: none
                                      - overflow: visible
                                    name:
                                      - font-size: 14px
                                      - margin-top: 6px
                                      - font-weight: 600
                                      - color: var(--contrast20)
                            icon1: |
                              [[[
                                return '<ha-icon icon="mdi:silverware-variant"></ha-icon>';
                              ]]]
                          styles:
                            grid:
                              - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                              - grid-template-rows: >-
                                  24px 1fr 24px min-content min-content
                                  min-content
                              - grid-template-columns: 60% 40%
                            card:
                              - height: 100%
                              - padding: 1rem
                              - background: var(--contrast2)
                            img_cell:
                              - position: absolute
                              - top: 20%
                              - left: 40%
                              - overflow: visible
                            icon:
                              - position: absolute
                              - width: 20em
                              - opacity: 20%
                              - color: var(--contrast20)
                              - transform: rotate(-20deg)
                            label:
                              - text-align: left
                              - font-size: 18px
                              - font-weight: 500
                              - justify-self: start
                              - align-self: end
                              - overflow: visible
                              - color: var(--contrast20)
                            name:
                              - text-align: left
                              - font-size: 12px
                              - justify-self: start
                              - align-self: center
                              - overflow: visible
                              - color: var(--contrast20)
                            custom_fields:
                              bar:
                                - justify-self: start
                                - width: 100%
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '12px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                                - background: var(--contrast1)
                                - border-radius: 24px
                              rem:
                                - justify-self: start
                                - font-size: 14px
                                - font-weight: 600
                                - align-self: end
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '27px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                              icon1:
                                - justify-self: end
                                - width: 24px
                                - color: var(--contrast20)
                            hold_action:
                              action: more-info
                      - type: conditional
                        conditions:
                          - entity: sensor.living_room_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.living_room_next_timer
                          name: Living Room Timer
                          icon: mdi:timer-outline
                          show_name: true
                          show_icon: true
                          show_label: false
                          show_state: false
                          tap_action:
                            action: more-info
                          hold_action:
                            action: more-info
                          custom_fields:
                            bar: |
                              [[[
                                var color = "var(--green)";
                                var state = 100 - states['sensor.living_room_timer'].attributes.remaining_perc;
                                if (state < 10) color = "var(--red)";
                                else if (state < 50) color = "var(--yellow)";
                                else if (state < 90) color = "var(--orange)";
                                return `
                                <div>
                                <div style="background:${color}; height: 12px; width:${state}%">
                                </div>
                                </div>`
                              ]]]
                            rem:
                              card:
                                type: conditional
                                conditions:
                                  - condition: state
                                    entity: sensor.living_room_next_timer
                                    state_not: unknown
                                card:
                                  type: custom:button-card
                                  entity: sensor.living_room_timer
                                  name: >
                                    [[[

                                    var remainingTime =
                                    states['sensor.living_room_timer'].attributes.remaining;

                                    return `${remainingTime}`;

                                    ]]]
                                  show_icon: false
                                  styles:
                                    card:
                                      - width: min
                                      - background: none
                                      - overflow: visible
                                    name:
                                      - font-size: 14px
                                      - margin-top: 6px
                                      - font-weight: 600
                                      - color: var(--contrast20)
                            icon1: |
                              [[[
                                return '<ha-icon icon="mdi:sofa-outline"></ha-icon>';
                              ]]]
                          styles:
                            grid:
                              - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                              - grid-template-rows: >-
                                  24px 1fr 24px min-content min-content
                                  min-content
                              - grid-template-columns: 60% 40%
                            card:
                              - height: 100%
                              - padding: 1rem
                              - background: var(--contrast2)
                            img_cell:
                              - position: absolute
                              - top: 20%
                              - left: 40%
                              - overflow: visible
                            icon:
                              - position: absolute
                              - width: 20em
                              - opacity: 20%
                              - color: var(--contrast20)
                              - transform: rotate(-20deg)
                            label:
                              - text-align: left
                              - font-size: 18px
                              - font-weight: 500
                              - justify-self: start
                              - align-self: end
                              - overflow: visible
                              - color: var(--contrast20)
                            name:
                              - text-align: left
                              - font-size: 12px
                              - justify-self: start
                              - align-self: center
                              - overflow: visible
                              - color: var(--contrast20)
                            custom_fields:
                              bar:
                                - justify-self: start
                                - width: 100%
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '12px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                                - background: var(--contrast1)
                                - border-radius: 24px
                              rem:
                                - justify-self: start
                                - font-size: 14px
                                - font-weight: 600
                                - align-self: end
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '27px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                              icon1:
                                - justify-self: end
                                - width: 24px
                                - color: var(--contrast20)
                            hold_action:
                              action: more-info
                      - type: conditional
                        conditions:
                          - entity: sensor.bed_room_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.bed_room_next_timer
                          name: Bed Room Timer
                          icon: mdi:timer-outline
                          show_name: true
                          show_icon: true
                          show_label: false
                          show_state: false
                          tap_action:
                            action: more-info
                          hold_action:
                            action: more-info
                          custom_fields:
                            bar: |
                              [[[
                                var color = "var(--green)";
                                var state = 100 - states['sensor.bed_room_timer'].attributes.remaining_perc;
                                if (state < 10) color = "var(--red)";
                                else if (state < 50) color = "var(--yellow)";
                                else if (state < 90) color = "var(--orange)";
                                return `
                                <div>
                                <div style="background:${color}; height: 12px; width:${state}%">
                                </div>
                                </div>`
                              ]]]
                            rem:
                              card:
                                type: conditional
                                conditions:
                                  - condition: state
                                    entity: sensor.bed_room_next_timer
                                    state_not: unknown
                                card:
                                  type: custom:button-card
                                  entity: sensor.bed_room_timer
                                  name: >
                                    [[[

                                    var remainingTime =
                                    states['sensor.bed_room_timer'].attributes.remaining;

                                    return `${remainingTime}`;

                                    ]]]
                                  show_icon: false
                                  styles:
                                    card:
                                      - width: min
                                      - background: none
                                      - overflow: visible
                                    name:
                                      - font-size: 14px
                                      - margin-top: 6px
                                      - font-weight: 600
                                      - color: var(--contrast20)
                            icon1: |
                              [[[
                                return '<ha-icon icon="mdi:bed-king-outline"></ha-icon>';
                              ]]]
                          styles:
                            grid:
                              - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                              - grid-template-rows: >-
                                  24px 1fr 24px min-content min-content
                                  min-content
                              - grid-template-columns: 60% 40%
                            card:
                              - height: 100%
                              - padding: 1rem
                              - background: var(--contrast2)
                            img_cell:
                              - position: absolute
                              - top: 20%
                              - left: 40%
                              - overflow: visible
                            icon:
                              - position: absolute
                              - width: 20em
                              - opacity: 20%
                              - color: var(--contrast20)
                              - transform: rotate(-20deg)
                            label:
                              - text-align: left
                              - font-size: 18px
                              - font-weight: 500
                              - justify-self: start
                              - align-self: end
                              - overflow: visible
                              - color: var(--contrast20)
                            name:
                              - text-align: left
                              - font-size: 12px
                              - justify-self: start
                              - align-self: center
                              - overflow: visible
                              - color: var(--contrast20)
                            custom_fields:
                              bar:
                                - justify-self: start
                                - width: 100%
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '12px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                                - background: var(--contrast1)
                                - border-radius: 24px
                              rem:
                                - justify-self: start
                                - font-size: 14px
                                - font-weight: 600
                                - align-self: end
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '27px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                              icon1:
                                - justify-self: end
                                - width: 24px
                                - color: var(--contrast20)
                            hold_action:
                              action: more-info
                      - type: conditional
                        conditions:
                          - entity: sensor.office_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.office_next_timer
                          name: Office Timer
                          icon: mdi:timer-outline
                          show_name: true
                          show_icon: true
                          show_label: false
                          show_state: false
                          tap_action:
                            action: more-info
                          hold_action:
                            action: more-info
                          custom_fields:
                            bar: |
                              [[[
                                var color = "var(--green)";
                                var state = 100 - states['sensor.office_timer'].attributes.remaining_perc;
                                if (state < 10) color = "var(--red)";
                                else if (state < 50) color = "var(--yellow)";
                                else if (state < 90) color = "var(--orange)";
                                return `
                                <div>
                                <div style="background:${color}; height: 12px; width:${state}%">
                                </div>
                                </div>`
                              ]]]
                            rem:
                              card:
                                type: conditional
                                conditions:
                                  - condition: state
                                    entity: sensor.office_next_timer
                                    state_not: unknown
                                card:
                                  type: custom:button-card
                                  entity: sensor.office_timer
                                  name: >
                                    [[[

                                    var remainingTime =
                                    states['sensor.office_timer'].attributes.remaining;

                                    return `${remainingTime}`;

                                    ]]]
                                  show_icon: false
                                  styles:
                                    card:
                                      - width: min
                                      - background: none
                                      - overflow: visible
                                    name:
                                      - font-size: 14px
                                      - margin-top: 6px
                                      - font-weight: 600
                                      - color: var(--contrast20)
                            icon1: |
                              [[[
                                return '<ha-icon icon="mdi:monitor"></ha-icon>';
                              ]]]
                          styles:
                            grid:
                              - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                              - grid-template-rows: >-
                                  24px 1fr 24px min-content min-content
                                  min-content
                              - grid-template-columns: 60% 40%
                            card:
                              - height: 100%
                              - padding: 1rem
                              - background: var(--contrast2)
                            img_cell:
                              - position: absolute
                              - top: 20%
                              - left: 40%
                              - overflow: visible
                            icon:
                              - position: absolute
                              - width: 20em
                              - opacity: 20%
                              - color: var(--contrast20)
                              - transform: rotate(-20deg)
                            label:
                              - text-align: left
                              - font-size: 18px
                              - font-weight: 500
                              - justify-self: start
                              - align-self: end
                              - overflow: visible
                              - color: var(--contrast20)
                            name:
                              - text-align: left
                              - font-size: 12px
                              - justify-self: start
                              - align-self: center
                              - overflow: visible
                              - color: var(--contrast20)
                            custom_fields:
                              bar:
                                - justify-self: start
                                - width: 100%
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '12px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                                - background: var(--contrast1)
                                - border-radius: 24px
                              rem:
                                - justify-self: start
                                - font-size: 14px
                                - font-weight: 600
                                - align-self: end
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '27px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                              icon1:
                                - justify-self: end
                                - width: 24px
                                - color: var(--contrast20)
                            hold_action:
                              action: more-info
                      - type: conditional
                        conditions:
                          - entity: sensor.bathroom_next_timer
                            state_not: unknown
                        card:
                          type: custom:button-card
                          entity: sensor.bathroom_next_timer
                          name: Bathroom Timer
                          icon: mdi:timer-outline
                          show_name: true
                          show_icon: true
                          show_label: false
                          show_state: false
                          tap_action:
                            action: more-info
                          hold_action:
                            action: more-info
                          custom_fields:
                            bar: |
                              [[[
                                var color = "var(--green)";
                                var state = 100 - states['sensor.bathroom_timer'].attributes.remaining_perc;
                                if (state < 10) color = "var(--red)";
                                else if (state < 50) color = "var(--yellow)";
                                else if (state < 90) color = "var(--orange)";
                                return `
                                <div>
                                <div style="background:${color}; height: 12px; width:${state}%">
                                </div>
                                </div>`
                              ]]]
                            rem:
                              card:
                                type: conditional
                                conditions:
                                  - condition: state
                                    entity: sensor.bathroom_next_timer
                                    state_not: unknown
                                card:
                                  type: custom:button-card
                                  entity: sensor.bathroom_timer
                                  name: >
                                    [[[

                                    var remainingTime =
                                    states['sensor.bathroom_timer'].attributes.remaining;

                                    return `${remainingTime}`;

                                    ]]]
                                  show_icon: false
                                  styles:
                                    card:
                                      - width: min
                                      - background: none
                                      - overflow: visible
                                    name:
                                      - font-size: 14px
                                      - margin-top: 6px
                                      - font-weight: 600
                                      - color: var(--contrast20)
                            icon1: |
                              [[[
                                return '<ha-icon icon="mdi:paper-roll-outline"></ha-icon>';
                              ]]]
                          styles:
                            grid:
                              - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                              - grid-template-rows: >-
                                  24px 1fr 24px min-content min-content
                                  min-content
                              - grid-template-columns: 60% 40%
                            card:
                              - height: 100%
                              - padding: 1rem
                              - background: var(--contrast2)
                            img_cell:
                              - position: absolute
                              - top: 20%
                              - left: 40%
                              - overflow: visible
                            icon:
                              - position: absolute
                              - width: 20em
                              - opacity: 20%
                              - color: var(--contrast20)
                              - transform: rotate(-20deg)
                            label:
                              - text-align: left
                              - font-size: 18px
                              - font-weight: 500
                              - justify-self: start
                              - align-self: end
                              - overflow: visible
                              - color: var(--contrast20)
                            name:
                              - text-align: left
                              - font-size: 12px
                              - justify-self: start
                              - align-self: center
                              - overflow: visible
                              - color: var(--contrast20)
                            custom_fields:
                              bar:
                                - justify-self: start
                                - width: 100%
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '12px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                                - background: var(--contrast1)
                                - border-radius: 24px
                              rem:
                                - justify-self: start
                                - font-size: 14px
                                - font-weight: 600
                                - align-self: end
                                - height: |
                                    [[[
                                      if (entity.state != 'unknown') {
                                        return '27px';
                                      } else {
                                        return '0px';
                                      }
                                    ]]]
                              icon1:
                                - justify-self: end
                                - width: 24px
                                - color: var(--contrast20)
                            hold_action:
                              action: more-info
                - type: conditional
                  conditions:
                    - condition: state
                      entity: sensor.prusalink
                      state_not: unavailable
                  card:
                    type: custom:button-card
                    entity: sensor.prusalink
                    name: |
                      [[[
                        if (states['sensor.prusalink'].state == 'printing') {
                          return states['sensor.prusalink_filename'].state;
                        } else {
                          return 'Prusa Mini+';
                        }
                      ]]]
                    icon: mdi:printer-3d
                    show_name: true
                    show_icon: true
                    show_label: true
                    show_state: false
                    tap_action:
                      action: navigate
                      navigation_path: server#3d-printer
                    hold_action:
                      action: more-info
                    label: |
                      [[[
                        if (states['sensor.prusalink'].state != 'unavailable') {
                          return states['sensor.prusalink'].state;
                        } else {
                          return 'Off';
                        }
                      ]]]
                    custom_fields:
                      bar: |
                        [[[
                          var color = "var(--green)";
                          var state = states['sensor.prusalink_progress'].state;
                          if (state < 10) color = "var(--red)";
                          else if (state < 50) color = "var(--yellow)";
                          else if (state < 90) color = "var(--orange)";
                          return `
                          <div>
                          <div style="background:${color}; height: 12px; width:${state}%">
                          </div>
                          </div>`
                        ]]]
                      rem:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.prusalink
                              state: printing
                          card:
                            type: custom:button-card
                            entity: sensor.prusamini_timer
                            name: |
                              [[[
                               var remainingTime = states['sensor.prusamini_timer'].attributes.remaining;
                               return `Time: ${remainingTime}`;
                              ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - background: none
                                - overflow: visible
                              name:
                                - font-size: 12px
                                - color: |
                                    [[[
                                      if (entity.state == 'on') {
                                        return 'var(--black)';
                                      } else {
                                        return 'var(--primary-background-color)';
                                      }
                                    ]]]
                                - font-weight: 500
                      start:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.prusa_mini
                              state: printing
                          card:
                            type: custom:button-card
                            entity: sensor.prusamini_timer
                            name: |
                              [[[
                               var endTime = states['sensor.prusamini_timer'].attributes.triggered;
                               // Extract time from the end time
                               var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                               return `${time} Uhr`;
                               ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - padding: 5px
                                - background: none
                              name:
                                - font-size: 12px
                                - color: |
                                    [[[
                                      if (entity.state == 'on') {
                                        return 'var(--black)';
                                      } else {
                                        return 'var(--primary-background-color)';
                                      }
                                    ]]]
                      end:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.prusalink
                              state: printing
                          card:
                            type: custom:button-card
                            entity: sensor.prusamini_timer
                            name: |
                              [[[
                               var endTime = states['sensor.prusamini_timer'].attributes.end_time;
                               // Extract time from the end time
                               var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                               return `${time} Uhr`;
                               ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - padding: 5px
                                - background: none
                              name:
                                - font-size: 12px
                                - color: |
                                    [[[
                                      if (entity.state == 'on') {
                                        return 'var(--black)';
                                      } else {
                                        return 'var(--primary-background-color)';
                                      }
                                    ]]]
                      icon1:
                        card:
                          type: custom:button-card
                          icon: mdi:printer-3d
                          styles:
                            card:
                              - background-color: var(--contrast1)
                              - width: 30px
                              - height: 30px
                            icon:
                              - width: 18px
                              - color: var(--contrast20)
                    styles:
                      grid:
                        - grid-template-areas: >-
                            ". icon1" "l l" "n n" "rem rem" "bar bar" "start
                            end"
                        - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                        - grid-template-columns: 60% 40%
                      card:
                        - height: 100%
                        - padding: 1rem
                        - background: |
                            [[[
                              if (entity.state == 'printing') {
                                return 'var(--purple)';
                              } else if (entity.state == 'attention') {
                                return 'var(--red)';
                              } else if (entity.state == 'error') {
                                return 'var(--red)';
                              } else if (entity.state == 'finished') {
                                return 'var(--green)';
                              } else {
                                return 'var(--contrast2)';
                              }
                            ]]]
                      img_cell:
                        - position: absolute
                        - top: 20%
                        - left: 40%
                        - overflow: visible
                      icon:
                        - position: absolute
                        - width: 20em
                        - opacity: 20%
                        - color: |
                            [[[
                              if (entity.state == 'printing') {
                                return 'var(--black)';
                              } else if (entity.state == 'attention') {
                                return 'var(--black)';
                              } else if (entity.state == 'error') {
                                return 'var(--black)';
                              } else if (entity.state == 'finished') {
                                return 'var(--black)';
                              } else {
                                return 'var(--contrast20)';
                              }
                            ]]]
                        - transform: rotate(-20deg)
                      label:
                        - text-align: left
                        - font-size: 18px
                        - font-weight: 500
                        - justify-self: start
                        - align-self: end
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'printing') {
                                return 'var(--black)';
                              } else if (entity.state == 'attention') {
                                return 'var(--black)';
                              } else if (entity.state == 'error') {
                                return 'var(--black)';
                              } else if (entity.state == 'finished') {
                                return 'var(--black)';
                              } else {
                                return 'var(--contrast20)';
                              }
                            ]]]
                      name:
                        - text-align: left
                        - font-size: 12px
                        - opacity: 0.7
                        - justify-self: start
                        - align-self: center
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'printing') {
                                return 'var(--black)';
                              } else if (entity.state == 'attention') {
                                return 'var(--black)';
                              } else if (entity.state == 'error') {
                                return 'var(--black)';
                              } else if (entity.state == 'finished') {
                                return 'var(--black)';
                              } else {
                                return 'var(--contrast20)';
                              }
                            ]]]
                      custom_fields:
                        bar:
                          - justify-self: start
                          - width: 100%
                          - height: |
                              [[[
                                if (entity.state == 'printing') {
                                  return '12px';
                                } else {
                                  return '0px';
                                }
                              ]]]
                          - background: var(--contrast1)
                          - border-radius: 24px
                        end:
                          - justify-self: end
                        start:
                          - justify-self: start
                        rem:
                          - justify-self: start
                          - align-self: end
                          - height: |
                              [[[
                                if (entity.state == 'printing') {
                                  return '27px';
                                } else {
                                  return '0px';
                                }
                              ]]]
                        icon1:
                          - justify-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'printing') {
                                  return 'var(--black)';
                                } else if (entity.state == 'attention') {
                                  return 'var(--black)';
                                } else if (entity.state == 'error') {
                                return 'var(--black)';
                              } else if (entity.state == 'finished') {
                                return 'var(--black)';
                                } else {
                                  return 'var(--contrast20)';
                                }
                              ]]]
                        icon2:
                          - justify-self: end
                          - align-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'printing') {
                                  return 'var(--black)';
                                } else if (entity.state == 'attention') {
                                  return 'var(--black)';
                                } else if (entity.state == 'error') {
                                return 'var(--black)';
                              } else if (entity.state == 'finished') {
                                return 'var(--black)';
                                } else {
                                  return 'var(--contrast20)';
                                }
                              ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: sensor.dishwasher_status
                          state_not: 'Off'
                      card:
                        type: custom:button-card
                        entity: sensor.dishwasher_status
                        name: |
                          [[[
                            if (states['sensor.dishwasher_status'].state == 'Off') {
                              return 'Dishwasher';
                            } else {
                              return 'Dishwasher' + " (" + states['sensor.dishwasher_power'].state + " kWH)";
                            }
                          ]]]
                        icon: |
                          [[[
                            if (states['sensor.dishwasher_status'].state == 'Idle') {
                              return 'mdi:dots-circle';
                            } else if (states['sensor.dishwasher_status'].state == 'Running') {
                              return 'mdi:circle-half-full';
                            } else if (states['sensor.dishwasher_status'].state == 'Clean') {
                              return 'mdi:dishwasher';
                            } else if (states['sensor.dishwasher_status'].state == 'Off') {
                              return 'mdi:dishwasher-off';
                            }
                          ]]]
                        show_name: true
                        show_icon: true
                        show_label: true
                        show_state: false
                        tap_action:
                          action: more-info
                        hold_action:
                          action: more-info
                        double_tap_action:
                          action: call-service
                          service: input_boolean.turn_off
                          service_data:
                            entity_id: input_boolean.chores_dishwasher
                        label: |
                          [[[
                            if (states['sensor.dishwasher_status'].state == 'Idle') {
                              return 'Idle';
                            } else if (states['sensor.dishwasher_status'].state == 'Running') {
                              return 'Running';
                            } else if (states['sensor.dishwasher_status'].state == 'Clean') {
                              return 'Clean';
                            } else if (states['sensor.dishwasher_status'].state == 'Off') {
                              return 'Off';
                            }
                          ]]]
                        custom_fields:
                          bar: |
                            [[[
                              var color = "var(--green)";
                              var state = 100 - states['sensor.dishwasher_timer'].attributes.remaining_perc;
                              if (state < 10) color = "var(--red)";
                              else if (state < 50) color = "var(--yellow)";
                              else if (state < 90) color = "var(--orange)";
                              return `
                              <div>
                              <div style="background:${color}; height: 12px; width:${state}%">
                              </div>
                              </div>`
                            ]]]
                          rem:
                            card:
                              type: conditional
                              conditions:
                                - condition: state
                                  entity: sensor.dishwasher_status
                                  state: Running
                              card:
                                type: custom:button-card
                                entity: sensor.dishwasher_timer
                                name: |
                                  [[[
                                   var remainingTime = states['sensor.dishwasher_timer'].attributes.remaining;
                                   return `Est. Time: ${remainingTime}`;
                                  ]]]
                                show_icon: false
                                styles:
                                  card:
                                    - width: min
                                    - background: none
                                    - overflow: visible
                                    - box-shadow: none
                                  name:
                                    - font-size: 12px
                                    - color: |
                                        [[[
                                          if (entity.state == 'on') {
                                            return 'var(--black)';
                                          } else {
                                            return 'var(--primary-background-color)';
                                          }
                                        ]]]
                                    - font-weight: 500
                          start:
                            card:
                              type: conditional
                              conditions:
                                - condition: state
                                  entity: sensor.dishwasher_status
                                  state: Running
                              card:
                                type: custom:button-card
                                entity: sensor.dishwasher_timer
                                name: |
                                  [[[
                                   var endTime = states['sensor.dishwasher_timer'].attributes.triggered;
                                   // Extract time from the end time
                                   var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                                   return `${time} Uhr`;
                                   ]]]
                                show_icon: false
                                styles:
                                  card:
                                    - width: min
                                    - padding: 5px
                                    - background: none
                                    - box-shadow: none
                                  name:
                                    - font-size: 12px
                                    - color: |
                                        [[[
                                          if (entity.state == 'on') {
                                            return 'var(--black)';
                                          } else {
                                            return 'var(--primary-background-color)';
                                          }
                                        ]]]
                          end:
                            card:
                              type: conditional
                              conditions:
                                - condition: state
                                  entity: sensor.dishwasher_status
                                  state: Running
                              card:
                                type: custom:button-card
                                entity: sensor.dishwasher_timer
                                name: |
                                  [[[
                                   var endTime = states['sensor.dishwasher_timer'].attributes.end_time;
                                   // Extract time from the end time
                                   var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                                   return `${time} Uhr`;
                                   ]]]
                                show_icon: false
                                styles:
                                  card:
                                    - width: min
                                    - padding: 5px
                                    - background: none
                                    - box-shadow: none
                                  name:
                                    - font-size: 12px
                                    - color: |
                                        [[[
                                          if (entity.state == 'on') {
                                            return 'var(--black)';
                                          } else {
                                            return 'var(--primary-background-color)';
                                          }
                                        ]]]
                          icon1:
                            card:
                              type: custom:button-card
                              icon: mdi:dishwasher
                              styles:
                                card:
                                  - background-color: var(--contrast1)
                                  - width: 30px
                                  - height: 30px
                                icon:
                                  - width: 18px
                                  - color: var(--contrast20)
                          icon2: |
                            [[[
                              if (states['switch.dishwasher'].state == "off"){
                                return '<ha-icon icon="mdi:toggle-switch-off-outline"></ha-icon>';
                              } else {
                                return '<ha-icon icon="mdi:toggle-switch-outline"></ha-icon>';
                              }
                            ]]]
                        styles:
                          grid:
                            - grid-template-areas: >-
                                ". icon1" "l l" "n icon2" "rem icon2" "bar bar"
                                "start end"
                            - grid-template-rows: >-
                                24px 1fr 24px min-content min-content
                                min-content
                            - grid-template-columns: 60% 40%
                          card:
                            - height: 100%
                            - padding: 1rem
                            - background: |
                                [[[
                                  if (entity.state == 'Clean') {
                                    return 'var(--green)';
                                  } else if (entity.state == 'Running') {
                                    return 'var(--blue)';
                                  } else if (entity.state == 'Idle') {
                                    return 'var(--yellow)';
                                  } else if (entity.state == 'Off') {
                                    return 'var(--contrast2)';
                                  } else {
                                    return 'var(--primary-text-color)';
                                  }
                                ]]]
                          img_cell:
                            - position: absolute
                            - top: 20%
                            - left: 40%
                            - overflow: visible
                          icon:
                            - position: absolute
                            - width: 20em
                            - opacity: 20%
                            - color: |
                                [[[
                                  if (entity.state == 'Clean') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Running') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Idle') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Off') {
                                    return 'var(--contrast20)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                            - transform: rotate(-20deg)
                            - animation: |
                                [[[
                                  if (states['sensor.dishwasher_status'].state == 'Clean') {
                                    return 'null';
                                  } else if (states['sensor.dishwasher_status'].state == 'Idle') {
                                    return 'blink 1.5s linear infinite';
                                  } else if (states['sensor.dishwasher_status'].state == 'Running') {
                                    return 'rotating 2s linear infinite';
                                  }
                                ]]] 
                          label:
                            - text-align: left
                            - font-size: 18px
                            - font-weight: 500
                            - justify-self: start
                            - align-self: end
                            - overflow: visible
                            - color: |
                                [[[
                                  if (entity.state == 'Clean') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Running') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Idle') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Off') {
                                    return 'var(--contrast20)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                          name:
                            - text-align: left
                            - font-size: 12px
                            - opacity: 0.7
                            - justify-self: start
                            - align-self: center
                            - overflow: visible
                            - color: |
                                [[[
                                  if (entity.state == 'Clean') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Running') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Idle') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Off') {
                                    return 'var(--contrast20)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                          custom_fields:
                            bar:
                              - justify-self: start
                              - width: 100%
                              - height: |
                                  [[[
                                    if (entity.state == 'Running') {
                                      return '12px';
                                    } else {
                                      return '0px';
                                    }
                                  ]]]
                              - background: var(--contrast1)
                              - border-radius: 24px
                            end:
                              - justify-self: end
                            start:
                              - justify-self: start
                            rem:
                              - justify-self: start
                              - align-self: end
                              - height: |
                                  [[[
                                    if (entity.state == 'Running') {
                                      return '27px';
                                    } else {
                                      return '0px';
                                    }
                                  ]]]
                            icon1:
                              - justify-self: end
                              - width: 24px
                              - color: |
                                  [[[
                                    if (entity.state == 'Clean') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Running') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Idle') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Off') {
                                      return 'var(--contrast20)';
                                    } else {
                                     return 'var(--primary-background-color)';
                                   }
                                  ]]]
                            icon2:
                              - justify-self: end
                              - align-self: end
                              - width: 24px
                              - color: |
                                  [[[
                                    if (entity.state == 'Clean') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Running') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Idle') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Off') {
                                      return 'var(--contrast20)';
                                   } else {
                                     return 'var(--primary-background-color)';
                                   }
                                  ]]]
                          hold_action:
                            action: more-info
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: sensor.washing_machine_status
                          state_not: 'Off'
                      card:
                        type: custom:button-card
                        entity: sensor.washing_machine_status
                        name: |
                          [[[
                            if (states['sensor.washing_machine_status'].state == 'Off') {
                              return 'Washing Machine';
                            } else {
                              return 'Washing Machine' + " (" + states['sensor.washing_machine_power'].state + " kWH)";
                            }
                          ]]]
                        icon: |
                          [[[
                            if (states['sensor.washing_machine_status'].state == 'Idle') {
                              return 'mdi:dots-circle';
                            } else if (states['sensor.washing_machine_status'].state == 'Running') {
                              return 'mdi:circle-half-full';
                            } else if (states['sensor.washing_machine_status'].state == 'Clean') {
                              return 'mdi:washing-machine';
                            } else if (states['sensor.washing_machine_status'].state == 'Off') {
                              return 'mdi:washing-machine-off';
                            }
                          ]]]
                        show_name: true
                        show_icon: true
                        show_label: true
                        show_state: false
                        tap_action:
                          action: more-info
                        hold_action:
                          action: more-info
                        double_tap_action:
                          action: call-service
                          service: input_boolean.turn_off
                          service_data:
                            entity_id: input_boolean.chores_laundry
                        label: |
                          [[[
                            if (states['sensor.washing_machine_status'].state == 'Idle') {
                              return 'Idle';
                            } else if (states['sensor.washing_machine_status'].state == 'Running') {
                              return 'Running';
                            } else if (states['sensor.washing_machine_status'].state == 'Clean') {
                              return 'Clean';
                            } else if (states['sensor.washing_machine_status'].state == 'Off') {
                              return 'Off';
                            }
                          ]]]
                        custom_fields:
                          bar: |
                            [[[
                              var color = "var(--green)";
                              var state = 100 - states['sensor.waschmaschine_timer'].attributes.remaining_perc;
                              if (state < 10) color = "var(--red)";
                              else if (state < 50) color = "var(--yellow)";
                              else if (state < 90) color = "var(--orange)";
                              return `
                              <div>
                              <div style="background:${color}; height: 12px; width:${state}%">
                              </div>
                              </div>`
                            ]]]
                          rem:
                            card:
                              type: conditional
                              conditions:
                                - condition: state
                                  entity: sensor.washing_machine_status
                                  state: Running
                              card:
                                type: custom:button-card
                                entity: sensor.waschmaschine_timer
                                name: |
                                  [[[
                                   var remainingTime = states['sensor.waschmaschine_timer'].attributes.remaining;
                                   return `Est. Time: ${remainingTime}`;
                                  ]]]
                                show_icon: false
                                styles:
                                  card:
                                    - width: min
                                    - background: none
                                    - overflow: visible
                                    - box-shadow: none
                                  name:
                                    - font-size: 12px
                                    - color: |
                                        [[[
                                          if (entity.state == 'on') {
                                            return 'var(--black)';
                                          } else {
                                            return 'var(--primary-background-color)';
                                          }
                                        ]]]
                                    - font-weight: 500
                          start:
                            card:
                              type: conditional
                              conditions:
                                - condition: state
                                  entity: sensor.washing_machine_status
                                  state: Running
                              card:
                                type: custom:button-card
                                entity: sensor.waschmaschine_timer
                                name: |
                                  [[[
                                   var endTime = states['sensor.waschmaschine_timer'].attributes.triggered;
                                   // Extract time from the end time
                                   var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                                   return `${time} Uhr`;
                                   ]]]
                                show_icon: false
                                styles:
                                  card:
                                    - width: min
                                    - padding: 5px
                                    - background: none
                                    - box-shadow: none
                                  name:
                                    - font-size: 12px
                                    - color: |
                                        [[[
                                          if (entity.state == 'on') {
                                            return 'var(--black)';
                                          } else {
                                            return 'var(--primary-background-color)';
                                          }
                                        ]]]
                          end:
                            card:
                              type: conditional
                              conditions:
                                - condition: state
                                  entity: sensor.washing_machine_status
                                  state: Running
                              card:
                                type: custom:button-card
                                entity: sensor.waschmaschine_timer
                                name: |
                                  [[[
                                   var endTime = states['sensor.waschmaschine_timer'].attributes.end_time;
                                   // Extract time from the end time
                                   var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                                   return `${time} Uhr`;
                                   ]]]
                                show_icon: false
                                styles:
                                  card:
                                    - width: min
                                    - padding: 5px
                                    - background: none
                                    - box-shadow: none
                                  name:
                                    - font-size: 12px
                                    - color: |
                                        [[[
                                          if (entity.state == 'on') {
                                            return 'var(--black)';
                                          } else {
                                            return 'var(--primary-background-color)';
                                          }
                                        ]]]
                          icon1:
                            card:
                              type: custom:button-card
                              icon: mdi:washing-machine
                              styles:
                                card:
                                  - background-color: var(--contrast1)
                                  - width: 30px
                                  - height: 30px
                                icon:
                                  - width: 18px
                                  - color: var(--contrast20)
                          icon2:
                            card:
                              type: custom:button-card
                              entity: input_select.washing_machine_notification
                              icon: |
                                [[[
                                  if (states['input_select.washing_machine_notification'].state == 'Julian'){
                                    return "mdi:face-agent";
                                  } else if (states['input_select.washing_machine_notification'].state == 'Tammo'){
                                    return "mdi:face-man-profile";
                                    } else if (states['input_select.washing_machine_notification'].state == 'Anna'){
                                    return "mdi:face-woman";
                                  } else {
                                    return "mdi:account-group";
                                  }
                                ]]]
                              show_icon: true
                              show_name: false
                              tap_action:
                                action: more-info
                              styles:
                                card:
                                  - width: 24px
                                  - border: none
                                  - background: none
                                  - overflow: visible
                                  - box-shadow: none
                                icon:
                                  - width: 22px
                                  - color: |
                                      [[[
                                        if (entity.state == 'Clean') {
                                          return 'var(--black)';
                                        } else if (entity.state == 'Running') {
                                          return 'var(--black)';
                                        } else if (entity.state == 'Idle') {
                                          return 'var(--black)';
                                        } else if (entity.state == 'Off') {
                                          return 'var(--contrast20)';
                                       } else {
                                         return 'var(--primary-background-color)';
                                       }
                                      ]]]
                        styles:
                          grid:
                            - grid-template-areas: >-
                                ". icon1" "l l" "n icon2" "rem icon2" "bar bar"
                                "start end"
                            - grid-template-rows: >-
                                24px 1fr 24px min-content min-content
                                min-content
                            - grid-template-columns: 60% 40%
                          card:
                            - height: 100%
                            - padding: 1rem
                            - background: |
                                [[[
                                  if (entity.state == 'Clean') {
                                    return 'var(--green)';
                                  } else if (entity.state == 'Running') {
                                    return 'var(--blue)';
                                  } else if (entity.state == 'Idle') {
                                    return 'var(--yellow)';
                                  } else if (entity.state == 'Off') {
                                    return 'var(--contrast2)';
                                  } else {
                                    return 'var(--primary-text-color)';
                                  }
                                ]]]
                          img_cell:
                            - position: absolute
                            - top: 20%
                            - left: 40%
                            - overflow: visible
                          icon:
                            - position: absolute
                            - width: 20em
                            - opacity: 20%
                            - color: |
                                [[[
                                  if (entity.state == 'Clean') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Running') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Idle') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Off') {
                                    return 'var(--contrast20)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                            - transform: rotate(-20deg)
                            - animation: |
                                [[[
                                  if (states['sensor.washing_machine_status'].state == 'Clean') {
                                    return 'null';
                                  } else if (states['sensor.washing_machine_status'].state == 'Idle') {
                                    return 'blink 1.5s linear infinite';
                                  } else if (states['sensor.washing_machine_status'].state == 'Running') {
                                    return 'rotating 2s linear infinite';
                                  }
                                ]]] 
                          label:
                            - text-align: left
                            - font-size: 18px
                            - font-weight: 500
                            - justify-self: start
                            - align-self: end
                            - overflow: visible
                            - color: |
                                [[[
                                  if (entity.state == 'Clean') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Running') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Idle') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Off') {
                                    return 'var(--contrast20)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                          name:
                            - text-align: left
                            - font-size: 12px
                            - opacity: 0.7
                            - justify-self: start
                            - align-self: center
                            - overflow: visible
                            - color: |
                                [[[
                                  if (entity.state == 'Clean') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Running') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Idle') {
                                    return 'var(--black)';
                                  } else if (entity.state == 'Off') {
                                    return 'var(--contrast20)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                          custom_fields:
                            bar:
                              - justify-self: start
                              - width: 100%
                              - height: |
                                  [[[
                                    if (entity.state == 'Running') {
                                      return '12px';
                                    } else {
                                      return '0px';
                                    }
                                  ]]]
                              - background: var(--contrast1)
                              - border-radius: 24px
                            end:
                              - justify-self: end
                            start:
                              - justify-self: start
                            rem:
                              - justify-self: start
                              - align-self: end
                              - height: |
                                  [[[
                                    if (entity.state == 'Running') {
                                      return '27px';
                                    } else {
                                      return '0px';
                                    }
                                  ]]]
                            icon1:
                              - justify-self: end
                              - width: 24px
                              - color: |
                                  [[[
                                    if (entity.state == 'Clean') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Running') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Idle') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Off') {
                                      return 'var(--contrast20)';
                                    } else {
                                     return 'var(--primary-background-color)';
                                   }
                                  ]]]
                            icon2:
                              - justify-self: end
                              - align-self: end
                          hold_action:
                            action: more-info
              columns: 1
          - square: false
            columns: 1
            type: grid
            cards:
              - type: heading
                heading: Media
                heading_style: title
                icon: mdi:music
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: media_player.music
                    icon: mdi:spotify
                    color: green
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: remote.harmony_hub
                    icon: mdi:television
                    color: purple
                grid_options:
                  columns: 12
                  rows: 1
              - type: conditional
                conditions:
                  - entity: binary_sensor.media_player_active
                    state: 'on'
                card:
                  type: custom:swipe-card
                  card_width: calc(100% - 48px)
                  parameters:
                    centeredSlides: true
                    slidesPerView: auto
                    spaceBetween: 16
                    initialSlide: 0
                  cards:
                    - type: conditional
                      conditions:
                        - entity: media_player.music
                          state_not: idle
                        - entity: media_player.music
                          state_not: unavailable
                      card:
                        type: custom:button-card
                        entity: media_player.music
                        template: custom_card_mediaplayer_music
                    - type: conditional
                      conditions:
                        - entity: media_player.spotify_julian_
                          state_not: idle
                        - entity: media_player.spotify_julian_
                          state_not: unavailable
                        - entity: person.julian_
                          state: home
                      card:
                        type: custom:button-card
                        entity: media_player.spotify_julian_
                        template: custom_card_mediaplayer_music
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.is_tv_on
                          state: 'on'
                        - entity: switch.harmony_hub_nintendo_switch
                          state_not: 'on'
                        - entity: media_player.tv_and_ps5
                          state_not: idle
                      card:
                        type: custom:button-card
                        entity: media_player.tv_and_ps5
                        template: custom_card_mediaplayer_tv
                    - type: conditional
                      conditions:
                        - entity: media_player.steam
                          state_not: idle
                        - entity: media_player.steam
                          state_not: 'off'
                      card:
                        type: custom:button-card
                        entity: media_player.steam
                        template: custom_card_mediaplayer_tv
                    - type: conditional
                      conditions:
                        - entity: media_player.audiobook
                          state: playing
                        - condition: user
                          users:
                            - 82def695e9504f63b1eb09150073737d
                            - 3eea636aa3de4c7f9c662ad29c6e92e0
                      card:
                        type: custom:button-card
                        entity: media_player.audiobook
                        template: custom_card_mediaplayer_music
                        custom_fields:
                          icon1: |
                            [[[
                              return '<ha-icon icon="mdi:book-music-outline"></ha-icon>';
                            ]]]
                          play_state: |
                            [[[
                                return states[entity.entity_id].state + " - Alarm Clock"
                            ]]]
                        entity_picture: |
                          [[[
                              if (states['input_number.hp_book'].state == 1.0) {
                                return '/local/images/HP_1.jpg';
                              } else if (states['input_number.hp_book'].state == 2.0) {
                                return '/local/images/HP_2.jpg';
                              } else if (states['input_number.hp_book'].state == 3.0) {
                                return '/local/images/HP_3.jpg';
                              } else if (states['input_number.hp_book'].state == 4.0) {
                                return '/local/images/HP_4.jpg';
                              } else if (states['input_number.hp_book'].state == 5.0) {
                                return '/local/images/HP_5.jpg';
                              } else if (states['input_number.hp_book'].state == 6.0) {
                                return '/local/images/HP_6.jpg';
                              } else if (states['input_number.hp_book'].state == 7.0) {
                                return '/local/images/HP_7.jpg';
                              }
                          ]]]
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.media_player_active
                    state: 'off'
                card:
                  square: false
                  columns: 1
                  type: grid
                  cards:
                    - square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: media_player.music
                          icon: mdi:arrow-down
                          name: Room
                          label: Choose
                          show_label: true
                          tap_action:
                            action: none
                            haptic: success
                          template: button_template
                          variables:
                            icon2: mdi:arrow-down
                            state_on: playing
                            state_off: idle
                            background_color_off: var(--contrast2)
                            background_color_on: var(--green)
                            color_on: var(--contrast1)
                            color_off: var(--contrast20)
                        - type: custom:button-card
                          entity: media_player.nest_party
                          icon: mdi:home-variant
                          name: in all Rooms
                          label: Play
                          show_label: true
                          tap_action:
                            action: call-service
                            service: script.play_on_repeat_on_nest_party
                            haptic: success
                          template: button_template
                          variables:
                            icon2: mdi:home-variant
                            state_on: playing
                            state_off: 'off'
                            background_color_off: var(--contrast2)
                            background_color_on: var(--purple)
                            color_on: var(--contrast1)
                            color_off: var(--contrast20)
                    - square: true
                      columns: 6
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: media_player.living_room
                          icon: mdi:sofa-outline
                          show_name: false
                          aspect_ratio: 1/1
                          state:
                            - value: playing
                              icon: mdi:play-circle-outline
                          tap_action:
                            action: call-service
                            service: script.play_on_repeat_on_living_room_nest
                            haptic: success
                          styles:
                            card:
                              - border-radius: 18px
                              - background-color: var(--green)
                            icon:
                              - color: var(--black)
                        - type: custom:button-card
                          entity: media_player.bed_room
                          icon: mdi:bed
                          show_name: false
                          aspect_ratio: 1/1
                          state:
                            - value: playing
                              icon: mdi:play-circle-outline
                          tap_action:
                            action: call-service
                            service: script.play_on_repeat_on_alarm_clock
                            haptic: success
                          styles:
                            card:
                              - border-radius: 18px
                              - background-color: var(--blue)
                            icon:
                              - color: var(--black)
                        - type: custom:button-card
                          entity: media_player.office
                          icon: mdi:monitor
                          show_name: false
                          aspect_ratio: 1/1
                          state:
                            - value: playing
                              icon: mdi:play-circle-outline
                          tap_action:
                            action: call-service
                            service: script.play_on_repeat_on_office_nest
                            haptic: success
                          styles:
                            card:
                              - border-radius: 18px
                              - background-color: var(--red)
                            icon:
                              - color: var(--black)
                        - type: custom:button-card
                          entity: media_player.kitchen
                          icon: mdi:silverware-variant
                          show_name: false
                          aspect_ratio: 1/1
                          state:
                            - value: playing
                              icon: mdi:play-circle-outline
                          tap_action:
                            action: call-service
                            service: script.play_on_repeat_on_kitchen_nest
                            haptic: success
                          styles:
                            card:
                              - border-radius: 18px
                              - background-color: var(--yellow)
                            icon:
                              - color: var(--black)
                        - type: custom:button-card
                          entity: media_player.bathroom
                          icon: mdi:paper-roll-outline
                          show_name: false
                          aspect_ratio: 1/1
                          state:
                            - value: playing
                              icon: mdi:play-circle-outline
                          tap_action:
                            action: call-service
                            service: script.play_on_repeat_on_bathroom_nest
                            haptic: success
                          styles:
                            card:
                              - border-radius: 18px
                              - background-color: var(--purple)
                            icon:
                              - color: var(--black)
                        - type: custom:button-card
                          entity: media_player.guest_room
                          icon: mdi:desk
                          show_name: false
                          aspect_ratio: 1/1
                          state:
                            - value: playing
                              icon: mdi:play-circle-outline
                          tap_action:
                            action: call-service
                            service: script.play_on_repeat_on_guest_room_nest
                            haptic: success
                          styles:
                            card:
                              - border-radius: 18px
                              - background-color: var(--orange)
                            icon:
                              - color: var(--black)
          - type: vertical-stack
            cards:
              - type: heading
                heading: Security
                heading_style: title
                icon: mdi:security
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: switch.security_cameras
                    color: orange
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: group.window_sensors
                    color: red
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: group.motion_sensors
                    tap_action:
                      action: more-info
                    color: yellow
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: lock.flat_door
                    tap_action:
                      action: more-info
                    color: red
                grid_options:
                  columns: 12
                  rows: 1
                tap_action:
                  action: navigate
                  navigation_path: security
              - type: custom:button-card
                entity: alarm_control_panel.security_system
                template: alarm
                name: Security System
                tap_action:
                  action: navigate
                  navigation_path: security
                hold_action:
                  action: more-info
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    name: Julian
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.julian_
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 50%
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - box-shadow: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - box-shadow: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Julian
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.julian_'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - opacity: '0.7'
                              - box-shadow: none
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.julians_iphone_12_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.julians_iphone_12_battery_level') | float > 10  else 'var(--red)' }};
                                    --color: {{ 'var(--contrast20)' if states('sensor.julians_iphone_12_battery_level') | float > 10  else 'var(--black)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                  - type: custom:button-card
                    name: Anna
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.anna
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Anna
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.anna
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.anna'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - box-shadow: none
                              - opacity: '0.7'
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.annas_iphone_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --color: {{ 'var(--contrast20)' if states('sensor.annas_iphone_battery_level') | float > 10  else 'var(--black)' }};
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.annas_iphone_battery_level') | float > 10  else 'var(--red)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                  - type: custom:button-card
                    name: Valentin
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.dog
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Valentin
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.dog
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.dog'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - opacity: '0.7'
                              - box-shadow: none
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.valentin_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --color: {{ 'var(--contrast20)' if states('sensor.valentin_battery_level') | float > 10  else 'var(--black)' }};
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.valentin_battery_level') | float > 10  else 'var(--red)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                  - type: custom:button-card
                    name: Simone
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.dog_simone
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Simone
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.dog_simone
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.dog_simone'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - opacity: '0.7'
                              - box-shadow: none
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: input_boolean.dog_simone_present
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('input_boolean.dog_simone_present','on') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('input_boolean.dog_simone_present','on') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                  - type: custom:button-card
                    name: Simone
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.guest
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Guest
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.guest
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.guest'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - opacity: '0.7'
                              - box-shadow: none
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: input_boolean.guest_present
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('input_boolean.guest_present','on') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('input_boolean.guest_present','on') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                columns: 2
          - type: vertical-stack
            cards:
              - type: heading
                heading: Climate
                heading_style: title
                icon: mdi:thermostat
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: binary_sensor.heating
                    icon: mdi:thermometer
                    color: red
                tap_action:
                  action: navigate
                  navigation_path: home#climate
              - square: false
                type: grid
                cards:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: climate.living_room
                        state_not: auto
                    card:
                      type: custom:button-card
                      entity: climate.living_room
                      template: custom_card_climate
                      variables:
                        sensor: binary_sensor.living_room_window_door_sensor
                        name: '[[[ return "Living<br>Room" ]]]'
                        radius: 24px 24px 6px 24px
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: climate.bed_room
                        state_not: auto
                    card:
                      type: custom:button-card
                      entity: climate.bed_room
                      template: custom_card_climate
                      variables:
                        sensor: binary_sensor.bed_room_window_door_sensor
                        name: '[[[ return "Bed<br>Room" ]]]'
                        radius: 24px 24px 24px 6px
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: climate.office
                        state_not: auto
                    card:
                      type: custom:button-card
                      entity: climate.office
                      template: custom_card_climate
                      variables:
                        sensor: binary_sensor.office_window_door_sensor
                        name: '[[[ return "Office" ]]]'
                        radius: 24px 6px 6px 24px
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: climate.kitchen
                        state_not: auto
                    card:
                      type: custom:button-card
                      entity: climate.kitchen
                      template: custom_card_climate
                      variables:
                        sensor: binary_sensor.kitchen_window_door_sensor
                        name: '[[[ return "Kitchen" ]]]'
                        radius: 6px 24px 24px 6px
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: climate.bathroom
                        state_not: auto
                    card:
                      type: custom:button-card
                      entity: climate.bathroom
                      template: custom_card_climate
                      variables:
                        sensor: binary_sensor.bathroom_window_door_sensor
                        name: '[[[ return "Bathroom" ]]]'
                        radius: 24px 6px 24px 24px
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: climate.guest_room
                        state_not: auto
                    card:
                      type: custom:button-card
                      entity: climate.guest_room
                      template: custom_card_climate
                      variables:
                        sensor: binary_sensor.guest_room_window_door_sensor
                        name: '[[[ return "Guest<br>Room" ]]]'
                        radius: 6px 24px 24px 24px
                columns: 2
            visibility:
              - condition: state
                entity: binary_sensor.heating_auto
                state: 'on'
          - type: vertical-stack
            cards:
              - type: heading
                heading: Admin
                heading_style: title
                icon: mdi:account
                tap_action:
                  action: navigate
                  navigation_path: server
              - square: false
                type: grid
                cards:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: binary_sensor.raspberry_pi_health_attention
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: binary_sensor.raspberry_pi_health_attention
                      name: Optiplex Health
                      label: >-
                        [[[return
                        states["binary_sensor.raspberry_pi_health_attention"].state]]]
                      template: nav_button_state_small
                      variables:
                        navigation_path: server
                        icon_on: mdi:minidisc
                        icon_off: mdi:minidisc
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: binary_sensor.monitored_entities
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: binary_sensor.monitored_entities
                      icon: mdi:devices
                      name: Monitored
                      label: >-
                        [[[return
                        states["binary_sensor.monitored_entities"].state]]]
                      template: nav_button_state_small
                      variables:
                        navigation_path: server#monitored
                        icon_on: mdi:devices
                        icon_off: mdi:devices
                        background_color_on: var(--red)
                        background_color_off: var(--green)
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: binary_sensor.home_assistant_update
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: binary_sensor.home_assistant_update
                      icon: mdi:update
                      name: Updates
                      label: |
                        [[[
                          if (entity.state == "on") return "Available";
                          else return "None";
                        ]]]
                      template: nav_button_small
                      variables:
                        navigation_path: '#updates'
                        icon_on: mdi:update
                        icon_off: mdi:update
                        background_color_on: var(--red)
                        background_color_off: var(--contrast2)
                        color_off: null
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: binary_sensor.battery_health_attention
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: binary_sensor.battery_health_attention
                      name: Batteries
                      label: >-
                        [[[return
                        states["binary_sensor.battery_health_attention"].state]]]
                      template: nav_button_state_small
                      variables:
                        navigation_path: '#battery'
                        icon_on: mdi:battery-alert-variant-outline
                        icon_off: mdi:battery-80
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.junglemoneynas_volume_1_status
                        state_not: normal
                    card:
                      type: custom:button-card
                      entity: sensor.junglemoneynas_volume_1_status
                      icon: mdi:nas
                      name: 'Status: Error'
                      label: >-
                        [[[return
                        states["sensor.junglemoneynas_volume_1_volume_used"].state
                        + "%"]]]
                      template: nav_button_small
                      variables:
                        navigation_path: '#nas'
                        icon_on: mdi:nas
                        icon_off: mdi:nas
                        state_off: normal
                        background_color_on: var(--red)
                        background_color_off: var(--blue)
                      state:
                        - value: normal
                          name: 'Status: normal'
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: binary_sensor.uptime_kuma
                        state: 'off'
                    card:
                      type: custom:button-card
                      entity: binary_sensor.uptime_kuma
                      icon: mdi:sort-clock-descending-outline
                      name: Uptime Kuma
                      label: '[[[return states["binary_sensor.uptime_kuma"].state]]]'
                      template: nav_button_small
                      variables:
                        navigation_path: '#uptime'
                        icon_on: mdi:sort-clock-descending-outline
                        icon_off: mdi:sort-clock-descending-outline
                        background_color_on: var(--purple)
                        background_color_off: var(--red)
                columns: 3
            visibility:
              - condition: or
                conditions:
                  - condition: state
                    entity: binary_sensor.home_assistant_update
                    state: 'on'
                  - condition: state
                    entity: sensor.junglemoneynas_volume_1_status
                    state_not: normal
                  - condition: state
                    entity: binary_sensor.battery_health_attention
                    state: 'on'
                  - condition: state
                    entity: binary_sensor.uptime_kuma
                    state: 'off'
                  - condition: state
                    entity: binary_sensor.raspberry_pi_health_attention
                    state: 'on'
              - condition: user
                users:
                  - 3eea636aa3de4c7f9c662ad29c6e92e0
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template: custom_card_user
              - type: custom:bubble-card
                card_type: empty-column
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: conditional
            conditions:
              - entity: switch.security_cameras
                state: 'on'
              - condition: state
                entity: input_boolean.vacation_mode
                state: 'off'
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
            card:
              type: custom:swipe-card
              card_width: calc(100% - 48px)
              parameters:
                centeredSlides: true
                slidesPerView: auto
                spaceBetween: 16
                initialSlide: 0
              cards:
                - type: conditional
                  conditions:
                    - entity: switch.camera_corridor_outlet
                      state: 'on'
                    - entity: switch.camera_living_room
                      state: 'on'
                    - entity: switch.camera_office_outlet
                      state: 'on'
                  card:
                    type: custom:button-card
                    entity: camera.192_168_178_78
                    show_entity_picture: true
                    show_name: false
                    tap_action:
                      action: more-info
                    double_tap_action:
                      action: more-info
                    styles:
                      grid:
                        - grid-template-areas: '"i two" "i three"'
                        - grid-template-columns: 50% 50%
                        - grid-template-rows: 50% 50%
                      card:
                        - background: var(--contrast2)
                        - padding: 0
                        - border-radius: 16px
                      entity_picture:
                        - width: 100%
                        - height: 100%
                        - object-fit: cover
                    custom_fields:
                      two:
                        card:
                          type: custom:button-card
                          entity: camera.192_168_178_125
                          show_entity_picture: true
                          show_name: false
                          tap_action:
                            action: more-info
                          double_tap_action:
                            action: more-info
                          styles:
                            card:
                              - background: var(--contrast2)
                              - padding: 0
                              - border-radius: 0px 16px 0px 0px
                              - border-left: 2px solid black
                              - border-bottom: 1px solid black
                            entity_picture:
                              - width: 100%
                              - height: 100%
                      three:
                        card:
                          type: custom:button-card
                          entity: camera.192_168_178_77
                          show_entity_picture: true
                          show_name: false
                          tap_action:
                            action: more-info
                          double_tap_action:
                            action: more-info
                          styles:
                            card:
                              - background: var(--contrast2)
                              - padding: 0
                              - border-radius: 0px 0px 16px 0px
                              - border-left: 2px solid black
                              - border-top: 1px solid black
                            entity_picture:
                              - width: 100%
                              - height: 100%
                - type: conditional
                  conditions:
                    - entity: switch.camera_corridor_outlet
                      state: 'on'
                  card:
                    show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    tap_action:
                      action: navigate
                      navigation_path: cameras
                    entity: camera.192_168_178_78
                - type: conditional
                  conditions:
                    - entity: switch.camera_living_room
                      state: 'on'
                  card:
                    show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    tap_action:
                      action: navigate
                      navigation_path: cameras
                    entity: camera.192_168_178_125
                - type: conditional
                  conditions:
                    - entity: switch.camera_office_outlet
                      state: 'on'
                  card:
                    show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    tap_action:
                      action: navigate
                      navigation_path: cameras
                    entity: camera.192_168_178_77
          - type: vertical-stack
            cards:
              - type: custom:swipe-card
                card_width: 100%
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 16
                  start_card: 1
                cards:
                  - type: custom:button-card
                    styles:
                      grid:
                        - grid-template-areas: '''item1 item2 item3'''
                        - grid-template-columns: 1fr 1fr 1fr
                      card:
                        - padding: 15px
                      custom_fields:
                        item1:
                          - justify-self: start
                        item2:
                          - justify-self: center
                        item3:
                          - justify-self: end
                    custom_fields:
                      item1:
                        card:
                          type: custom:button-card
                          icon: |
                            [[[
                              if (states['binary_sensor.heating'].state == "on") return "mdi:fire";
                              else if (states['binary_sensor.heating_auto'].state == "off") return "mdi:thermometer";
                              else return "mdi:thermostat";
                            ]]]
                          name: Temperature
                          label: >-
                            [[[ return states["sensor.temperature_mean"].state +
                            "°C" ]]]
                          show_label: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['binary_sensor.heating'].state == "on") return "var(--red)";
                                    else if (states['binary_sensor.heating_auto'].state == "off") return "var(--green)";
                                    else return "var(--contrast10)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#climate'
                      item2:
                        card:
                          type: custom:button-card
                          icon: mdi:lightning-bolt
                          name: Energy
                          label: >-
                            [[[ return
                            states["sensor.tasmota_power_power_curr"].state +
                            "kwh" ]]]
                          show_label: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--yellow)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: energy
                      item3:
                        card:
                          type: custom:button-card
                          icon: mdi:water-percent
                          name: Humidity
                          label: >-
                            [[[ return states["sensor.humidity_mean"].state +
                            "%"]]]
                          show_label: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['sensor.humidity_maximum'].state > "70") return "var(--red)";
                                    else return "var(--blue)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#climate'
                  - type: grid
                    square: true
                    columns: 5
                    cards:
                      - type: custom:button-card
                        entity: media_player.music
                        icon: mdi:speaker-play
                        show_name: false
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: script.play_on_repeat_on_nest_automatic
                          haptic: success
                        hold_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 18px
                            - background-color: var(--green)
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "playing") return "var(--white)";
                                  else return "var(--black)";
                                ]]]
                      - type: custom:button-card
                        entity: light.living_room_light
                        show_name: false
                        aspect_ratio: 1/1
                        tap_action:
                          action: toggle
                          haptic: success
                        hold_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 18px
                            - background-color: var(--yellow)
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--white)";
                                  else return "var(--black)";
                                ]]]
                      - type: custom:button-card
                        entity: lock.flat_door
                        show_name: false
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: lock.lock
                          service_data:
                            entity_id: lock.flat_door
                            code: 927555
                          haptic: success
                        hold_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 18px
                            - background-color: var(--red)
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "unlocked") return "var(--white)";
                                  else return "var(--black)";
                                ]]]
                      - type: custom:button-card
                        entity: switch.junglemoneyguest
                        icon: mdi:wifi-off
                        show_name: false
                        aspect_ratio: 1/1
                        state:
                          - value: 'on'
                            icon: mdi:wifi
                        tap_action:
                          action: toggle
                          haptic: success
                        hold_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 18px
                            - background-color: var(--blue)
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--white)";
                                  else return "var(--black)";
                                ]]]
                      - type: custom:button-card
                        entity: switch.adguard_protection_home
                        icon: mdi:shield-off-outline
                        show_name: false
                        aspect_ratio: 1/1
                        state:
                          - value: 'on'
                            icon: mdi:shield-check
                        tap_action:
                          action: toggle
                          haptic: success
                        hold_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 18px
                            - background-color: var(--purple)
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--white)";
                                  else return "var(--black)";
                                ]]]
                  - type: custom:button-card
                    styles:
                      grid:
                        - grid-template-areas: '''item1 item2 item3'''
                        - grid-template-columns: 1fr 1fr 1fr
                      card:
                        - padding: 15px
                      custom_fields:
                        item1:
                          - justify-self: start
                        item2:
                          - justify-self: center
                        item3:
                          - justify-self: end
                    custom_fields:
                      item1:
                        card:
                          type: custom:button-card
                          entity: binary_sensor.is_alarm_on
                          icon: mdi:alarm-off
                          name: Alarm
                          label: '[[[ return states["sensor.wake_time_1"].state ]]]'
                          show_label: true
                          state:
                            - value: 'on'
                              icon: mdi:alarm
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['binary_sensor.is_alarm_on'].state == "on") return "var(--yellow)";
                                    else return "var(--contrast10)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#alarm'
                      item2:
                        card:
                          type: custom:button-card
                          entity: vacuum.dobby
                          icon: mdi:robot-vacuum-alert
                          name: Dobby
                          label: Error
                          show_label: true
                          state:
                            - value: docked
                              label: Docked
                              icon: mdi:robot-vacuum-off
                              styles:
                                icon:
                                  - color: var(--contrast10)
                            - value: cleaning
                              label: Cleaning
                              icon: mdi:robot-vacuum
                              styles:
                                icon:
                                  - color: var(--blue)
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--red)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#vacuum'
                          double_tap_action:
                            action: more-info
                      item3:
                        card:
                          type: custom:button-card
                          entity: sensor.prusa_mini
                          icon: mdi:printer-3d-nozzle-alert
                          name: 3D Printer
                          label: Error
                          show_label: true
                          state:
                            - value: unavailable
                              label: 'Off'
                              icon: mdi:printer-3d-off
                              styles:
                                icon:
                                  - color: var(--contrast10)
                            - value: unknown
                              label: 'Off'
                              icon: mdi:printer-3d-off
                              styles:
                                icon:
                                  - color: var(--contrast10)
                            - value: idle
                              label: Idle
                              icon: mdi:printer-3d
                              styles:
                                icon:
                                  - color: var(--contrast20)
                            - value: printing
                              label: Printing
                              icon: mdi:printer-3d-nozzle
                              styles:
                                icon:
                                  - color: var(--purple)
                            - value: finished
                              label: Done
                              icon: mdi:printer-3d
                              styles:
                                icon:
                                  - color: var(--green)
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--red)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: server#3d-printer
                          double_tap_action:
                            action: more-info
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: custom:decluttering-card
            template: footer_template
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 767px)'
      - type: grid
        cards:
          - type: custom:navbar-card
            desktop:
              position: left
              min_width: 768
              show_labels: true
            mobile:
              show_labels: true
            routes:
              - icon: mdi:home-outline
                icon_selected: mdi:home-assistant
                url: /dashboard-bubble/home
                label: Home
                selected: |
                  [[[
                    if (location.hash == '#living-room') return false;
                    else if (location.hash == '#bedroom') return false;
                    else if (location.hash == '#office') return false;
                    else if (location.hash == '#kitchen') return false;
                    else if (location.hash == '#bathroom') return false;
                    else if (location.hash == '#guest-room') return false;
                    else if (location.hash == '#corridor') return false;
                    else if (location.hash == '#remote') return false;
                    else if (location.hash == '#julian') return false;
                    else if (location.hash == '#anna') return false;
                    else return true;
                  ]]]
              - icon: mdi:sofa-outline
                icon_selected: mdi:sofa
                label: Rooms
                selected: |
                  [[[
                    if (location.hash == '#living-room') return true;
                    else if (location.hash == '#bedroom') return true;
                    else if (location.hash == '#office') return true;
                    else if (location.hash == '#kitchen') return true;
                    else if (location.hash == '#bathroom') return true;
                    else if (location.hash == '#guest-room') return true;
                    else if (location.hash == '#corridor') return true;
                    else return false;
                  ]]]
                badge:
                  show: |
                    [[[ return states['light.all_lights'].state === 'on' ]]]
                  color: var(--yellow-color)
                  count: |
                    [[[ return states['sensor.lights_on_count'].state ]]]
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:sofa-outline
                    url: /dashboard-bubble/home#living-room
                    label: Living Room
                  - icon: mdi:bed-king-outline
                    url: /dashboard-bubble/home#bedroom
                    label: Bedroom
                  - icon: mdi:monitor
                    url: /dashboard-bubble/home#office
                    label: Office
                  - icon: mdi:silverware-variant
                    url: /dashboard-bubble/home#kitchen
                    label: Kitchen
                  - icon: mdi:paper-roll-outline
                    url: /dashboard-bubble/home#bathroom
                    label: Bathroom
                  - icon: mdi:desk
                    url: /dashboard-bubble/home#guest-room
                    label: Guest Room
                  - icon: mdi:door
                    url: /dashboard-bubble/home#corridor
                    label: Corridor
              - icon: mdi:music
                url: /dashboard-bubble/music
                label: Music
                badge:
                  show: >
                    [[[ return states['media_player.music'].state === 'playing'
                    ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return false;
                    else if (states['remote.harmony_hub'].state == "on") return true;
                    else return false;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:television
                url: /dashboard-bubble/home#remote
                label: TV
                badge:
                  show: >
                    [[[ return states['media_player.tv_and_ps5'].state ===
                    'playing' ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return true;
                    else if (states['remote.harmony_hub'].state == "on") return false;
                    else return true;
                  ]]]
                selected: |
                  [[[
                    return location.hash == '#remote';
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:shield-outline
                icon_selected: mdi:security
                url: /dashboard-bubble/security
                label: Security
                badge:
                  show: >
                    [[[ return states['binary_sensor.window_sensors'].state ===
                    'on' ]]]
                  color: var(--red-color)
                  count: |
                    [[[ return states['sensor.window_open_count'].state ]]]
              - icon: mdi:face-agent
                url: /dashboard-bubble/home#julian
                label: Julian
                selected: |
                  [[[
                    return location.hash == '#julian';
                  ]]]
                hidden: |
                  [[[ return user.name != "Julian" ]]]
                badge:
                  show: >
                    [[[ return states['input_boolean.debug_rounded'].state ===
                    'on' ]]]
                  color: var(--red-color)
              - icon: mdi:face-woman
                url: /dashboard-bubble/home#anna
                label: Anna
                selected: |
                  [[[
                    return location.hash == '#anna';
                  ]]]
                hidden: |
                  [[[ return user.name != "Anna" ]]]
              - icon: mdi:dots-horizontal
                label: More
                badge:
                  show: |
                    [[[
                      if (states['binary_sensor.monitored_entities'].state == "on") return true;
                      else if (states['binary_sensor.home_assistant_update'].state == "on") return true;
                      else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                      else return false;
                    ]]]
                  color: var(--red-color)
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:server-outline
                    url: /dashboard-bubble/server
                    label: Server
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                    badge:
                      show: |
                        [[[
                          if (states['binary_sensor.monitored_entities'].state == "on") return true;
                          else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                          else return false;
                        ]]]
                      color: var(--red-color)
                  - icon: mdi:cart
                    url: /dashboard-bring/home
                    label: Shopping List
                    badge:
                      show: |
                        [[[ return states['todo.shopping_list'].state > 0 ]]]
                      color: var(--red-color)
                      count: |
                        [[[ return states['todo.shopping_list'].state ]]]
                  - icon: mdi:bookshelf
                    url: /d5369777_music_assistant/ingress
                    label: Music Assistant
                  - icon: mdi:cog
                    url: /config/dashboard
                    label: Settings
                    badge:
                      show: >
                        [[[ return
                        states['binary_sensor.home_assistant_update'].state ===
                        'on' ]]]
                      color: var(--red-color)
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                  - icon: mdi:hammer
                    url: /developer-tools/yaml
                    label: Developer Tools
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
            styles: |
              .navbar {
                --navbar-primary-color: var(--purple-color);
                background: var(--contrast2);
              }
          - type: vertical-stack
            cards:
              - type: heading
                heading: Rooms
                heading_style: title
                icon: mdi:floor-plan
                visibility:
                  - condition: screen
                    media_query: '(min-width: 768px)'
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: input_boolean.all_rooms
                    name: Show all
                    state_content: name
                    color: purple
                    tap_action:
                      action: toggle
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Rooms
                icon: mdi:floor-plan
                sub_button:
                  - entity: input_boolean.rooms_quick_access
                    tap_action:
                      action: toggle
                    visibility:
                      - condition: user
                        users:
                          - 3eea636aa3de4c7f9c662ad29c6e92e0
                  - entity: input_boolean.all_rooms
                    name: Show all
                    show_name: true
                    tap_action:
                      action: toggle
                styles: |-
                  .bubble-sub-button-1 {
                      background-color: ${hass.states['input_boolean.rooms_quick_access'].state === 'on' ? 'var(--green)' : 'var(--contrast1)'} !important;
                      color: ${hass.states['input_boolean.rooms_quick_access'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                  }
                  .bubble-sub-button-2 {
                      background-color: ${hass.states['input_boolean.all_rooms'].state === 'on' ? 'var(--purple)' : 'var(--contrast1)'} !important;
                      color: ${hass.states['input_boolean.all_rooms'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                  }
              - type: custom:bubble-card
                card_type: empty-column
                visibility:
                  - condition: state
                    entity: input_boolean.rooms_quick_access
                    state: 'on'
              - type: vertical-stack
                cards:
                  - type: custom:bubble-card
                    card_type: climate
                    button_type: slider
                    entity: climate.living_room
                    icon: mdi:lightbulb-group
                    tap_action:
                      action: perform-action
                      perform_action: light.toggle
                      target:
                        entity_id: light.living_room_lights
                    sub_button:
                      - entity: select.harmony_hub_activities
                        icon: mdi:television
                      - entity: media_player.living_room
                        icon: mdi:music
                        tap_action:
                          action: perform-action
                          perform_action: script.play_on_repeat_on_living_room_nest
                          target: {}
                    force_icon: false
                    show_state: true
                    show_last_changed: false
                    show_attribute: true
                    state_color: false
                    slider_live_update: false
                    name: Living Room
                    attribute: current_temperature
                    styles: >-
                      .bubble-icon {
                        color: ${hass.states['light.living_room_lights'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ha-card {
                        --bubble-icon-background-color: ${hass.states['light.living_room_lights'].state === 'on' ? 'var(--yellow)' : 'var(--contrast1)'} !important;
                      }

                      .bubble-sub-button-1 {
                          background-color: ${hass.states['remote.harmony_hub'].state === 'on' ? 'var(--purple)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['remote.harmony_hub'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      .bubble-sub-button-2 {
                          background-color: ${hass.states['media_player.living_room'].state === 'playing' ? 'var(--green)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['media_player.living_room'].state === 'playing' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ${icon.setAttribute("icon",
                      hass.states['light.living_room_lights'].state === 'on' ?
                      'mdi:lightbulb-group' : 'mdi:lightbulb-group-outline')}
                    visibility:
                      - condition: state
                        entity: input_boolean.rooms_quick_access
                        state: 'on'
                      - condition: state
                        entity: sensor.julians_apple_watch_area
                        state: Living room
                  - type: custom:bubble-card
                    card_type: climate
                    button_type: slider
                    entity: climate.office
                    icon: mdi:lightbulb-group
                    tap_action:
                      action: perform-action
                      perform_action: light.toggle
                      target:
                        entity_id: light.office_lights
                    sub_button:
                      - entity: switch.desk_webcam
                        tap_action:
                          action: toggle
                      - entity: media_player.office
                        icon: mdi:music
                        tap_action:
                          action: perform-action
                          perform_action: script.play_on_repeat_on_office_nest
                          target: {}
                    force_icon: false
                    show_state: true
                    show_last_changed: false
                    show_attribute: true
                    state_color: false
                    slider_live_update: false
                    name: Office
                    attribute: current_temperature
                    styles: >-
                      .bubble-icon {
                        color: ${hass.states['light.office_lights'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ha-card {
                        --bubble-icon-background-color: ${hass.states['light.office_lights'].state === 'on' ? 'var(--yellow)' : 'var(--contrast1)'} !important;
                      }

                      .bubble-sub-button-1 {
                          background-color: ${hass.states['switch.desk_webcam'].state === 'on' ? 'var(--purple)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['switch.desk_webcam'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      .bubble-sub-button-2 {
                          background-color: ${hass.states['media_player.office'].state === 'playing' ? 'var(--green)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['media_player.office'].state === 'playing' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ${icon.setAttribute("icon",
                      hass.states['light.office_lights'].state === 'on' ?
                      'mdi:lightbulb-group' : 'mdi:lightbulb-group-outline')}
                    visibility:
                      - condition: state
                        entity: input_boolean.rooms_quick_access
                        state: 'on'
                      - condition: state
                        entity: sensor.julians_apple_watch_area
                        state: Office
                  - type: custom:bubble-card
                    card_type: climate
                    button_type: slider
                    entity: climate.bed_room
                    icon: mdi:lightbulb-group
                    tap_action:
                      action: perform-action
                      perform_action: light.toggle
                      target:
                        entity_id: light.bed_room_lights
                    sub_button:
                      - entity: sensor.wake_time_1
                        icon: mdi:alarm
                        show_state: true
                        tap_action:
                          action: navigate
                          navigation_path: '#alarm'
                      - entity: switch.fan_outlet
                        tap_action:
                          action: toggle
                    force_icon: false
                    show_state: true
                    show_last_changed: false
                    show_attribute: true
                    state_color: false
                    slider_live_update: false
                    name: Bedroom
                    attribute: current_temperature
                    styles: >-
                      .bubble-icon {
                        color: ${hass.states['light.bed_room_lights'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ha-card {
                        --bubble-icon-background-color: ${hass.states['light.bed_room_lights'].state === 'on' ? 'var(--yellow)' : 'var(--contrast1)'} !important;
                      }

                      .bubble-sub-button-1 {
                          background-color: ${hass.states['binary_sensor.is_alarm_on'].state === 'on' ? 'var(--yellow)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['binary_sensor.is_alarm_on'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      .bubble-sub-button-2 {
                          background-color: ${hass.states['switch.fan_outlet'].state === 'on' ? 'var(--blue)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['switch.fan_outlet'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ${icon.setAttribute("icon",
                      hass.states['light.bed_room_lights'].state === 'on' ?
                      'mdi:lightbulb-group' : 'mdi:lightbulb-group-outline')}
                    visibility:
                      - condition: state
                        entity: input_boolean.rooms_quick_access
                        state: 'on'
                      - condition: state
                        entity: sensor.julians_apple_watch_area
                        state: Bedroom
                  - type: custom:bubble-card
                    card_type: climate
                    button_type: slider
                    entity: climate.kitchen
                    icon: mdi:lightbulb-group
                    tap_action:
                      action: perform-action
                      perform_action: light.toggle
                      target:
                        entity_id: light.kitchen_lights
                    sub_button:
                      - entity: switch.coffee_maker_outlet
                        tap_action:
                          action: toggle
                      - entity: media_player.kitchen
                        icon: mdi:music
                        tap_action:
                          action: perform-action
                          perform_action: script.play_on_repeat_on_kitchen_nest
                          target: {}
                    force_icon: false
                    show_state: true
                    show_last_changed: false
                    show_attribute: true
                    state_color: false
                    slider_live_update: false
                    name: Kitchen
                    attribute: current_temperature
                    styles: >-
                      .bubble-icon {
                        color: ${hass.states['light.kitchen_lights'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ha-card {
                        --bubble-icon-background-color: ${hass.states['light.kitchen_lights'].state === 'on' ? 'var(--yellow)' : 'var(--contrast1)'} !important;
                      }

                      .bubble-sub-button-1 {
                          background-color: ${hass.states['switch.coffee_maker_outlet'].state === 'on' ? 'var(--purple)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['switch.coffee_maker_outlet'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      .bubble-sub-button-2 {
                          background-color: ${hass.states['media_player.kitchen'].state === 'playing' ? 'var(--green)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['media_player.kitchen'].state === 'playing' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ${icon.setAttribute("icon",
                      hass.states['light.kitchen_lights'].state === 'on' ?
                      'mdi:lightbulb-group' : 'mdi:lightbulb-group-outline')}
                    visibility:
                      - condition: state
                        entity: input_boolean.rooms_quick_access
                        state: 'on'
                      - condition: state
                        entity: sensor.julians_apple_watch_area
                        state: Kitchen
                  - type: custom:bubble-card
                    card_type: climate
                    button_type: slider
                    entity: climate.bathroom
                    icon: mdi:lightbulb-group
                    tap_action:
                      action: perform-action
                      perform_action: light.toggle
                      target:
                        entity_id: light.bathroom_lights
                    sub_button:
                      - entity: media_player.bathroom
                        icon: mdi:music
                        tap_action:
                          action: perform-action
                          perform_action: script.play_on_repeat_on_bathroom_nest
                          target: {}
                    force_icon: false
                    show_state: true
                    show_last_changed: false
                    show_attribute: true
                    state_color: false
                    slider_live_update: false
                    name: Bathroom
                    attribute: current_temperature
                    styles: >-
                      .bubble-icon {
                        color: ${hass.states['light.bathroom_lights'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ha-card {
                        --bubble-icon-background-color: ${hass.states['light.bathroom_lights'].state === 'on' ? 'var(--yellow)' : 'var(--contrast1)'} !important;
                      }

                      .bubble-sub-button-1 {
                          background-color: ${hass.states['media_player.bathroom'].state === 'playing' ? 'var(--green)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['media_player.bathroom'].state === 'playing' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ${icon.setAttribute("icon",
                      hass.states['light.bathroom_lights'].state === 'on' ?
                      'mdi:lightbulb-group' : 'mdi:lightbulb-group-outline')}
                    visibility:
                      - condition: state
                        entity: input_boolean.rooms_quick_access
                        state: 'on'
                      - condition: state
                        entity: sensor.julians_apple_watch_area
                        state: Bathroom
                  - type: custom:bubble-card
                    card_type: climate
                    button_type: slider
                    entity: climate.guest_room
                    icon: mdi:lightbulb-group
                    tap_action:
                      action: perform-action
                      perform_action: light.toggle
                      target:
                        entity_id: light.guest_room_lights
                    sub_button:
                      - entity: sensor.prusalink_progress
                        icon: mdi:printer-3d-nozzle
                        show_state: true
                        visibility:
                          - condition: state
                            entity: sensor.prusalink_progress
                            state_not: unavailable
                        tap_action:
                          action: navigate
                          navigation_path: 3d-printer
                      - entity: media_player.guest_room
                        icon: mdi:music
                        tap_action:
                          action: perform-action
                          perform_action: script.play_on_repeat_on_guest_room_nest
                          target: {}
                    force_icon: false
                    show_state: true
                    show_last_changed: false
                    show_attribute: true
                    state_color: false
                    slider_live_update: false
                    name: Guest Room
                    attribute: current_temperature
                    styles: >-
                      .bubble-icon {
                        color: ${hass.states['light.guest_room_lights'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ha-card {
                        --bubble-icon-background-color: ${hass.states['light.guest_room_lights'].state === 'on' ? 'var(--yellow)' : 'var(--contrast1)'} !important;
                      }

                      .bubble-sub-button-1 {
                          background-color: var(--purple) !important;
                          color: black !important;
                      }

                      .bubble-sub-button-2 {
                          background-color: ${hass.states['media_player.guest_room'].state === 'playing' ? 'var(--green)' : 'var(--contrast3)'} !important;
                          color: ${hass.states['media_player.guest_room'].state === 'playing' ? 'var(--black)' : 'var(--contrast20)'} !important;
                      }

                      ${icon.setAttribute("icon",
                      hass.states['light.guest_room_lights'].state === 'on' ?
                      'mdi:lightbulb-group' : 'mdi:lightbulb-group-outline')}
                    visibility:
                      - condition: state
                        entity: input_boolean.rooms_quick_access
                        state: 'on'
                      - condition: state
                        entity: sensor.julians_apple_watch_area
                        state: Guest room
                visibility:
                  - condition: user
                    users:
                      - 3eea636aa3de4c7f9c662ad29c6e92e0
              - type: custom:bubble-card
                card_type: empty-column
                visibility:
                  - condition: state
                    entity: input_boolean.rooms_quick_access
                    state: 'on'
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: grid
            square: false
            columns: 2
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:button-card
                    entity: light.living_room_lights
                    variables:
                      name: |
                        [[[ return 'Living<br>Room']]]
                      state: |
                        [[[ 
                          var temp = states['sensor.living_room_temperature'].state;
                          var hum = states['sensor.living_room_humidity'].state;
                          return `
                          ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                        0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                          `
                        ]]]
                      radius: 24px 24px 6px 24px
                    icon: |
                      [[[
                        if (states['binary_sensor.living_room_window_door_sensor'].state == "on") return "mdi:window-open-variant";
                        else if (states['climate.living_room'].state == "heat") return "mdi:fire-circle";
                        else if (states['sensor.living_room_next_timer'].state != "unknown" && states['sensor.living_room_next_timer'].state != "unavailable") return "mdi:timer-outline";
                        else if (states['input_boolean.living_room_occupancy'].state == "on") return "mdi:light-switch";
                        else if (states['input_boolean.living_room_night_mode'].state == "on") return "mdi:weather-night";
                        else if (states['media_player.living_room'].state == "playing" && states['media_player.spotify_junglemoney'].state == "playing") return "mdi:music";
                        else return "mdi:sofa-outline";
                      ]]]
                    name: '[[[ return variables.name ]]]'
                    tap_action:
                      action: navigate
                      navigation_path: '#living-room'
                      haptic: medium
                    hold_action:
                      action: toggle
                      haptic: medium
                    double_tap_action:
                      action: call-service
                      service: script.living_room_double_tap_action
                      haptic: success
                    custom_fields:
                      temp: '[[[ return variables.state ]]]'
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - height: 155px
                          grid:
                            - grid-template-areas: '"n i" "temp temp" "slider slider"'
                            - grid-template-rows: 1fr min-content
                            - grid-template-columns: min-content 1fr
                          custom_fields:
                            temp:
                              - margin-bottom: 10px
                        custom_fields:
                          slider:
                            card:
                              type: custom:my-slider-v2
                              entity: '[[[ return entity.entity_id ]]]'
                              colorMode: brightness
                              styles:
                                container:
                                  - background: none
                                  - border-radius: 0px
                                  - overflow: visible
                                card:
                                  - height: 25px
                                  - padding: 0px
                                  - background: >-
                                      rgba(var(--contrast1-RGB),var(--color-tint))
                                  - border-radius: 0px
                                  - width: 100%
                                  - position: absolute
                                  - margin-top: '-15px'
                                  - margin-left: '-8px'
                                track:
                                  - overflow: visible
                                  - background: none
                                progress:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                                        else return "var(--contrast4)";
                                      ]]]
                                thumb:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "var(--black)";
                                        if (entity.state == "off") return "var(--contrast20)";
                                        else return "var(--contrast8)";
                                      ]]]
                                  - top: 0px
                                  - right: '-6px'
                                  - height: 25px
                                  - width: 3px
                    styles:
                      card:
                        - padding: 8px
                        - height: 130px
                        - border-radius: '[[[ return variables.radius ]]]'
                        - background: |
                            [[[
                              if (entity.state == "on") return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      grid:
                        - grid-template-areas: '"n i" "temp temp"'
                        - grid-template-rows: 1fr min-content
                        - grid-template-columns: min-content 1fr
                      icon:
                        - width: 24px
                        - color: |
                            [[[
                              if (states['input_boolean.living_room_occupancy'].state == "on") return "var(--black)";
                              else if (states['input_boolean.living_room_night_mode'].state == "on") return "var(--black)";
                              else if (states['binary_sensor.living_room_window_door_sensor'].state == "on") return "var(--black)";
                              else if (states['climate.living_room'].state == "heat") return "var(--black)";
                              else if (entity.state == "on") return "var(--contrast20)";
                              else return "var(--contrast20)";
                            ]]]
                      img_cell:
                        - justify-self: end
                        - background: |
                            [[[
                              if (states['input_boolean.living_room_occupancy'].state == "on") return "var(--red)";
                              else if (states['input_boolean.living_room_night_mode'].state == "on") return "var(--blue)";
                              else if (states['binary_sensor.living_room_window_door_sensor'].state == "on") return "var(--red)";
                              else if (states['climate.living_room'].state == "heat") return "var(--red)";
                              else if (entity.state == "on") return "var(--contrast1)";
                              else return "var(--contrast1)";
                            ]]]
                        - border-radius: 100%
                        - align-self: start
                        - width: 50px
                        - height: 50px
                      name:
                        - justify-self: start
                        - align-self: start
                        - text-align: left
                        - font-size: 1em
                        - font-weight: 500
                        - color: |
                            [[[
                              if (entity.state == "on") return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                        - padding: 14px
                        - margin-bottom: 35px
                      custom_fields:
                        temp:
                          - justify-self: start
                          - font-size: 2.4em
                          - line-height: 1em
                          - font-weight: 300
                          - color: |
                              [[[
                                if (entity.state == "on") return "var(--black)";
                                else return "var(--contrast20)";
                              ]]]
                          - padding: 0 0 6px 14px
                  - type: custom:button-card
                    entity: light.office_lights
                    variables:
                      name: Office
                      state: |
                        [[[ 
                          var temp = states['sensor.office_temperature'].state;
                          var hum = states['sensor.office_humidity'].state;
                          return `
                          ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                        0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                          `
                        ]]]
                      radius: 24px 6px 6px 24px
                    icon: |
                      [[[
                        if (states['binary_sensor.office_window_door_sensor'].state == "on") return "mdi:window-open-variant";
                        else if (states['climate.office'].state == "heat") return "mdi:fire-circle";
                        else if (states['sensor.office_next_timer'].state != "unknown" && states['sensor.office_next_timer'].state != "unavailable") return "mdi:timer-outline";
                        else if (states['input_boolean.office_occupancy'].state == "on") return "mdi:light-switch";
                        else if (states['input_boolean.office_night_mode'].state == "on") return "mdi:weather-night";
                        else if (states['media_player.office'].state == "playing" && states['media_player.spotify_junglemoney'].state == "playing") return "mdi:music";
                        else return "mdi:monitor";
                      ]]]
                    name: '[[[ return variables.name ]]]'
                    tap_action:
                      action: navigate
                      navigation_path: '#office'
                      haptic: medium
                    hold_action:
                      action: toggle
                      haptic: medium
                    double_tap_action:
                      action: call-service
                      service: script.office_double_tap_action
                      haptic: success
                    custom_fields:
                      temp: '[[[ return variables.state ]]]'
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - height: 155px
                          grid:
                            - grid-template-areas: '"n i" "temp temp" "slider slider"'
                            - grid-template-rows: 1fr min-content
                            - grid-template-columns: min-content 1fr
                          custom_fields:
                            temp:
                              - margin-bottom: 10px
                        custom_fields:
                          slider:
                            card:
                              type: custom:my-slider-v2
                              entity: '[[[ return entity.entity_id ]]]'
                              colorMode: brightness
                              styles:
                                container:
                                  - background: none
                                  - border-radius: 0px
                                  - overflow: visible
                                card:
                                  - height: 25px
                                  - padding: 0px
                                  - background: >-
                                      rgba(var(--contrast1-RGB),var(--color-tint))
                                  - border-radius: 0px
                                  - width: 100%
                                  - position: absolute
                                  - margin-top: '-15px'
                                  - margin-left: '-8px'
                                track:
                                  - overflow: visible
                                  - background: none
                                progress:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                                        else return "var(--contrast4)";
                                      ]]]
                                thumb:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "var(--black)";
                                        if (entity.state == "off") return "var(--contrast20)";
                                        else return "var(--contrast8)";
                                      ]]]
                                  - top: 0px
                                  - right: '-6px'
                                  - height: 25px
                                  - width: 3px
                    styles:
                      card:
                        - padding: 8px
                        - height: 130px
                        - border-radius: '[[[ return variables.radius ]]]'
                        - background: |
                            [[[
                              if (entity.state == "on") return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      grid:
                        - grid-template-areas: '"n i" "temp temp"'
                        - grid-template-rows: 1fr min-content
                        - grid-template-columns: min-content 1fr
                      icon:
                        - width: 24px
                        - color: |
                            [[[
                              if (states['input_boolean.office_occupancy'].state == "on") return "var(--black)";
                              else if (states['input_boolean.office_night_mode'].state == "on") return "var(--black)";
                              else if (states['binary_sensor.office_window_door_sensor'].state == "on") return "var(--black)";
                              else if (states['climate.office'].state == "heat") return "var(--black)";
                              else if (entity.state == "on") return "var(--contrast20)";
                              else return "var(--contrast20)";
                            ]]]
                      img_cell:
                        - justify-self: end
                        - background: |
                            [[[
                              if (states['input_boolean.office_occupancy'].state == "on") return "var(--red)";
                              else if (states['input_boolean.office_night_mode'].state == "on") return "var(--blue)";
                              else if (states['binary_sensor.office_window_door_sensor'].state == "on") return "var(--red)";
                              else if (states['climate.office'].state == "heat") return "var(--red)";
                              else if (entity.state == "on") return "var(--contrast1)";
                              else return "var(--contrast1)";
                            ]]]
                        - border-radius: 100%
                        - align-self: start
                        - width: 50px
                        - height: 50px
                      name:
                        - justify-self: start
                        - align-self: start
                        - text-align: left
                        - font-size: 1em
                        - font-weight: 500
                        - color: |
                            [[[
                              if (entity.state == "on") return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                        - padding: 14px
                        - margin-bottom: 35px
                      custom_fields:
                        temp:
                          - justify-self: start
                          - font-size: 2.4em
                          - line-height: 1em
                          - font-weight: 300
                          - color: |
                              [[[
                                if (entity.state == "on") return "var(--black)";
                                else return "var(--contrast20)";
                              ]]]
                          - padding: 0 0 6px 14px
                  - type: custom:button-card
                    entity: light.bathroom_lights
                    variables:
                      name: Bathroom
                      state: |
                        [[[ 
                          var temp = states['sensor.bathroom_temperature'].state;
                          var hum = states['sensor.bathroom_humidity'].state;
                          return `
                          ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                        0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                          `
                        ]]]
                      radius: 24px 6px 24px 24px
                    icon: |
                      [[[
                        if (states['binary_sensor.bathroom_window_door_sensor'].state == "on") return "mdi:window-open-variant";
                        else if (states['climate.bathroom'].state == "heat") return "mdi:fire-circle";
                        else if (states['sensor.bathroom_next_timer'].state != "unknown" && states['sensor.bathroom_next_timer'].state != "unavailable") return "mdi:timer-outline";
                        else if (states['input_boolean.bathroom_occupancy'].state == "on") return "mdi:light-switch";
                        else if (states['input_boolean.shower'].state == "on") return "mdi:shower-head";
                        else if (states['media_player.bathroom'].state == "playing" && states['media_player.spotify_junglemoney'].state == "playing") return "mdi:music";
                        else return "mdi:paper-roll-outline";
                      ]]]
                    name: '[[[ return variables.name ]]]'
                    tap_action:
                      action: navigate
                      navigation_path: '#bathroom'
                      haptic: medium
                    hold_action:
                      action: toggle
                      haptic: medium
                    double_tap_action:
                      action: call-service
                      service: script.bathroom_double_tap_action
                      haptic: success
                    custom_fields:
                      temp: '[[[ return variables.state ]]]'
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - height: 155px
                          grid:
                            - grid-template-areas: '"n i" "temp temp" "slider slider"'
                            - grid-template-rows: 1fr min-content
                            - grid-template-columns: min-content 1fr
                          custom_fields:
                            temp:
                              - margin-bottom: 10px
                        custom_fields:
                          slider:
                            card:
                              type: custom:my-slider-v2
                              entity: '[[[ return entity.entity_id ]]]'
                              colorMode: brightness
                              styles:
                                container:
                                  - background: none
                                  - border-radius: 0px
                                  - overflow: visible
                                card:
                                  - height: 25px
                                  - padding: 0px
                                  - background: >-
                                      rgba(var(--contrast1-RGB),var(--color-tint))
                                  - border-radius: 0px
                                  - width: 100%
                                  - position: absolute
                                  - margin-top: '-15px'
                                  - margin-left: '-8px'
                                track:
                                  - overflow: visible
                                  - background: none
                                progress:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                                        else return "var(--contrast4)";
                                      ]]]
                                thumb:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "var(--black)";
                                        if (entity.state == "off") return "var(--contrast20)";
                                        else return "var(--contrast8)";
                                      ]]]
                                  - top: 0px
                                  - right: '-6px'
                                  - height: 25px
                                  - width: 3px
                    styles:
                      card:
                        - padding: 8px
                        - height: 130px
                        - border-radius: '[[[ return variables.radius ]]]'
                        - background: |
                            [[[
                              if (entity.state == "on") return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      grid:
                        - grid-template-areas: '"n i" "temp temp"'
                        - grid-template-rows: 1fr min-content
                        - grid-template-columns: min-content 1fr
                      icon:
                        - width: 24px
                        - color: |
                            [[[
                              if (states['input_boolean.bathroom_occupancy'].state == "on") return "var(--black)";
                              else if (states['input_boolean.shower'].state == "on") return "var(--black)";
                              else if (states['binary_sensor.bathroom_window_door_sensor'].state == "on") return "var(--black)";
                              else if (states['climate.bathroom'].state == "heat") return "var(--black)";
                              else if (entity.state == "on") return "var(--contrast20)";
                              else return "var(--contrast20)";
                            ]]]
                      img_cell:
                        - justify-self: end
                        - background: |
                            [[[
                              if (states['input_boolean.bathroom_occupancy'].state == "on") return "var(--red)";
                              else if (states['input_boolean.shower'].state == "on") return "var(--blue)";
                              else if (states['binary_sensor.bathroom_window_door_sensor'].state == "on") return "var(--red)";
                              else if (states['climate.bathroom'].state == "heat") return "var(--red)";
                              else if (entity.state == "on") return "var(--contrast1)";
                              else return "var(--contrast1)";
                            ]]]
                        - border-radius: 100%
                        - align-self: start
                        - width: 50px
                        - height: 50px
                      name:
                        - justify-self: start
                        - align-self: start
                        - text-align: left
                        - font-size: 1em
                        - font-weight: 500
                        - color: |
                            [[[
                              if (entity.state == "on") return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                        - padding: 14px
                        - margin-bottom: 35px
                      custom_fields:
                        temp:
                          - justify-self: start
                          - font-size: 2.4em
                          - line-height: 1em
                          - font-weight: 300
                          - color: |
                              [[[
                                if (entity.state == "on") return "var(--black)";
                                else return "var(--contrast20)";
                              ]]]
                          - padding: 0 0 6px 14px
              - type: vertical-stack
                cards:
                  - type: custom:button-card
                    entity: light.bed_room_lights
                    variables:
                      name: |
                        [[[ return 'Bedroom']]]
                      state: |
                        [[[ 
                          var temp = states['sensor.bed_room_temperature'].state;
                          var hum = states['sensor.bed_room_humidity'].state;
                          return `
                          ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                        0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                          `
                        ]]]
                      radius: 24px 24px 24px 6px
                    icon: |
                      [[[
                        if (states['binary_sensor.bed_room_window_door_sensor'].state == "on") return "mdi:window-open-variant";
                        else if (states['climate.bed_room'].state == "heat") return "mdi:fire-circle";
                        else if (states['sensor.bed_room_next_timer'].state != "unknown" && states['sensor.bed_room_next_timer'].state != "unavailable") return "mdi:timer-outline";
                        else if (states['input_boolean.bed_room_occupancy'].state == "on") return "mdi:light-switch";
                        else if (states['input_boolean.bed_room_night_mode'].state == "on") return "mdi:weather-night";
                        else if (states['media_player.bed_room'].state == "playing" && states['media_player.spotify_junglemoney'].state == "playing") return "mdi:music";
                        else return "mdi:bed-king-outline";
                      ]]]
                    name: '[[[ return variables.name ]]]'
                    tap_action:
                      action: navigate
                      navigation_path: '#bedroom'
                      haptic: medium
                    hold_action:
                      action: toggle
                      haptic: medium
                    double_tap_action:
                      action: call-service
                      service: script.bed_room_double_tap_action
                      haptic: success
                    custom_fields:
                      temp: '[[[ return variables.state ]]]'
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - height: 155px
                          grid:
                            - grid-template-areas: '"n i" "temp temp" "slider slider"'
                            - grid-template-rows: 1fr min-content
                            - grid-template-columns: min-content 1fr
                          custom_fields:
                            temp:
                              - margin-bottom: 10px
                        custom_fields:
                          slider:
                            card:
                              type: custom:my-slider-v2
                              entity: '[[[ return entity.entity_id ]]]'
                              colorMode: brightness
                              styles:
                                container:
                                  - background: none
                                  - border-radius: 0px
                                  - overflow: visible
                                card:
                                  - height: 25px
                                  - padding: 0px
                                  - background: >-
                                      rgba(var(--contrast1-RGB),var(--color-tint))
                                  - border-radius: 0px
                                  - width: 100%
                                  - position: absolute
                                  - margin-top: '-15px'
                                  - margin-left: '-8px'
                                track:
                                  - overflow: visible
                                  - background: none
                                progress:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                                        else return "var(--contrast4)";
                                      ]]]
                                thumb:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "var(--black)";
                                        if (entity.state == "off") return "var(--contrast20)";
                                        else return "var(--contrast8)";
                                      ]]]
                                  - top: 0px
                                  - right: '-6px'
                                  - height: 25px
                                  - width: 3px
                    styles:
                      card:
                        - padding: 8px
                        - height: 130px
                        - border-radius: '[[[ return variables.radius ]]]'
                        - background: |
                            [[[
                              if (entity.state == "on") return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      grid:
                        - grid-template-areas: '"n i" "temp temp"'
                        - grid-template-rows: 1fr min-content
                        - grid-template-columns: min-content 1fr
                      icon:
                        - width: 24px
                        - color: |
                            [[[
                              if (states['input_boolean.bed_room_occupancy'].state == "on") return "var(--black)";
                              else if (states['input_boolean.bed_room_night_mode'].state == "on") return "var(--black)";
                              else if (states['binary_sensor.bed_room_window_door_sensor'].state == "on") return "var(--black)";
                              else if (states['climate.bed_room'].state == "heat") return "var(--black)";
                              else if (entity.state == "on") return "var(--contrast20)";
                              else return "var(--contrast20)";
                            ]]]
                      img_cell:
                        - justify-self: end
                        - background: |
                            [[[
                              if (states['input_boolean.bed_room_occupancy'].state == "on") return "var(--red)";
                              else if (states['input_boolean.bed_room_night_mode'].state == "on") return "var(--blue)";
                              else if (states['binary_sensor.bed_room_window_door_sensor'].state == "on") return "var(--red)";
                              else if (states['climate.bed_room'].state == "heat") return "var(--red)";
                              else if (entity.state == "on") return "var(--contrast1)";
                              else return "var(--contrast1)";
                            ]]]
                        - border-radius: 100%
                        - align-self: start
                        - width: 50px
                        - height: 50px
                      name:
                        - justify-self: start
                        - align-self: start
                        - text-align: left
                        - font-size: 1em
                        - font-weight: 500
                        - color: |
                            [[[
                              if (entity.state == "on") return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                        - padding: 14px
                        - margin-bottom: 35px
                      custom_fields:
                        temp:
                          - justify-self: start
                          - font-size: 2.4em
                          - line-height: 1em
                          - font-weight: 300
                          - color: |
                              [[[
                                if (entity.state == "on") return "var(--black)";
                                else return "var(--contrast20)";
                              ]]]
                          - padding: 0 0 6px 14px
                  - type: custom:button-card
                    entity: light.kitchen_lights
                    variables:
                      name: Kitchen
                      state: |
                        [[[ 
                          var temp = states['sensor.kitchen_temperature'].state;
                          var hum = states['sensor.kitchen_humidity'].state;
                          return `
                          ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                        0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                          `
                        ]]]
                      radius: 6px 24px 24px 6px
                    icon: |
                      [[[
                        if (states['binary_sensor.kitchen_window_door_sensor'].state == "on") return "mdi:window-open-variant";
                        else if (states['climate.kitchen'].state == "heat") return "mdi:fire-circle";
                        else if (states['sensor.kitchen_next_timer'].state != "unknown" && states['sensor.kitchen_next_timer'].state != "unavailable") return "mdi:timer-outline";
                        else if (states['input_boolean.kitchen_occupancy'].state == "on") return "mdi:light-switch";
                        else if (states['media_player.kitchen'].state == "playing" && states['media_player.spotify_junglemoney'].state == "playing") return "mdi:music";
                        else return "mdi:silverware-variant";
                      ]]]
                    name: '[[[ return variables.name ]]]'
                    tap_action:
                      action: navigate
                      navigation_path: '#kitchen'
                      haptic: medium
                    hold_action:
                      action: toggle
                      haptic: medium
                    double_tap_action:
                      action: call-service
                      service: input_boolean.toggle
                      service_data:
                        entity_id: input_boolean.kitchen_occupancy
                      haptic: success
                    custom_fields:
                      temp: '[[[ return variables.state ]]]'
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - height: 155px
                          grid:
                            - grid-template-areas: '"n i" "temp temp" "slider slider"'
                            - grid-template-rows: 1fr min-content
                            - grid-template-columns: min-content 1fr
                          custom_fields:
                            temp:
                              - margin-bottom: 10px
                        custom_fields:
                          slider:
                            card:
                              type: custom:my-slider-v2
                              entity: '[[[ return entity.entity_id ]]]'
                              colorMode: brightness
                              styles:
                                container:
                                  - background: none
                                  - border-radius: 0px
                                  - overflow: visible
                                card:
                                  - height: 25px
                                  - padding: 0px
                                  - background: >-
                                      rgba(var(--contrast1-RGB),var(--color-tint))
                                  - border-radius: 0px
                                  - width: 100%
                                  - position: absolute
                                  - margin-top: '-15px'
                                  - margin-left: '-8px'
                                track:
                                  - overflow: visible
                                  - background: none
                                progress:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                                        else return "var(--contrast4)";
                                      ]]]
                                thumb:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "var(--black)";
                                        if (entity.state == "off") return "var(--contrast20)";
                                        else return "var(--contrast8)";
                                      ]]]
                                  - top: 0px
                                  - right: '-6px'
                                  - height: 25px
                                  - width: 3px
                    styles:
                      card:
                        - padding: 8px
                        - height: 130px
                        - border-radius: '[[[ return variables.radius ]]]'
                        - background: |
                            [[[
                              if (entity.state == "on") return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      grid:
                        - grid-template-areas: '"n i" "temp temp"'
                        - grid-template-rows: 1fr min-content
                        - grid-template-columns: min-content 1fr
                      icon:
                        - width: 24px
                        - color: |
                            [[[
                              if (states['input_boolean.kitchen_occupancy'].state == "on") return "var(--black)";
                              else if (states['binary_sensor.kitchen_window_door_sensor'].state == "on") return "var(--black)";
                              else if (states['climate.kitchen'].state == "heat") return "var(--black)";
                              else if (entity.state == "on") return "var(--contrast20)";
                              else return "var(--contrast20)";
                            ]]]
                      img_cell:
                        - justify-self: end
                        - background: |
                            [[[
                              if (states['input_boolean.kitchen_occupancy'].state == "on") return "var(--red)";
                              else if (states['binary_sensor.kitchen_window_door_sensor'].state == "on") return "var(--red)";
                              else if (states['climate.kitchen'].state == "heat") return "var(--red)";
                              else if (entity.state == "on") return "var(--contrast1)";
                              else return "var(--contrast1)";
                            ]]]
                        - border-radius: 100%
                        - align-self: start
                        - width: 50px
                        - height: 50px
                      name:
                        - justify-self: start
                        - align-self: start
                        - text-align: left
                        - font-size: 1em
                        - font-weight: 500
                        - color: |
                            [[[
                              if (entity.state == "on") return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                        - padding: 14px
                        - margin-bottom: 35px
                      custom_fields:
                        temp:
                          - justify-self: start
                          - font-size: 2.4em
                          - line-height: 1em
                          - font-weight: 300
                          - color: |
                              [[[
                                if (entity.state == "on") return "var(--black)";
                                else return "var(--contrast20)";
                              ]]]
                          - padding: 0 0 6px 14px
                  - type: custom:button-card
                    entity: light.guest_room_lights
                    variables:
                      name: |
                        [[[ return 'Guest<br>room']]]
                      state: |
                        [[[ 
                          var temp = states['sensor.guest_room_temperature'].state;
                          var hum = states['sensor.guest_room_humidity'].state;
                          return `
                          ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                        0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}%</span>
                          `
                        ]]]
                      radius: |
                        [[[
                          if (states['input_boolean.all_rooms'].state == "on") return "6px 24px 24px 6px";
                          else return "6px 24px 24px 24px";
                        ]]]
                    icon: |
                      [[[
                        if (states['binary_sensor.guest_room_window_door_sensor'].state == "on") return "mdi:window-open-variant";
                        else if (states['climate.guest_room'].state == "heat") return "mdi:fire-circle";
                        else if (states['sensor.guest_room_next_timer'].state != "unknown" && states['sensor.guest_room_next_timer'].state != "unavailable") return "mdi:timer-outline";
                        else if (states['input_boolean.guest_room_occupancy'].state == "on") return "mdi:light-switch";
                        else if (states['input_boolean.guest_night_mode'].state == "on") return "mdi:weather-night";
                        else if (states['media_player.guest_room'].state == "playing" && states['media_player.spotify_junglemoney'].state == "playing") return "mdi:music";
                        else return "mdi:desk";
                      ]]]
                    name: '[[[ return variables.name ]]]'
                    tap_action:
                      action: navigate
                      navigation_path: '#guest-room'
                      haptic: medium
                    hold_action:
                      action: toggle
                      haptic: medium
                    double_tap_action:
                      action: call-service
                      service: script.guest_room_double_tap_action
                      haptic: success
                    custom_fields:
                      temp: '[[[ return variables.state ]]]'
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - height: 155px
                          grid:
                            - grid-template-areas: '"n i" "temp temp" "slider slider"'
                            - grid-template-rows: 1fr min-content
                            - grid-template-columns: min-content 1fr
                          custom_fields:
                            temp:
                              - margin-bottom: 10px
                        custom_fields:
                          slider:
                            card:
                              type: custom:my-slider-v2
                              entity: '[[[ return entity.entity_id ]]]'
                              colorMode: brightness
                              styles:
                                container:
                                  - background: none
                                  - border-radius: 0px
                                  - overflow: visible
                                card:
                                  - height: 25px
                                  - padding: 0px
                                  - background: >-
                                      rgba(var(--contrast1-RGB),var(--color-tint))
                                  - border-radius: 0px
                                  - width: 100%
                                  - position: absolute
                                  - margin-top: '-15px'
                                  - margin-left: '-8px'
                                track:
                                  - overflow: visible
                                  - background: none
                                progress:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                                        else return "var(--contrast4)";
                                      ]]]
                                thumb:
                                  - background: |
                                      [[[
                                        if (entity.state == "on") return "var(--black)";
                                        if (entity.state == "off") return "var(--contrast20)";
                                        else return "var(--contrast8)";
                                      ]]]
                                  - top: 0px
                                  - right: '-6px'
                                  - height: 25px
                                  - width: 3px
                    styles:
                      card:
                        - padding: 8px
                        - height: 130px
                        - border-radius: '[[[ return variables.radius ]]]'
                        - background: |
                            [[[
                              if (entity.state == "on") return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      grid:
                        - grid-template-areas: '"n i" "temp temp"'
                        - grid-template-rows: 1fr min-content
                        - grid-template-columns: min-content 1fr
                      icon:
                        - width: 24px
                        - color: |
                            [[[
                              if (states['input_boolean.guest_room_occupancy'].state == "on") return "var(--black)";
                              else if (states['input_boolean.guest_night_mode'].state == "on") return "var(--black)";
                              else if (states['binary_sensor.guest_room_window_door_sensor'].state == "on") return "var(--black)";
                              else if (states['climate.guest_room'].state == "heat") return "var(--black)";
                              else if (entity.state == "on") return "var(--contrast20)";
                              else return "var(--contrast20)";
                            ]]]
                      img_cell:
                        - justify-self: end
                        - background: |
                            [[[
                              if (states['input_boolean.guest_room_occupancy'].state == "on") return "var(--red)";
                              else if (states['input_boolean.guest_night_mode'].state == "on") return "var(--blue)";
                              else if (states['binary_sensor.guest_room_window_door_sensor'].state == "on") return "var(--red)";
                              else if (states['climate.guest_room'].state == "heat") return "var(--red)";
                              else if (entity.state == "on") return "var(--contrast1)";
                              else return "var(--contrast1)";
                            ]]]
                        - border-radius: 100%
                        - align-self: start
                        - width: 50px
                        - height: 50px
                      name:
                        - justify-self: start
                        - align-self: start
                        - text-align: left
                        - font-size: 1em
                        - font-weight: 500
                        - color: |
                            [[[
                              if (entity.state == "on") return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                        - padding: 14px
                        - margin-bottom: 35px
                      custom_fields:
                        temp:
                          - justify-self: start
                          - font-size: 2.4em
                          - line-height: 1em
                          - font-weight: 300
                          - color: |
                              [[[
                                if (entity.state == "on") return "var(--black)";
                                else return "var(--contrast20)";
                              ]]]
                          - padding: 0 0 6px 14px
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.all_rooms
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: light.corridor_lights
                      variables:
                        name: Corridor
                        state: >
                          [[[ 
                            var temp = states['sensor.hue_motion_sensor_1_temperature'].state;
                            var hum = states['sensor.hue_motion_sensor_1_light_level'].state;
                            return `
                            ${parseFloat(temp).toFixed(0)}°<span style="font-size:
                          0.3em;opacity:0.7">${parseFloat(hum).toFixed(0)}lux</span>
                            `
                          ]]]
                        radius: 6px 24px 24px 24px
                      icon: |
                        [[[
                          if (states['binary_sensor.flat_door'].state == "on") return "mdi:door-open";
                          else return "mdi:door";
                        ]]]
                      name: '[[[ return variables.name ]]]'
                      tap_action:
                        action: navigate
                        navigation_path: '#corridor'
                        haptic: medium
                      hold_action:
                        action: toggle
                        haptic: medium
                      custom_fields:
                        temp: '[[[ return variables.state ]]]'
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - height: 155px
                            grid:
                              - grid-template-areas: '"n i" "temp temp" "slider slider"'
                              - grid-template-rows: 1fr min-content
                              - grid-template-columns: min-content 1fr
                            custom_fields:
                              temp:
                                - margin-bottom: 10px
                          custom_fields:
                            slider:
                              card:
                                type: custom:my-slider-v2
                                entity: '[[[ return entity.entity_id ]]]'
                                colorMode: brightness
                                styles:
                                  container:
                                    - background: none
                                    - border-radius: 0px
                                    - overflow: visible
                                  card:
                                    - height: 25px
                                    - padding: 0px
                                    - background: >-
                                        rgba(var(--contrast1-RGB),var(--color-tint))
                                    - border-radius: 0px
                                    - width: 100%
                                    - position: absolute
                                    - margin-top: '-15px'
                                    - margin-left: '-8px'
                                  track:
                                    - overflow: visible
                                    - background: none
                                  progress:
                                    - background: |
                                        [[[
                                          if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.3) 0%, rgba(255,255,255, 1) 100%)";
                                          else return "var(--contrast4)";
                                        ]]]
                                  thumb:
                                    - background: |
                                        [[[
                                          if (entity.state == "on") return "var(--black)";
                                          if (entity.state == "off") return "var(--contrast20)";
                                          else return "var(--contrast8)";
                                        ]]]
                                    - top: 0px
                                    - right: '-6px'
                                    - height: 25px
                                    - width: 3px
                      styles:
                        card:
                          - padding: 8px
                          - height: 130px
                          - border-radius: '[[[ return variables.radius ]]]'
                          - background: |
                              [[[
                                if (entity.state == "on") return "var(--yellow)";
                                else return "var(--contrast2)";
                              ]]]
                        grid:
                          - grid-template-areas: '"n i" "temp temp"'
                          - grid-template-rows: 1fr min-content
                          - grid-template-columns: min-content 1fr
                        icon:
                          - width: 24px
                          - color: |
                              [[[
                                if (states['binary_sensor.flat_door'].state == "on") return "var(--black)";
                                else return "var(--contrast20)";
                              ]]]
                        img_cell:
                          - justify-self: end
                          - background: |
                              [[[
                                if (states['binary_sensor.flat_door'].state == "on") return "var(--red)";
                                else return "var(--contrast1)";
                              ]]]
                          - border-radius: 100%
                          - align-self: start
                          - width: 50px
                          - height: 50px
                        name:
                          - justify-self: start
                          - align-self: start
                          - text-align: left
                          - font-size: 1em
                          - font-weight: 500
                          - color: |
                              [[[
                                if (entity.state == "on") return "var(--black)";
                                else return "var(--contrast20)";
                              ]]]
                          - padding: 14px
                          - margin-bottom: 35px
                        custom_fields:
                          temp:
                            - justify-self: start
                            - font-size: 2.4em
                            - line-height: 1em
                            - font-weight: 300
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                            - padding: 0 0 6px 14px
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Living room
                icon: mdi:sofa-outline
                hash: '#living-room'
                button_type: name
                card_layout: large
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: binary_sensor.living_room_presence_sensor_occupancy
                    icon_color: yellow
                    content_info: last-changed
                    icon: mdi:motion-sensor
                  - type: entity
                    entity: binary_sensor.living_room_window_door_sensor
                    icon_color: red
                    icon: mdi:window-closed-variant
                alignment: center
              - type: heading
                icon: mdi:thermostat
                heading: Climate
                heading_style: title
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.living_room_temperature
                    color: red
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.living_room_humidity
                    color: blue
                    tap_action:
                      action: more-info
              - type: custom:bubble-card
                card_type: climate
                entity: climate.living_room
                sub_button:
                  - name: HVAC modes menu
                    select_attribute: hvac_modes
                    state_background: false
                    show_arrow: false
                show_state: true
              - type: heading
                icon: mdi:devices
                heading: Devices
                heading_style: title
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: switch.camera_living_room
                    icon: mdi:cctv
                    color: red
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.living_room_occupancy
                    icon: mdi:light-switch
                    color: red
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.living_room_night_mode
                    color: blue
                    tap_action:
                      action: toggle
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: select.harmony_hub_activities
                    template: nav_button
                    name: TV Remote
                    label: >-
                      [[[return
                      states["remote.harmony_hub"].attributes.current_activity]]]
                    variables:
                      navigation_path: home#remote
                    state:
                      - value: power_off
                        label: 'Off'
                        icon: mdi:television-off
                      - value: Smart TV
                        label: SmartTV
                        icon: mdi:television-guide
                        styles:
                          card:
                            - background-color: var(--green)
                          icon:
                            - color: var(--black)
                          name:
                            - color: var(--black)
                          label:
                            - color: var(--black)
                      - value: Netflix
                        label: Netflix
                        icon: mdi:netflix
                        styles:
                          card:
                            - background-color: var(--red)
                          icon:
                            - color: var(--black)
                          name:
                            - color: var(--black)
                          label:
                            - color: var(--black)
                      - value: Playstation
                        label: PS5
                        icon: mdi:sony-playstation
                        styles:
                          card:
                            - background-color: var(--blue)
                          icon:
                            - color: var(--black)
                          name:
                            - color: var(--black)
                          label:
                            - color: var(--black)
                      - value: Nintendo Switch
                        label: Switch
                        icon: mdi:nintendo-switch
                        styles:
                          card:
                            - background-color: var(--red)
                          icon:
                            - color: var(--black)
                          name:
                            - color: var(--black)
                          label:
                            - color: var(--black)
                      - value: Bluetooth
                        label: Bluetooth
                        icon: mdi:bluetooth
                        styles:
                          card:
                            - background-color: var(--blue)
                          icon:
                            - color: var(--black)
                          name:
                            - color: var(--black)
                          label:
                            - color: var(--black)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.ps5_343_power
                    label: >-
                      [[[return
                      states["sensor.ps5_343_activity"].attributes.activity]]]
                    name: Playstation 5
                    variables:
                      icon_on: mdi:sony-playstation
                      icon_off: mdi:sony-playstation
                      color: var(--blue)
                    tap_action:
                      action: call-service
                      service: switch.toggle
                      service_data:
                        entity_id:
                          - switch.harmony_hub_playstation
                          - switch.ps5_343_power
                      haptic: success
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:lightbulb-group
                    heading: Lights
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.living_room_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_living_room
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_living_room
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_living_room
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_living_room
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        template: light_rgb
                        entity: light.living_room_light
                        double_tap_action:
                          action: call-service
                          service: script.turn_light_to_random_color
                          data:
                            target: '[[[ return entity.entity_id ]]]'
                          haptic: success
                      - type: custom:button-card
                        name: Lightstrip
                        template: light_rgb
                        entity: light.living_room_lightstrip
                        double_tap_action:
                          action: call-service
                          service: script.turn_light_to_random_color
                          data:
                            target: '[[[ return entity.entity_id ]]]'
                          haptic: success
                      - type: custom:button-card
                        name: Couch Lights
                        entity: light.living_room_christmas_light
                        template: light_switch
                      - type: custom:button-card
                        name: Lava Lamp
                        entity: light.lava_lamp
                        template: light_switch
                      - type: custom:button-card
                        name: Bowl Lamp
                        template: light_rgb
                        entity: light.bowl_lamp
                        tap_action:
                          action: toggle
                          haptic: medium
                        hold_action:
                          action: more-info
                          haptic: medium
                      - type: custom:button-card
                        name: Ball Lamp
                        template: light_rgb
                        entity: light.ball_lamp
                        double_tap_action:
                          action: call-service
                          service: script.turn_light_to_random_color
                          data:
                            target: '[[[ return entity.entity_id ]]]'
                          haptic: success
                      - type: custom:button-card
                        name: TV Backlight
                        template: light_rgb
                        entity: light.dreamview_tv
                columns: 1
              - type: heading
                icon: mdi:music
                heading: Media
                heading_style: title
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.living_room
                        state_not: standby
                      - entity: media_player.living_room
                        state_not: 'off'
                    card:
                      type: custom:button-card
                      entity: media_player.living_room
                      template: custom_card_mediaplayer_music
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.is_tv_on
                        state: 'on'
                      - entity: switch.harmony_hub_nintendo_switch
                        state_not: 'on'
                      - entity: switch.harmony_hub_playstation
                        state_not: 'on'
                      - entity: media_player.apple_tv_4k_2
                        state_not: idle
                    card:
                      type: custom:button-card
                      entity: media_player.tv_and_ps5
                      template: custom_card_mediaplayer_tv
                  - type: conditional
                    conditions:
                      - entity: sensor.living_room_next_timer
                        state_not: unknown
                      - entity: sensor.living_room_next_timer
                        state_not: unavailable
                    card:
                      type: custom:button-card
                      entity: sensor.living_room_next_timer
                      name: Living Room Timer
                      icon: mdi:timer-outline
                      show_name: true
                      show_icon: true
                      show_label: false
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      custom_fields:
                        bar: |
                          [[[
                            var color = "var(--green)";
                            var state = 100 - states['sensor.living_room_timer'].attributes.remaining_perc;
                            if (state < 10) color = "var(--red)";
                            else if (state < 50) color = "var(--yellow)";
                            else if (state < 90) color = "var(--orange)";
                            return `
                            <div>
                            <div style="background:${color}; height: 12px; width:${state}%">
                            </div>
                            </div>`
                          ]]]
                        rem:
                          card:
                            type: conditional
                            conditions:
                              - condition: state
                                entity: sensor.living_room_next_timer
                                state_not: unknown
                            card:
                              type: custom:button-card
                              entity: sensor.living_room_timer
                              name: >
                                [[[

                                var remainingTime =
                                states['sensor.living_room_timer'].attributes.remaining;

                                return `${remainingTime}`;

                                ]]]
                              show_icon: false
                              styles:
                                card:
                                  - width: min
                                  - background: none
                                  - overflow: visible
                                name:
                                  - font-size: 14px
                                  - margin-top: 6px
                                  - font-weight: 600
                                  - color: var(--contrast20)
                        icon1: |
                          [[[
                            return '<ha-icon icon="mdi:sofa-outline"></ha-icon>';
                          ]]]
                      styles:
                        grid:
                          - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                          - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                          - grid-template-columns: 60% 40%
                        card:
                          - height: 100%
                          - padding: 1rem
                          - background: var(--contrast2)
                        img_cell:
                          - position: absolute
                          - top: 20%
                          - left: 40%
                          - overflow: visible
                        icon:
                          - position: absolute
                          - width: 20em
                          - opacity: 20%
                          - color: var(--contrast20)
                          - transform: rotate(-20deg)
                        label:
                          - text-align: left
                          - font-size: 18px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: end
                          - overflow: visible
                          - color: var(--contrast20)
                        name:
                          - text-align: left
                          - font-size: 12px
                          - justify-self: start
                          - align-self: center
                          - overflow: visible
                          - color: var(--contrast20)
                        custom_fields:
                          bar:
                            - justify-self: start
                            - width: 100%
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '12px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                            - background: var(--contrast1)
                            - border-radius: 24px
                          rem:
                            - justify-self: start
                            - font-size: 14px
                            - font-weight: 600
                            - align-self: end
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '27px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                          icon1:
                            - justify-self: end
                            - width: 24px
                            - color: var(--contrast20)
                        hold_action:
                          action: more-info
                  - type: conditional
                    conditions:
                      - entity: switch.camera_living_room
                        state: 'on'
                    card:
                      show_state: false
                      show_name: false
                      camera_view: live
                      type: picture-entity
                      camera_image: camera.192_168_178_125
                      entity: camera.192_168_178_125
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Bedroom
                icon: mdi:bed-king-outline
                hash: '#bedroom'
                button_type: name
                sub_button: []
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: binary_sensor.bed_room_presence_sensor_occupancy
                    icon_color: yellow
                    content_info: last-changed
                    icon: mdi:motion-sensor
                  - type: entity
                    entity: binary_sensor.bed_room_window_door_sensor
                    icon_color: red
                    icon: mdi:window-closed-variant
                alignment: center
              - type: heading
                icon: mdi:thermostat
                heading: Climate
                heading_style: title
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.bed_room_temperature
                    color: red
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.bed_room_humidity
                    color: blue
                    tap_action:
                      action: more-info
              - type: custom:bubble-card
                card_type: climate
                entity: climate.bed_room
                sub_button:
                  - name: HVAC modes menu
                    select_attribute: hvac_modes
                    state_background: false
                    show_arrow: false
                show_state: true
              - type: heading
                icon: mdi:devices
                heading: Devices
                heading_style: title
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.living_room_occupancy
                    icon: mdi:light-switch
                    color: red
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.living_room_night_mode
                    color: blue
                    tap_action:
                      action: toggle
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: switch.fan_outlet
                    name: Fan
                    template: switch_template
                    variables:
                      icon_on: mdi:fan
                      icon_off: mdi:fan-off
                      color: var(--blue)
                  - type: custom:button-card
                    entity: input_boolean.play_audio_book
                    name: '[[[return states["input_select.audiobook"].state]]]'
                    icon: mdi:book-play-outline
                    label: Play
                    double_tap_action:
                      action: toggle
                      haptic: success
                    tap_action:
                      action: toggle
                      haptic: success
                    template: button_template
                    variables:
                      icon2: mdi:book-play-outline
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: binary_sensor.is_alarm_on
                    name: Alarm
                    label: '[[[return states["sensor.wake_time_1"].state]]]'
                    template: nav_button_small
                    variables:
                      navigation_path: home#alarm
                      icon_on: mdi:alarm
                      icon_off: mdi:alarm-off
                      background_color_on: var(--yellow)
                      background_color_off: var(--contrast2)
                      color_on: var(--black)
                      color_off: var(--contrast20)
                  - type: conditional
                    conditions:
                      - entity: alarm_control_panel.security_system
                        state: armed_night
                    card:
                      type: custom:button-card
                      entity: input_boolean.waking_up
                      name: Waking Up
                      label: '[[[return states["input_boolean.waking_up"].state]]]'
                      show_label: true
                      tap_action:
                        action: toggle
                        haptic: success
                      template: button_template
                      variables:
                        icon2: mdi:weather-sunset-up
                        background_color_off: var(--contrast2)
                        background_color_on: var(--orange)
                        color_on: var(--black)
                        color_off: var(--contrast20)
                  - type: conditional
                    conditions:
                      - entity: alarm_control_panel.security_system
                        state_not: armed_night
                    card:
                      type: custom:button-card
                      entity: input_boolean.going_to_bed
                      label: '[[[return states["input_boolean.going_to_bed"].state]]]'
                      show_label: true
                      tap_action:
                        action: toggle
                        haptic: success
                      template: button_template
                      variables:
                        icon2: mdi:bed
                        background_color_off: var(--contrast2)
                        background_color_on: var(--blue)
                        color_on: var(--black)
                        color_off: var(--contrast20)
                columns: 3
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:lightbulb-group
                    heading: Lights
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.bed_room_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_bed_room
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_bed_room
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_bed_room
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_bed_room
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        entity: light.bed_room_light
                        template: light_rgb
                      - square: false
                        columns: 2
                        type: grid
                        cards:
                          - type: custom:button-card
                            name: Bed Lamp
                            entity: light.bed_lamp
                            template: light_rgb
                            double_tap_action:
                              action: call-service
                              service: script.turn_light_to_random_color
                              data:
                                target: '[[[ return entity.entity_id ]]]'
                              haptic: success
                          - type: custom:button-card
                            name: Bed Lamp
                            template: light_rgb
                            entity: light.bed_lamp_2
                            double_tap_action:
                              action: call-service
                              service: script.turn_light_to_random_color
                              data:
                                target: '[[[ return entity.entity_id ]]]'
                              haptic: success
                columns: 1
              - type: heading
                icon: mdi:music
                heading: Media
                heading_style: title
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.bed_room
                        state_not: standby
                      - entity: media_player.bed_room
                        state_not: 'off'
                    card:
                      type: custom:button-card
                      entity: media_player.bed_room
                      template: custom_card_mediaplayer_music
                  - type: conditional
                    conditions:
                      - entity: sensor.bed_room_next_timer
                        state_not: unknown
                      - entity: sensor.bed_room_next_timer
                        state_not: unavailable
                    card:
                      type: custom:button-card
                      entity: sensor.bed_room_next_timer
                      name: Bed Room Timer
                      icon: mdi:timer-outline
                      show_name: true
                      show_icon: true
                      show_label: false
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      custom_fields:
                        bar: |
                          [[[
                            var color = "var(--green)";
                            var state = 100 - states['sensor.bed_room_timer'].attributes.remaining_perc;
                            if (state < 10) color = "var(--red)";
                            else if (state < 50) color = "var(--yellow)";
                            else if (state < 90) color = "var(--orange)";
                            return `
                            <div>
                            <div style="background:${color}; height: 12px; width:${state}%">
                            </div>
                            </div>`
                          ]]]
                        rem:
                          card:
                            type: conditional
                            conditions:
                              - condition: state
                                entity: sensor.bed_room_next_timer
                                state_not: unknown
                            card:
                              type: custom:button-card
                              entity: sensor.bed_room_timer
                              name: >
                                [[[

                                var remainingTime =
                                states['sensor.bed_room_timer'].attributes.remaining;

                                return `${remainingTime}`;

                                ]]]
                              show_icon: false
                              styles:
                                card:
                                  - width: min
                                  - background: none
                                  - overflow: visible
                                name:
                                  - font-size: 14px
                                  - margin-top: 6px
                                  - font-weight: 600
                                  - color: var(--contrast20)
                        icon1: |
                          [[[
                            return '<ha-icon icon="mdi:bed-king-outline"></ha-icon>';
                          ]]]
                      styles:
                        grid:
                          - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                          - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                          - grid-template-columns: 60% 40%
                        card:
                          - height: 100%
                          - padding: 1rem
                          - background: var(--contrast2)
                        img_cell:
                          - position: absolute
                          - top: 20%
                          - left: 40%
                          - overflow: visible
                        icon:
                          - position: absolute
                          - width: 20em
                          - opacity: 20%
                          - color: var(--contrast20)
                          - transform: rotate(-20deg)
                        label:
                          - text-align: left
                          - font-size: 18px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: end
                          - overflow: visible
                          - color: var(--contrast20)
                        name:
                          - text-align: left
                          - font-size: 12px
                          - justify-self: start
                          - align-self: center
                          - overflow: visible
                          - color: var(--contrast20)
                        custom_fields:
                          bar:
                            - justify-self: start
                            - width: 100%
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '12px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                            - background: var(--contrast1)
                            - border-radius: 24px
                          rem:
                            - justify-self: start
                            - font-size: 14px
                            - font-weight: 600
                            - align-self: end
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '27px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                          icon1:
                            - justify-self: end
                            - width: 24px
                            - color: var(--contrast20)
                        hold_action:
                          action: more-info
                  - type: conditional
                    conditions:
                      - entity: media_player.bed_room
                        state_not: standby
                      - entity: media_player.bed_room
                        state_not: 'off'
                    card:
                      type: custom:button-card
                      entity: media_player.bed_room
                      template: custom_card_mediaplayer_music
                  - type: conditional
                    conditions:
                      - entity: media_player.schlafzimmer
                        state: playing
                      - entity: input_boolean.sound_alarm_is_running
                        state: 'off'
                      - entity: input_select.audiobook
                        state: Harry Potter
                      - entity: binary_sensor.alarm_clock_plays_silence
                        state: 'off'
                    card:
                      type: custom:button-card
                      entity: media_player.schlafzimmer
                      show_entity_picture: true
                      show_name: false
                      entity_picture: |
                        [[[
                          if (states['input_number.hp_book'].state == 1.0)
                            return '/local/images/HP_1.jpg';
                          else if (states['input_number.hp_book'].state == 2.0)
                            return '/local/images/HP_2.jpg';
                          else if (states['input_number.hp_book'].state == 3.0)
                            return '/local/images/HP_3.jpg';
                          else if (states['input_number.hp_book'].state == 4.0)
                            return '/local/images/HP_4.jpg';
                          else if (states['input_number.hp_book'].state == 5.0)
                            return '/local/images/HP_5.jpg';
                          else if (states['input_number.hp_book'].state == 6.0)
                            return '/local/images/HP_6.jpg';
                          else if (states['input_number.hp_book'].state == 7.0)
                            return '/local/images/HP_7.jpg';
                        ]]]
                      tap_action:
                        action: more-info
                      styles:
                        grid:
                          - grid-template-areas: '"info"'
                          - grid-template-columns: 1fr
                          - grid-template-rows: min-content
                        card:
                          - background: var(--contrast2);
                          - padding: 0
                          - position: relative
                          - '--mdc-ripple-press-opacity': 0
                        img_cell:
                          - position: absolute
                        icon:
                          - width: 150%
                          - opacity: var(--color-tint)
                          - '-webkit-filter': blur(20px)
                          - '-moz-filter': blur(20px)
                          - '-o-filter': blur(20px)
                          - '-ms-filter': blur(20px)
                          - filter: blur(20px)
                      custom_fields:
                        info:
                          card:
                            type: custom:button-card
                            entity: media_player.schlafzimmer
                            show_entity_picture: true
                            name: |
                              [[[
                                if (states['input_number.hp_book'].state == 1.0)
                                  return 'Harry Potter und der Stein der Weisen';
                                else if (states['input_number.hp_book'].state == 2.0)
                                  return 'Harry Potter und die Kammer des Schreckens';
                                else if (states['input_number.hp_book'].state == 3.0)
                                  return 'Harry Potter und der Gefangene von Askaban';
                                else if (states['input_number.hp_book'].state == 4.0)
                                  return 'Harry Potter und der Feuerkelch';
                                else if (states['input_number.hp_book'].state == 5.0)
                                  return 'Harry Potter und der Orden des Phönix';
                                else if (states['input_number.hp_book'].state == 6.0)
                                  return 'Harry Potter und der Halbblutprinz';
                                else if (states['input_number.hp_book'].state == 7.0)
                                  return 'Harry Potter und die Heiligtümer des Todes';
                              ]]]
                            label: >-
                              [[[return "CD " +
                              Math.round(states["input_number.hp_cd"].state)]]]
                            entity_picture: |
                              [[[
                                if (states['input_number.hp_book'].state == 1.0)
                                  return '/local/images/HP_1.jpg';
                                else if (states['input_number.hp_book'].state == 2.0)
                                  return '/local/images/HP_2.jpg';
                                else if (states['input_number.hp_book'].state == 3.0)
                                  return '/local/images/HP_3.jpg';
                                else if (states['input_number.hp_book'].state == 4.0)
                                  return '/local/images/HP_4.jpg';
                                else if (states['input_number.hp_book'].state == 5.0)
                                  return '/local/images/HP_5.jpg';
                                else if (states['input_number.hp_book'].state == 6.0)
                                  return '/local/images/HP_6.jpg';
                                else if (states['input_number.hp_book'].state == 7.0)
                                  return '/local/images/HP_7.jpg';
                              ]]]
                            show_label: true
                            show_icon: true
                            icon: mdi:book-music-outline
                            styles:
                              grid:
                                - grid-template-areas: '"i gutter n" "i gutter l"'
                                - grid-template-columns: min-content 24px 1fr
                                - grid-template-rows: min-content
                              card:
                                - background: none
                                - border-radius: 0
                                - background: none
                                - padding: 24px
                                - '--mdc-ripple-press-opacity': 0
                              img_cell:
                                - height: 80px
                                - width: 80px
                                - border-radius: 16px
                              icon:
                                - height: 100%
                                - width: 100%
                              name:
                                - font-size: 16px
                                - color: var(--contrast20)
                                - width: 100%
                                - text-align: left
                                - align-self: end
                              label:
                                - font-size: 12px
                                - color: var(--contrast20)
                                - opacity: 0.5
                                - width: 100%
                                - text-align: left
                                - align-self: start
                              custom_fields:
                                image:
                                  - '--mdc-ripple-press-opacity': 0.5
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Office
                icon: mdi:monitor
                hash: '#office'
                button_type: name
                sub_button: []
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: binary_sensor.office_motion_sensors
                    icon_color: yellow
                    content_info: last-changed
                    icon: mdi:motion-sensor
                  - type: entity
                    entity: binary_sensor.office_window_door_sensor
                    icon_color: red
                    icon: mdi:window-closed-variant
                alignment: center
              - type: heading
                icon: mdi:thermostat
                heading: Climate
                heading_style: title
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.office_temperature
                    color: red
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.office_humidity
                    color: blue
                    tap_action:
                      action: more-info
              - type: custom:bubble-card
                card_type: climate
                entity: climate.office
                sub_button:
                  - name: HVAC modes menu
                    select_attribute: hvac_modes
                    state_background: false
                    show_arrow: false
                show_state: true
              - type: heading
                icon: mdi:devices
                heading: Devices
                heading_style: title
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: switch.camera_office_outlet
                    color: red
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.office_light_brightness
                    icon: mdi:light-switch
                    color: red
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.office_night_mode
                    color: blue
                    tap_action:
                      action: toggle
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: vacuum.dobby
                    name: Vacuum
                    template: nav_button_state_small
                    variables:
                      navigation_path: home#vacuum
                      state_off: docked
                      state_on: cleaning
                      icon_on: mdi:robot-vacuum
                      icon_off: mdi:robot-vacuum-off
                      background_color_on: var(--green)
                      background_color_off: var(--contrast2)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: switch.desk_webcam
                    name: Desk Webcam
                    template: switch_template
                    variables:
                      icon_on: mdi:webcam
                      icon_off: mdi:webcam-off
                      color: var(--blue)
                  - type: custom:button-card
                    entity: binary_sensor.desktop_pc_active
                    icon: mdi:desktop-tower
                    name: Desktop PC
                    label: >-
                      [[[return
                      states["binary_sensor.desktop_pc_active"].state]]]
                    template: button_template
                    variables:
                      icon2: mdi:desktop-tower
                      icon_off: mdi:desktop-tower
                      icon_on: mdi:desktop-tower
                      background_color_on: var(--orange)
                      color_on: var(--black)
                  - type: custom:button-card
                    entity: binary_sensor.macbook_pro_von_julian_active
                    icon: mdi:laptop
                    name: MacBook Pro
                    label: >-
                      [[[return
                      states["binary_sensor.macbook_pro_von_julian_active"].state]]]
                    template: button_template
                    variables:
                      icon2: mdi:laptop
                      background_color_on: var(--purple)
                      color_on: var(--black)
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:lightbulb-group
                    heading: Lights
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.office_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_office
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_office
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_office
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_office
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        template: light_rgb
                        icon: '[[[ return entity.attributes.icon ]]]'
                        entity: light.office_light
                      - type: custom:button-card
                        name: Top Light 2
                        template: light_rgb
                        entity: light.office_light_2
                      - type: custom:button-card
                        name: Desk Lamp
                        entity: light.office_desk_lamp
                        template: light_rgb
                      - type: custom:button-card
                        name: Lightstrip
                        entity: light.desk_lightstrip
                        template: light_rgb
                columns: 1
              - type: heading
                icon: mdi:music
                heading: Media
                heading_style: title
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.office
                        state_not: standby
                      - entity: media_player.office
                        state_not: 'off'
                    card:
                      type: custom:button-card
                      entity: media_player.office
                      template: custom_card_mediaplayer_music
                  - type: conditional
                    conditions:
                      - entity: media_player.spotify_julian_
                        state_not: idle
                      - entity: person.julian_
                        state: home
                    card:
                      type: custom:button-card
                      entity: media_player.spotify_julian_
                      template: custom_card_mediaplayer_music
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.is_steam_playing
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: media_player.steam
                      template: custom_card_mediaplayer_tv
                  - type: conditional
                    conditions:
                      - entity: sensor.office_next_timer
                        state_not: unknown
                      - entity: sensor.office_next_timer
                        state_not: unavailable
                    card:
                      type: custom:button-card
                      entity: sensor.office_next_timer
                      name: Office Timer
                      icon: mdi:timer-outline
                      show_name: true
                      show_icon: true
                      show_label: false
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      custom_fields:
                        bar: |
                          [[[
                            var color = "var(--green)";
                            var state = 100 - states['sensor.office_timer'].attributes.remaining_perc;
                            if (state < 10) color = "var(--red)";
                            else if (state < 50) color = "var(--yellow)";
                            else if (state < 90) color = "var(--orange)";
                            return `
                            <div>
                            <div style="background:${color}; height: 12px; width:${state}%">
                            </div>
                            </div>`
                          ]]]
                        rem:
                          card:
                            type: conditional
                            conditions:
                              - condition: state
                                entity: sensor.office_next_timer
                                state_not: unknown
                            card:
                              type: custom:button-card
                              entity: sensor.office_timer
                              name: >
                                [[[

                                var remainingTime =
                                states['sensor.office_timer'].attributes.remaining;

                                return `${remainingTime}`;

                                ]]]
                              show_icon: false
                              styles:
                                card:
                                  - width: min
                                  - background: none
                                  - overflow: visible
                                name:
                                  - font-size: 14px
                                  - margin-top: 6px
                                  - font-weight: 600
                                  - color: var(--contrast20)
                        icon1: |
                          [[[
                            return '<ha-icon icon="mdi:monitor"></ha-icon>';
                          ]]]
                      styles:
                        grid:
                          - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                          - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                          - grid-template-columns: 60% 40%
                        card:
                          - height: 100%
                          - padding: 1rem
                          - background: var(--contrast2)
                        img_cell:
                          - position: absolute
                          - top: 20%
                          - left: 40%
                          - overflow: visible
                        icon:
                          - position: absolute
                          - width: 20em
                          - opacity: 20%
                          - color: var(--contrast20)
                          - transform: rotate(-20deg)
                        label:
                          - text-align: left
                          - font-size: 18px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: end
                          - overflow: visible
                          - color: var(--contrast20)
                        name:
                          - text-align: left
                          - font-size: 12px
                          - justify-self: start
                          - align-self: center
                          - overflow: visible
                          - color: var(--contrast20)
                        custom_fields:
                          bar:
                            - justify-self: start
                            - width: 100%
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '12px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                            - background: var(--contrast1)
                            - border-radius: 24px
                          rem:
                            - justify-self: start
                            - font-size: 14px
                            - font-weight: 600
                            - align-self: end
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '27px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                          icon1:
                            - justify-self: end
                            - width: 24px
                            - color: var(--contrast20)
                        hold_action:
                          action: more-info
                  - type: conditional
                    conditions:
                      - entity: switch.camera_office_outlet
                        state: 'on'
                    card:
                      show_state: false
                      show_name: false
                      camera_view: live
                      type: picture-entity
                      camera_image: camera.192_168_178_77
                      entity: camera.192_168_178_77
              - type: conditional
                conditions:
                  - entity: sensor.epson_wf_4820_series
                    state_not: unavailable
                card:
                  square: false
                  columns: 3
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: sensor.epson_wf_4820_series
                      name: Epson WF4820
                      icon: mdi:printer
                      template: custom_card_sensor_big
                      variables:
                        icon_on: mdi:printer
                        icon_off: mdi:printer
                        state_off: idle
                        state_on: printing
                        background_color_on: var(--green)
                        background_color_off: var(--contrast2)
                        color_on: var(--black)
                        color_off: var(--contrast20)
                        state: |
                          [[[ 
                            if (entity.state == "printing") return `<span style="font-size:1em;">Printing</span>`;
                            else return `<span style="font-size:1em;">Idle</span>`;
                          ]]]
                      styles:
                        card:
                          - height: 168px
                    - square: false
                      columns: 1
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.epson_wf_4820_series_cyan_ink
                          label: >-
                            [[[return
                            states["sensor.epson_wf_4820_series_cyan_ink"].state
                            + '%']]]
                          name: Cyan Ink
                          template: button_template
                          variables:
                            icon2: mdi:format-color-fill
                            background_color_off: var(--blue)
                            background_color_on: var(--blue)
                            color_on: var(--black)
                            color_off: var(--black)
                        - type: custom:button-card
                          entity: sensor.epson_wf_4820_series_yellow_ink
                          label: >-
                            [[[return
                            states["sensor.epson_wf_4820_series_yellow_ink"].state
                            + '%']]]
                          name: Yellow Ink
                          template: button_template
                          variables:
                            icon2: mdi:format-color-fill
                            background_color_off: var(--yellow)
                            background_color_on: var(--yellow)
                            color_on: var(--black)
                            color_off: var(--black)
                    - square: false
                      columns: 1
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.epson_wf_4820_series_magenta_ink
                          label: >-
                            [[[return
                            states["sensor.epson_wf_4820_series_magenta_ink"].state
                            + '%']]]
                          name: Magenta Ink
                          template: button_template
                          variables:
                            icon2: mdi:format-color-fill
                            background_color_off: var(--purple)
                            background_color_on: var(--purple)
                            color_on: var(--black)
                            color_off: var(--black)
                        - type: custom:button-card
                          entity: sensor.epson_wf_4820_series_black_ink
                          label: >-
                            [[[return
                            states["sensor.epson_wf_4820_series_black_ink"].state
                            + '%']]]
                          name: Black Ink
                          template: button_template
                          variables:
                            icon2: mdi:format-color-fill
                            background_color_off: var(--contrast2)
                            background_color_on: var(--contrast2)
                            color_on: var(--contrast20)
                            color_off: var(--contrast20)
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Kitchen
                icon: mdi:silverware-variant
                hash: '#kitchen'
                button_type: name
                sub_button: []
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: binary_sensor.kitchen_motion_sensors
                    icon_color: yellow
                    content_info: last-changed
                    icon: mdi:motion-sensor
                  - type: entity
                    entity: binary_sensor.kitchen_window_door_sensor
                    icon_color: red
                    icon: mdi:window-closed-variant
                alignment: center
              - type: heading
                icon: mdi:thermostat
                heading: Climate
                heading_style: title
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.kitchen_temperature
                    color: red
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.kitchen_humidity
                    color: blue
                    tap_action:
                      action: more-info
              - type: custom:bubble-card
                card_type: climate
                entity: climate.kitchen
                sub_button:
                  - name: HVAC modes menu
                    select_attribute: hvac_modes
                    state_background: false
                    show_arrow: false
                show_state: true
              - type: heading
                icon: mdi:devices
                heading: Devices
                heading_style: title
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.kitchen_occupancy
                    icon: mdi:light-switch
                    color: red
                    tap_action:
                      action: toggle
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.dishwasher_status
                    name: |
                      [[[
                        if (states['sensor.dishwasher_status'].state == 'Off') {
                          return 'Dishwasher';
                        } else {
                          return 'Dishwasher' + " (" + states['sensor.dishwasher_power'].state + " kWH)";
                        }
                      ]]]
                    icon: |
                      [[[
                        if (states['sensor.dishwasher_status'].state == 'Idle') {
                          return 'mdi:dots-circle';
                        } else if (states['sensor.dishwasher_status'].state == 'Running') {
                          return 'mdi:circle-half-full';
                        } else if (states['sensor.dishwasher_status'].state == 'Clean') {
                          return 'mdi:dishwasher';
                        } else if (states['sensor.dishwasher_status'].state == 'Off') {
                          return 'mdi:dishwasher-off';
                        }
                      ]]]
                    show_name: true
                    show_icon: true
                    show_label: true
                    show_state: false
                    tap_action:
                      action: more-info
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: call-service
                      service: input_boolean.turn_off
                      service_data:
                        entity_id: input_boolean.chores_dishwasher
                    label: |
                      [[[
                        if (states['sensor.dishwasher_status'].state == 'Idle') {
                          return 'Idle';
                        } else if (states['sensor.dishwasher_status'].state == 'Running') {
                          return 'Running';
                        } else if (states['sensor.dishwasher_status'].state == 'Clean') {
                          return 'Clean';
                        } else if (states['sensor.dishwasher_status'].state == 'Off') {
                          return 'Off';
                        }
                      ]]]
                    custom_fields:
                      bar: |
                        [[[
                          var color = "var(--green)";
                          var state = 100 - states['sensor.dishwasher_timer'].attributes.remaining_perc;
                          if (state < 10) color = "var(--red)";
                          else if (state < 50) color = "var(--yellow)";
                          else if (state < 90) color = "var(--orange)";
                          return `
                          <div>
                          <div style="background:${color}; height: 12px; width:${state}%">
                          </div>
                          </div>`
                        ]]]
                      rem:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.dishwasher_status
                              state: Running
                          card:
                            type: custom:button-card
                            entity: sensor.dishwasher_timer
                            name: |
                              [[[
                               var remainingTime = states['sensor.dishwasher_timer'].attributes.remaining;
                               return `${remainingTime}`;
                              ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - background: none
                                - overflow: visible
                                - box-shadow: none
                              name:
                                - font-size: 12px
                                - color: var(--black)
                                - font-weight: 500
                      start:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.dishwasher_status
                              state: Running
                          card:
                            type: custom:button-card
                            entity: sensor.dishwasher_timer
                            name: |
                              [[[
                               var endTime = states['sensor.dishwasher_timer'].attributes.triggered;
                               // Extract time from the end time
                               var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                               return `${time} Uhr`;
                               ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - padding: 5px
                                - background: none
                                - box-shadow: none
                              name:
                                - font-size: 12px
                                - color: var(--black)
                      end:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.dishwasher_status
                              state: Running
                          card:
                            type: custom:button-card
                            entity: sensor.dishwasher_timer
                            name: |
                              [[[
                               var endTime = states['sensor.dishwasher_timer'].attributes.end_time;
                               // Extract time from the end time
                               var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                               return `${time} Uhr`;
                               ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - padding: 5px
                                - background: none
                                - box-shadow: none
                              name:
                                - font-size: 12px
                                - color: var(--black)
                      icon1:
                        card:
                          type: custom:button-card
                          icon: mdi:dishwasher
                          styles:
                            card:
                              - background-color: var(--contrast1)
                              - width: 30px
                              - height: 30px
                            icon:
                              - width: 18px
                              - color: var(--contrast20)
                      icon2: |
                        [[[
                          if (states['switch.dishwasher'].state == "off"){
                            return '<ha-icon icon="mdi:toggle-switch-off-outline"></ha-icon>';
                          } else {
                            return '<ha-icon icon="mdi:toggle-switch-outline"></ha-icon>';
                          }
                        ]]]
                    styles:
                      grid:
                        - grid-template-areas: >-
                            ". icon1" "l l" "n icon2" "rem icon2" "bar bar"
                            "start end"
                        - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                        - grid-template-columns: 60% 40%
                      card:
                        - height: 100%
                        - padding: 1rem
                        - background: |
                            [[[
                              if (entity.state == 'Clean') {
                                return 'var(--green)';
                              } else if (entity.state == 'Running') {
                                return 'var(--blue)';
                              } else if (entity.state == 'Idle') {
                                return 'var(--yellow)';
                              } else if (entity.state == 'Off') {
                                return 'var(--contrast2)';
                              } else {
                                return 'var(--primary-text-color)';
                              }
                            ]]]
                      img_cell:
                        - position: absolute
                        - top: 20%
                        - left: 40%
                        - overflow: visible
                      icon:
                        - position: absolute
                        - width: 20em
                        - opacity: 20%
                        - color: |
                            [[[
                              if (entity.state == 'Clean') {
                                return 'var(--black)';
                              } else if (entity.state == 'Running') {
                                return 'var(--black)';
                              } else if (entity.state == 'Idle') {
                                return 'var(--black)';
                              } else if (entity.state == 'Off') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--primary-background-color)';
                              }
                            ]]]
                        - transform: rotate(-20deg)
                        - animation: |
                            [[[
                              if (states['sensor.dishwasher_status'].state == 'Clean') {
                                return 'null';
                              } else if (states['sensor.dishwasher_status'].state == 'Idle') {
                                return 'blink 1.5s linear infinite';
                              } else if (states['sensor.dishwasher_status'].state == 'Running') {
                                return 'rotating 2s linear infinite';
                              }
                            ]]] 
                      label:
                        - text-align: left
                        - font-size: 18px
                        - font-weight: 500
                        - justify-self: start
                        - align-self: end
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'Clean') {
                                return 'var(--black)';
                              } else if (entity.state == 'Running') {
                                return 'var(--black)';
                              } else if (entity.state == 'Idle') {
                                return 'var(--black)';
                              } else if (entity.state == 'Off') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--primary-background-color)';
                              }
                            ]]]
                      name:
                        - text-align: left
                        - font-size: 12px
                        - opacity: 0.7
                        - justify-self: start
                        - align-self: center
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'Clean') {
                                return 'var(--black)';
                              } else if (entity.state == 'Running') {
                                return 'var(--black)';
                              } else if (entity.state == 'Idle') {
                                return 'var(--black)';
                              } else if (entity.state == 'Off') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--primary-background-color)';
                              }
                            ]]]
                      custom_fields:
                        bar:
                          - justify-self: start
                          - width: 100%
                          - height: |
                              [[[
                                if (entity.state == 'Running') {
                                  return '12px';
                                } else {
                                  return '0px';
                                }
                              ]]]
                          - background: var(--contrast1)
                          - border-radius: 24px
                        end:
                          - justify-self: end
                        start:
                          - justify-self: start
                        rem:
                          - justify-self: start
                          - align-self: end
                          - height: |
                              [[[
                                if (entity.state == 'Running') {
                                  return '27px';
                                } else {
                                  return '0px';
                                }
                              ]]]
                        icon1:
                          - justify-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'Clean') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Running') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Idle') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Off') {
                                  return 'var(--contrast20)';
                                } else {
                                 return 'var(--primary-background-color)';
                               }
                              ]]]
                        icon2:
                          - justify-self: end
                          - align-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'Clean') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Running') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Idle') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Off') {
                                  return 'var(--contrast20)';
                               } else {
                                 return 'var(--primary-background-color)';
                               }
                              ]]]
                      hold_action:
                        action: more-info
                  - type: custom:button-card
                    entity: sensor.washing_machine_status
                    name: |
                      [[[
                        if (states['sensor.washing_machine_status'].state == 'Off') {
                          return 'Washing Machine';
                        } else {
                          return 'Washing Machine' + " (" + states['sensor.washing_machine_power'].state + " kWH)";
                        }
                      ]]]
                    icon: |
                      [[[
                        if (states['sensor.washing_machine_status'].state == 'Idle') {
                          return 'mdi:dots-circle';
                        } else if (states['sensor.washing_machine_status'].state == 'Running') {
                          return 'mdi:circle-half-full';
                        } else if (states['sensor.washing_machine_status'].state == 'Clean') {
                          return 'mdi:washing-machine';
                        } else if (states['sensor.washing_machine_status'].state == 'Off') {
                          return 'mdi:washing-machine-off';
                        }
                      ]]]
                    show_name: true
                    show_icon: true
                    show_label: true
                    show_state: false
                    tap_action:
                      action: more-info
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: call-service
                      service: input_boolean.turn_off
                      service_data:
                        entity_id: input_boolean.chores_laundry
                    label: |
                      [[[
                        if (states['sensor.washing_machine_status'].state == 'Idle') {
                          return 'Idle';
                        } else if (states['sensor.washing_machine_status'].state == 'Running') {
                          return 'Running';
                        } else if (states['sensor.washing_machine_status'].state == 'Clean') {
                          return 'Clean';
                        } else if (states['sensor.washing_machine_status'].state == 'Off') {
                          return 'Off';
                        }
                      ]]]
                    custom_fields:
                      bar: |
                        [[[
                          var color = "var(--green)";
                          var state = 100 - states['sensor.waschmaschine_timer'].attributes.remaining_perc;
                          if (state < 10) color = "var(--red)";
                          else if (state < 50) color = "var(--yellow)";
                          else if (state < 90) color = "var(--orange)";
                          return `
                          <div>
                          <div style="background:${color}; height: 12px; width:${state}%">
                          </div>
                          </div>`
                        ]]]
                      rem:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.washing_machine_status
                              state: Running
                          card:
                            type: custom:button-card
                            entity: sensor.waschmaschine_timer
                            name: |
                              [[[
                               var remainingTime = states['sensor.waschmaschine_timer'].attributes.remaining;
                               return `${remainingTime}`;
                              ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - background: none
                                - overflow: visible
                                - box-shadow: none
                              name:
                                - font-size: 12px
                                - color: var(--black)
                                - font-weight: 500
                      start:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.washing_machine_status
                              state: Running
                          card:
                            type: custom:button-card
                            entity: sensor.waschmaschine_timer
                            name: |
                              [[[
                               var endTime = states['sensor.waschmaschine_timer'].attributes.triggered;
                               // Extract time from the end time
                               var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                               return `${time} Uhr`;
                               ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - padding: 5px
                                - background: none
                                - box-shadow: none
                              name:
                                - font-size: 12px
                                - color: var(--black)
                      end:
                        card:
                          type: conditional
                          conditions:
                            - condition: state
                              entity: sensor.washing_machine_status
                              state: Running
                          card:
                            type: custom:button-card
                            entity: sensor.waschmaschine_timer
                            name: |
                              [[[
                               var endTime = states['sensor.waschmaschine_timer'].attributes.end_time;
                               // Extract time from the end time
                               var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                               return `${time} Uhr`;
                               ]]]
                            show_icon: false
                            styles:
                              card:
                                - width: min
                                - padding: 5px
                                - background: none
                                - box-shadow: none
                              name:
                                - font-size: 12px
                                - color: var(--black)
                      icon1:
                        card:
                          type: custom:button-card
                          icon: mdi:washing-machine
                          styles:
                            card:
                              - background-color: var(--contrast1)
                              - width: 30px
                              - height: 30px
                            icon:
                              - width: 18px
                              - color: var(--contrast20)
                      icon2:
                        card:
                          type: custom:button-card
                          entity: input_select.washing_machine_notification
                          icon: |
                            [[[
                              if (states['input_select.washing_machine_notification'].state == 'Julian'){
                                return "mdi:face-agent";
                              } else if (states['input_select.washing_machine_notification'].state == 'Tammo'){
                                return "mdi:face-man-profile";
                                } else if (states['input_select.washing_machine_notification'].state == 'Anna'){
                                return "mdi:face-woman";
                              } else {
                                return "mdi:account-group";
                              }
                            ]]]
                          show_icon: true
                          show_name: false
                          tap_action:
                            action: more-info
                          styles:
                            card:
                              - width: 24px
                              - border: none
                              - background: none
                              - overflow: visible
                            icon:
                              - width: 22px
                              - color: |
                                  [[[
                                    if (entity.state == 'Clean') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Running') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Idle') {
                                      return 'var(--black)';
                                    } else if (entity.state == 'Off') {
                                      return 'var(--contrast20)';
                                   } else {
                                     return 'var(--primary-background-color)';
                                   }
                                  ]]]
                    styles:
                      grid:
                        - grid-template-areas: >-
                            ". icon1" "l l" "n icon2" "rem icon2" "bar bar"
                            "start end"
                        - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                        - grid-template-columns: 60% 40%
                      card:
                        - height: 100%
                        - padding: 1rem
                        - background: |
                            [[[
                              if (entity.state == 'Clean') {
                                return 'var(--green)';
                              } else if (entity.state == 'Running') {
                                return 'var(--blue)';
                              } else if (entity.state == 'Idle') {
                                return 'var(--yellow)';
                              } else if (entity.state == 'Off') {
                                return 'var(--contrast2)';
                              } else {
                                return 'var(--primary-text-color)';
                              }
                            ]]]
                      img_cell:
                        - position: absolute
                        - top: 20%
                        - left: 40%
                        - overflow: visible
                      icon:
                        - position: absolute
                        - width: 20em
                        - opacity: 20%
                        - color: |
                            [[[
                              if (entity.state == 'Clean') {
                                return 'var(--black)';
                              } else if (entity.state == 'Running') {
                                return 'var(--black)';
                              } else if (entity.state == 'Idle') {
                                return 'var(--black)';
                              } else if (entity.state == 'Off') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--primary-background-color)';
                              }
                            ]]]
                        - transform: rotate(-20deg)
                        - animation: |
                            [[[
                              if (states['sensor.washing_machine_status'].state == 'Clean') {
                                return 'null';
                              } else if (states['sensor.washing_machine_status'].state == 'Idle') {
                                return 'blink 1.5s linear infinite';
                              } else if (states['sensor.washing_machine_status'].state == 'Running') {
                                return 'rotating 2s linear infinite';
                              }
                            ]]] 
                      label:
                        - text-align: left
                        - font-size: 18px
                        - font-weight: 500
                        - justify-self: start
                        - align-self: end
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'Clean') {
                                return 'var(--black)';
                              } else if (entity.state == 'Running') {
                                return 'var(--black)';
                              } else if (entity.state == 'Idle') {
                                return 'var(--black)';
                              } else if (entity.state == 'Off') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--primary-background-color)';
                              }
                            ]]]
                      name:
                        - text-align: left
                        - font-size: 12px
                        - opacity: 0.7
                        - justify-self: start
                        - align-self: center
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'Clean') {
                                return 'var(--black)';
                              } else if (entity.state == 'Running') {
                                return 'var(--black)';
                              } else if (entity.state == 'Idle') {
                                return 'var(--black)';
                              } else if (entity.state == 'Off') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--primary-background-color)';
                              }
                            ]]]
                      custom_fields:
                        bar:
                          - justify-self: start
                          - width: 100%
                          - height: |
                              [[[
                                if (entity.state == 'Running') {
                                  return '12px';
                                } else {
                                  return '0px';
                                }
                              ]]]
                          - background: var(--contrast1)
                          - border-radius: 24px
                        end:
                          - justify-self: end
                        start:
                          - justify-self: start
                        rem:
                          - justify-self: start
                          - align-self: end
                          - height: |
                              [[[
                                if (entity.state == 'Running') {
                                  return '27px';
                                } else {
                                  return '0px';
                                }
                              ]]]
                        icon1:
                          - justify-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'Clean') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Running') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Idle') {
                                  return 'var(--black)';
                                } else if (entity.state == 'Off') {
                                  return 'var(--contrast20)';
                                } else {
                                 return 'var(--primary-background-color)';
                               }
                              ]]]
                        icon2:
                          - justify-self: end
                          - align-self: end
                      hold_action:
                        action: more-info
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:lightbulb-group
                    heading: Lights
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.kitchen_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_kitchen
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_kitchen
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_kitchen
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_kitchen
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        template: light_rgb
                        entity: light.kitchen_light
                      - type: custom:button-card
                        name: Lightstrip
                        entity: light.kitchen_lightstrip
                        template: light_rgb
                columns: 1
              - type: heading
                icon: mdi:music
                heading: Media
                heading_style: title
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.kitchen
                        state_not: standby
                      - entity: media_player.kitchen
                        state_not: 'off'
                    card:
                      type: custom:button-card
                      entity: media_player.kitchen
                      template: custom_card_mediaplayer_music
                  - type: conditional
                    conditions:
                      - entity: sensor.kitchen_next_timer
                        state_not: unknown
                      - entity: sensor.kitchen_next_timer
                        state_not: unavailable
                    card:
                      type: custom:button-card
                      entity: sensor.kitchen_next_timer
                      name: Kitchen Timer
                      icon: mdi:timer-outline
                      show_name: true
                      show_icon: true
                      show_label: false
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      custom_fields:
                        bar: |
                          [[[
                            var color = "var(--green)";
                            var state = 100 - states['sensor.kitchen_timer'].attributes.remaining_perc;
                            if (state < 10) color = "var(--red)";
                            else if (state < 50) color = "var(--yellow)";
                            else if (state < 90) color = "var(--orange)";
                            return `
                            <div>
                            <div style="background:${color}; height: 12px; width:${state}%">
                            </div>
                            </div>`
                          ]]]
                        rem:
                          card:
                            type: conditional
                            conditions:
                              - condition: state
                                entity: sensor.kitchen_next_timer
                                state_not: unknown
                            card:
                              type: custom:button-card
                              entity: sensor.kitchen_timer
                              name: >
                                [[[

                                var remainingTime =
                                states['sensor.kitchen_timer'].attributes.remaining;

                                return `${remainingTime}`;

                                ]]]
                              show_icon: false
                              styles:
                                card:
                                  - width: min
                                  - background: none
                                  - overflow: visible
                                name:
                                  - font-size: 14px
                                  - margin-top: 6px
                                  - font-weight: 600
                                  - color: var(--contrast20)
                        icon1: |
                          [[[
                            return '<ha-icon icon="mdi:silverware-variant"></ha-icon>';
                          ]]]
                      styles:
                        grid:
                          - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                          - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                          - grid-template-columns: 60% 40%
                        card:
                          - height: 100%
                          - padding: 1rem
                          - background: var(--contrast2)
                        img_cell:
                          - position: absolute
                          - top: 20%
                          - left: 40%
                          - overflow: visible
                        icon:
                          - position: absolute
                          - width: 20em
                          - opacity: 20%
                          - color: var(--contrast20)
                          - transform: rotate(-20deg)
                        label:
                          - text-align: left
                          - font-size: 18px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: end
                          - overflow: visible
                          - color: var(--contrast20)
                        name:
                          - text-align: left
                          - font-size: 12px
                          - justify-self: start
                          - align-self: center
                          - overflow: visible
                          - color: var(--contrast20)
                        custom_fields:
                          bar:
                            - justify-self: start
                            - width: 100%
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '12px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                            - background: var(--contrast1)
                            - border-radius: 24px
                          rem:
                            - justify-self: start
                            - font-size: 14px
                            - font-weight: 600
                            - align-self: end
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '27px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                          icon1:
                            - justify-self: end
                            - width: 24px
                            - color: var(--contrast20)
                        hold_action:
                          action: more-info
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Bathroom
                icon: mdi:paper-roll-outline
                hash: '#bathroom'
                button_type: name
                sub_button: []
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: binary_sensor.bathroom_motion_sensors
                    icon_color: yellow
                    content_info: last-changed
                    icon: mdi:motion-sensor
                  - type: entity
                    entity: binary_sensor.bathroom_window_door_sensor
                    icon_color: red
                    icon: mdi:window-closed-variant
                alignment: center
              - type: heading
                icon: mdi:thermostat
                heading: Climate
                heading_style: title
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.bathroom_temperature
                    color: red
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.bathroom_humidity
                    color: blue
                    tap_action:
                      action: more-info
              - type: custom:bubble-card
                card_type: climate
                entity: climate.bathroom
                sub_button:
                  - name: HVAC modes menu
                    select_attribute: hvac_modes
                    state_background: false
                    show_arrow: false
                show_state: true
              - type: heading
                icon: mdi:devices
                heading: Devices
                heading_style: title
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.bathroom_occupancy
                    icon: mdi:light-switch
                    color: red
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.shower
                    color: blue
                    tap_action:
                      action: toggle
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:lightbulb-group
                    heading: Lights
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.bathroom_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_bathroom
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_bathroom
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_bathroom
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_bathroom
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        entity: light.bathroom_light
                        template: light_rgb
                      - type: custom:button-card
                        name: Lightstrip
                        entity: light.bathroom_lightstrip
                        template: light_rgb
                columns: 1
              - type: heading
                icon: mdi:music
                heading: Media
                heading_style: title
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.bathroom
                        state_not: standby
                      - entity: media_player.bathroom
                        state_not: 'off'
                    card:
                      type: custom:button-card
                      entity: media_player.bathroom
                      template: custom_card_mediaplayer_music
                  - type: conditional
                    conditions:
                      - entity: sensor.bathroom_next_timer
                        state_not: unknown
                      - entity: sensor.bathroom_next_timer
                        state_not: unavailable
                    card:
                      type: custom:button-card
                      entity: sensor.bathroom_next_timer
                      name: Bathroom Timer
                      icon: mdi:timer-outline
                      show_name: true
                      show_icon: true
                      show_label: false
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      custom_fields:
                        bar: |
                          [[[
                            var color = "var(--green)";
                            var state = 100 - states['sensor.bathroom_timer'].attributes.remaining_perc;
                            if (state < 10) color = "var(--red)";
                            else if (state < 50) color = "var(--yellow)";
                            else if (state < 90) color = "var(--orange)";
                            return `
                            <div>
                            <div style="background:${color}; height: 12px; width:${state}%">
                            </div>
                            </div>`
                          ]]]
                        rem:
                          card:
                            type: conditional
                            conditions:
                              - condition: state
                                entity: sensor.bathroom_next_timer
                                state_not: unknown
                            card:
                              type: custom:button-card
                              entity: sensor.bathroom_timer
                              name: >
                                [[[

                                var remainingTime =
                                states['sensor.bathroom_timer'].attributes.remaining;

                                return `${remainingTime}`;

                                ]]]
                              show_icon: false
                              styles:
                                card:
                                  - width: min
                                  - background: none
                                  - overflow: visible
                                name:
                                  - font-size: 14px
                                  - margin-top: 6px
                                  - font-weight: 600
                                  - color: var(--contrast20)
                        icon1: |
                          [[[
                            return '<ha-icon icon="mdi:paper-roll-outline"></ha-icon>';
                          ]]]
                      styles:
                        grid:
                          - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                          - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                          - grid-template-columns: 60% 40%
                        card:
                          - height: 100%
                          - padding: 1rem
                          - background: var(--contrast2)
                        img_cell:
                          - position: absolute
                          - top: 20%
                          - left: 40%
                          - overflow: visible
                        icon:
                          - position: absolute
                          - width: 20em
                          - opacity: 20%
                          - color: var(--contrast20)
                          - transform: rotate(-20deg)
                        label:
                          - text-align: left
                          - font-size: 18px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: end
                          - overflow: visible
                          - color: var(--contrast20)
                        name:
                          - text-align: left
                          - font-size: 12px
                          - justify-self: start
                          - align-self: center
                          - overflow: visible
                          - color: var(--contrast20)
                        custom_fields:
                          bar:
                            - justify-self: start
                            - width: 100%
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '12px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                            - background: var(--contrast1)
                            - border-radius: 24px
                          rem:
                            - justify-self: start
                            - font-size: 14px
                            - font-weight: 600
                            - align-self: end
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '27px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                          icon1:
                            - justify-self: end
                            - width: 24px
                            - color: var(--contrast20)
                        hold_action:
                          action: more-info
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Guest room
                icon: mdi:desk
                hash: '#guest-room'
                button_type: name
                sub_button: []
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: binary_sensor.guest_room_motion_sensor
                    icon_color: yellow
                    content_info: last-changed
                    icon: mdi:motion-sensor
                  - type: entity
                    entity: binary_sensor.guest_room_window_door_sensor
                    icon_color: red
                    icon: mdi:window-closed-variant
                alignment: center
              - type: heading
                icon: mdi:thermostat
                heading: Climate
                heading_style: title
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.guest_room_temperature
                    color: red
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.guest_room_humidity
                    color: blue
                    tap_action:
                      action: more-info
              - type: custom:bubble-card
                card_type: climate
                entity: climate.guest_room
                sub_button:
                  - name: HVAC modes menu
                    select_attribute: hvac_modes
                    state_background: false
                    show_arrow: false
                show_state: true
              - type: heading
                icon: mdi:devices
                heading: Devices
                heading_style: title
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.guest_room_occupancy
                    icon: mdi:light-switch
                    color: red
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: input_boolean.guest_night_mode
                    color: blue
                    tap_action:
                      action: toggle
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.prusa_mini
                    name: Prusa Mini+
                    label: |
                      [[[
                        if (entity.state == "unknown") return "Off";
                        else return states["sensor.prusa_mini"].state;
                      ]]]
                    template: nav_button_small
                    variables:
                      navigation_path: server#3d-printer
                      state_off: unknown
                      state_on: printing
                      icon_on: mdi:printer-3d
                      icon_off: mdi:printer-3d-off
                      background_color_on: var(--purple)
                      background_color_off: var(--contrast2)
                      color_on: var(--black)
                      color_off: var(--contrast20)
                columns: 2
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:lightbulb-group
                    heading: Lights
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.guest_room_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_guest_room
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_guest_room
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_guest_room
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_guest_room
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        entity: light.guest_room_light
                        template: light_rgb
                      - type: custom:button-card
                        name: Desk Lamp
                        entity: light.guest_room_desk_lamp
                        template: light_switch
                columns: 1
              - type: heading
                icon: mdi:music
                heading: Media
                heading_style: title
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.guest_room
                        state_not: standby
                      - entity: media_player.guest_room
                        state_not: 'off'
                    card:
                      type: custom:button-card
                      entity: media_player.guest_room
                      template: custom_card_mediaplayer_music
                  - type: conditional
                    conditions:
                      - entity: sensor.guest_room_next_timer
                        state_not: unknown
                      - entity: sensor.guest_room_next_timer
                        state_not: unavailable
                    card:
                      type: custom:button-card
                      entity: sensor.guest_room_next_timer
                      name: Guest Room Timer
                      icon: mdi:timer-outline
                      show_name: true
                      show_icon: true
                      show_label: false
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      custom_fields:
                        bar: |
                          [[[
                            var color = "var(--green)";
                            var state = 100 - states['sensor.guest_room_timer'].attributes.remaining_perc;
                            if (state < 10) color = "var(--red)";
                            else if (state < 50) color = "var(--yellow)";
                            else if (state < 90) color = "var(--orange)";
                            return `
                            <div>
                            <div style="background:${color}; height: 12px; width:${state}%">
                            </div>
                            </div>`
                          ]]]
                        rem:
                          card:
                            type: conditional
                            conditions:
                              - condition: state
                                entity: sensor.guest_room_next_timer
                                state_not: unknown
                            card:
                              type: custom:button-card
                              entity: sensor.guest_room_timer
                              name: >
                                [[[

                                var remainingTime =
                                states['sensor.guest_room_timer'].attributes.remaining;

                                return `${remainingTime}`;

                                ]]]
                              show_icon: false
                              styles:
                                card:
                                  - width: min
                                  - background: none
                                  - overflow: visible
                                name:
                                  - font-size: 14px
                                  - margin-top: 6px
                                  - font-weight: 600
                                  - color: var(--contrast20)
                        icon1: |
                          [[[
                            return '<ha-icon icon="mdi:desk"></ha-icon>';
                          ]]]
                      styles:
                        grid:
                          - grid-template-areas: '"rem icon1" "n icon2" "bar bar"'
                          - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                          - grid-template-columns: 60% 40%
                        card:
                          - height: 100%
                          - padding: 1rem
                          - background: var(--contrast2)
                        img_cell:
                          - position: absolute
                          - top: 20%
                          - left: 40%
                          - overflow: visible
                        icon:
                          - position: absolute
                          - width: 20em
                          - opacity: 20%
                          - color: var(--contrast20)
                          - transform: rotate(-20deg)
                        label:
                          - text-align: left
                          - font-size: 18px
                          - font-weight: 500
                          - justify-self: start
                          - align-self: end
                          - overflow: visible
                          - color: var(--contrast20)
                        name:
                          - text-align: left
                          - font-size: 12px
                          - justify-self: start
                          - align-self: center
                          - overflow: visible
                          - color: var(--contrast20)
                        custom_fields:
                          bar:
                            - justify-self: start
                            - width: 100%
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '12px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                            - background: var(--contrast1)
                            - border-radius: 24px
                          rem:
                            - justify-self: start
                            - font-size: 14px
                            - font-weight: 600
                            - align-self: end
                            - height: |
                                [[[
                                  if (entity.state != 'unknown') {
                                    return '27px';
                                  } else {
                                    return '0px';
                                  }
                                ]]]
                          icon1:
                            - justify-self: end
                            - width: 24px
                            - color: var(--contrast20)
                        hold_action:
                          action: more-info
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Corridor
                icon: mdi:door
                hash: '#corridor'
                button_type: name
                sub_button: []
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: binary_sensor.hue_motion_sensor_1_motion
                    icon_color: yellow
                    content_info: last-changed
                    icon: mdi:motion-sensor
                  - type: entity
                    entity: sensor.hue_motion_sensor_1_light_level
                    icon_color: yellow
                    icon: mdi:brightness-5
                alignment: center
              - type: heading
                icon: mdi:devices
                heading: Devices
                heading_style: title
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: switch.camera_corridor_outlet
                    icon: mdi:cctv
                    color: red
                    tap_action:
                      action: toggle
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: lock.flat_door
                    icon: mdi:lock-open
                    label: '[[[return states["lock.flat_door"].state]]]'
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "locked") return "mdi:lock";
                          else return "mdi:lock-open-variant";
                        ]]]
                      state_on: unlocked
                      state_off: locked
                      background_color_off: var(--green)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast1)
                  - type: custom:button-card
                    entity: lock.front_door
                    icon: mdi:lock-open
                    label: '[[[return states["lock.front_door"].state]]]'
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "locked") return "mdi:lock";
                          else return "mdi:lock-open-variant";
                        ]]]
                      state_on: unlocked
                      state_off: locked
                      background_color_off: var(--green)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast1)
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:lightbulb-group
                    heading: Lights
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.corridor_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_corridor
                        show_icon: true
                        show_state: false
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_corridor
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_corridor
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_corridor
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Spot 1
                        entity: light.corridor_spot_1
                        template: light_rgb
                      - type: custom:button-card
                        name: Spot 2
                        entity: light.corridor_spot_2
                        template: light_rgb
                      - type: custom:button-card
                        name: Spot 3
                        entity: light.corridor_spot_3
                        template: light_rgb
                columns: 1
              - type: heading
                icon: mdi:music
                heading: Media
                heading_style: title
              - type: conditional
                conditions:
                  - condition: state
                    entity: media_player.nest_party
                    state_not: 'off'
                  - condition: or
                    conditions:
                      - condition: state
                        entity: media_player.houseparty
                        state_not: standby
                      - condition: state
                        entity: media_player.nest_party
                        state_not: 'off'
                      - condition: state
                        entity: switch.camera_corridor_outlet
                        state: 'on'
                card:
                  type: custom:swipe-card
                  card_width: calc(100% - 48px)
                  parameters:
                    centeredSlides: true
                    slidesPerView: auto
                    spaceBetween: 16
                    initialSlide: 0
                  cards:
                    - type: conditional
                      conditions:
                        - entity: media_player.nest_party
                          state_not: 'off'
                      card:
                        type: custom:button-card
                        entity: media_player.nest_party
                        template: custom_card_mediaplayer_music
                    - type: conditional
                      conditions:
                        - entity: switch.camera_corridor_outlet
                          state: 'on'
                      card:
                        show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        camera_image: camera.192_168_178_78
                        entity: camera.192_168_178_78
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Lights
                icon: mdi:lightbulb-group
                hash: '#lights'
                button_type: name
              - type: heading
                icon: mdi:cog
                heading: Settings
                heading_style: title
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: light.all_lights
                    color: yellow
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_adaptive_lighting
                    show_icon: true
                    show_state: false
                    color: orange
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_adapt_color_adaptive_lighting
                    show_state: false
                    show_icon: true
                    color: pink
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: >-
                      switch.adaptive_lighting_adapt_brightness_adaptive_lighting
                    show_state: false
                    show_icon: true
                    color: yellow
                    tap_action:
                      action: toggle
                  - type: entity
                    entity: switch.adaptive_lighting_sleep_mode_adaptive_lighting
                    show_state: false
                    show_icon: true
                    color: blue
                    tap_action:
                      action: toggle
                tap_action:
                  action: navigate
                  navigation_path: corridor
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.motion_lights
                    name: Motion Lights
                    template: switch_template
                    variables:
                      icon_on: mdi:lightbulb-auto
                      icon_off: mdi:lightbulb-off-outline
                      color: var(--green)
                  - type: custom:button-card
                    entity: input_number.automatic_lights_off_time
                    name: Motion Timer
                    template: custom_card_number_slider
                    variables:
                      color: var(--yellow)
                columns: 2
              - type: heading
                icon: mdi:lightbulb-group
                heading: All Lights
                heading_style: title
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    name: Brightness
                    custom_fields:
                      slider:
                        card:
                          type: custom:my-slider-v2
                          entity: light.all_lights
                          colorMode: brightness
                          styles:
                            container:
                              - border-radius: 100px
                              - overflow: visible
                              - background: none
                            card:
                              - height: 40px
                              - padding: 0 20px
                              - background: var(--brightness)
                            track:
                              - overflow: visible
                              - background: none
                            progress:
                              - background: none
                            thumb:
                              - background: var(--black)
                              - top: 2px
                              - right: '-18px'
                              - height: 36px
                              - width: 36px
                              - border-radius: 100px
                    styles:
                      grid:
                        - grid-template-areas: '"n" "slider"'
                        - grid-template-columns: 1fr
                        - grid-template-rows: 1fr min-content min-content
                      card:
                        - background: var(--brightness-tint)
                        - padding: 16px
                        - '--mdc-ripple-press-opacity': 0
                      name:
                        - justify-self: start
                        - font-size: 14px
                        - margin: 4px 0 12px 0
                        - color: var(--contrast20)
                  - type: custom:button-card
                    name: Temperature
                    custom_fields:
                      slider:
                        card:
                          type: custom:my-slider-v2
                          entity: light.all_lights
                          colorMode: temperature
                          styles:
                            container:
                              - border-radius: 100px
                              - overflow: visible
                              - background: none
                            card:
                              - height: 40px
                              - padding: 0 20px
                              - background: var(--temperature)
                            track:
                              - overflow: visible
                              - background: none
                            progress:
                              - background: none
                            thumb:
                              - background: var(--black)
                              - top: 2px
                              - right: '-18px'
                              - height: 36px
                              - width: 36px
                              - border-radius: 100px
                    styles:
                      grid:
                        - grid-template-areas: '"n" "slider"'
                        - grid-template-columns: 1fr
                        - grid-template-rows: 1fr min-content min-content
                      card:
                        - background: var(--temperature-tint)
                        - padding: 16px
                        - '--mdc-ripple-press-opacity': 0
                      name:
                        - justify-self: start
                        - font-size: 14px
                        - margin: 4px 0 12px 0
                        - color: var(--contrast20)
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:sofa-outline
                    heading: Living Room
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.living_room_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_living_room
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_living_room
                        show_state: false
                        show_icon: true
                        color: pink
                        icon: mdi:sun-thermometer
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_living_room
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_living_room
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                    tap_action:
                      action: navigate
                      navigation_path: living-room
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        template: light_rgb
                        entity: light.living_room_light
                        double_tap_action:
                          action: call-service
                          service: script.turn_light_to_random_color
                          data:
                            target: '[[[ return entity.entity_id ]]]'
                          haptic: success
                      - type: custom:button-card
                        name: Lightstrip
                        template: light_rgb
                        entity: light.living_room_lightstrip
                        double_tap_action:
                          action: call-service
                          service: script.turn_light_to_random_color
                          data:
                            target: '[[[ return entity.entity_id ]]]'
                          haptic: success
                      - type: custom:button-card
                        name: Couch Lights
                        entity: light.living_room_christmas_light
                        template: light_switch
                      - type: custom:button-card
                        name: Lava Lamp
                        entity: light.lava_lamp
                        template: light_switch
                      - type: custom:button-card
                        name: Bowl Lamp
                        template: light_rgb
                        entity: light.bowl_lamp
                        tap_action:
                          action: toggle
                          haptic: medium
                        hold_action:
                          action: more-info
                          haptic: medium
                      - type: custom:button-card
                        name: Ball Lamp
                        template: light_rgb
                        entity: light.ball_lamp
                        double_tap_action:
                          action: call-service
                          service: script.turn_light_to_random_color
                          data:
                            target: '[[[ return entity.entity_id ]]]'
                          haptic: success
                      - type: custom:button-card
                        name: TV Backlight
                        template: light_rgb
                        entity: light.dreamview_tv
                columns: 1
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:bed-king
                    heading: Bedroom
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.bed_room_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_bed_room
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_bed_room
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_bed_room
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_bed_room
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                    tap_action:
                      action: navigate
                      navigation_path: bed-room
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        entity: light.bed_room_light
                        template: light_rgb
                      - square: false
                        columns: 2
                        type: grid
                        cards:
                          - type: custom:button-card
                            name: Bed Lamp
                            entity: light.bed_lamp
                            template: light_rgb
                            double_tap_action:
                              action: call-service
                              service: script.turn_light_to_random_color
                              data:
                                target: '[[[ return entity.entity_id ]]]'
                              haptic: success
                          - type: custom:button-card
                            name: Bed Lamp
                            template: light_rgb
                            entity: light.bed_lamp_2
                            double_tap_action:
                              action: call-service
                              service: script.turn_light_to_random_color
                              data:
                                target: '[[[ return entity.entity_id ]]]'
                              haptic: success
                columns: 1
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:monitor
                    heading: Office
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.office_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_office
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_office
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_office
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_office
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                    tap_action:
                      action: navigate
                      navigation_path: office
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        template: light_rgb
                        icon: '[[[ return entity.attributes.icon ]]]'
                        entity: light.office_light
                      - type: custom:button-card
                        name: Top Light 2
                        template: light_rgb
                        entity: light.office_light_2
                      - type: custom:button-card
                        name: Desk Lamp
                        entity: light.office_desk_lamp
                        template: light_rgb
                      - type: custom:button-card
                        name: Lightstrip
                        entity: light.desk_lightstrip
                        template: light_rgb
                columns: 1
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:silverware-variant
                    heading: Kitchen
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.kitchen_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_kitchen
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_kitchen
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_kitchen
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_kitchen
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                    tap_action:
                      action: navigate
                      navigation_path: kitchen
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        template: light_rgb
                        entity: light.kitchen_light
                      - type: custom:button-card
                        name: Lightstrip
                        entity: light.kitchen_lightstrip
                        template: light_rgb
                columns: 1
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:paper-roll-outline
                    heading: Bathroom
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.bathroom_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_bathroom
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_bathroom
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_bathroom
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_bathroom
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                    tap_action:
                      action: navigate
                      navigation_path: bathroom
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        entity: light.bathroom_light
                        template: light_rgb
                      - type: custom:button-card
                        name: Lightstrip
                        entity: light.bathroom_lightstrip
                        template: light_rgb
                columns: 1
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:desk
                    heading: Guest room
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.guest_room_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_guest_room
                        show_state: false
                        show_icon: true
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_guest_room
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_guest_room
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_guest_room
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                    tap_action:
                      action: navigate
                      navigation_path: guest-room
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Top Light
                        entity: light.guest_room_light
                        template: light_rgb
                      - type: custom:button-card
                        name: Desk Lamp
                        entity: light.guest_room_desk_lamp
                        template: light_switch
                columns: 1
              - square: false
                type: grid
                cards:
                  - type: heading
                    icon: mdi:door
                    heading: Corridor
                    heading_style: subtitle
                    badges:
                      - type: entity
                        show_state: false
                        show_icon: true
                        entity: light.corridor_lights
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_corridor
                        show_icon: true
                        show_state: false
                        color: orange
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_color_corridor
                        show_state: false
                        show_icon: true
                        color: pink
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_adapt_brightness_corridor
                        show_state: false
                        show_icon: true
                        color: yellow
                        tap_action:
                          action: toggle
                      - type: entity
                        entity: switch.adaptive_lighting_sleep_mode_corridor
                        show_state: false
                        show_icon: true
                        color: blue
                        tap_action:
                          action: toggle
                    tap_action:
                      action: navigate
                      navigation_path: corridor
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Spot 1
                        entity: light.corridor_spot_1
                        template: light_rgb
                      - type: custom:button-card
                        name: Spot 2
                        entity: light.corridor_spot_2
                        template: light_rgb
                      - type: custom:button-card
                        name: Spot 3
                        entity: light.corridor_spot_3
                        template: light_rgb
                columns: 1
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Chores
                icon: mdi:list-box-outline
                hash: '#chores'
                button_type: name
              - type: conditional
                conditions:
                  - condition: state
                    entity: group.chores
                    state: 'on'
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:bubble-card
                      card_type: separator
                      name: To-do
                      icon: mdi:format-list-checkbox
                    - type: custom:auto-entities
                      show_empty: false
                      card:
                        square: false
                        type: grid
                        columns: 2
                      card_param: cards
                      filter:
                        template: |-
                          {% set updates= states.input_boolean
                                | selectattr('entity_id', 'contains', 'chores')
                                | selectattr('state', 'eq', 'on')
                                |sort(attribute='attributes.friendly_name')
                                |map(attribute='entity_id')
                                |list
                          %}
                          {% for cat in updates -%}
                          {{
                            {
                              'type': 'custom:button-card',
                              'entity': cat,
                              'label': 'Open',
                              'template': 'switch_label_template',
                            }
                          }},
                          {%- endfor %}
              - type: vertical-stack
                cards:
                  - type: custom:bubble-card
                    card_type: separator
                    name: Completed
                    icon: mdi:list-status
                  - type: custom:auto-entities
                    show_empty: false
                    card:
                      square: false
                      type: grid
                      columns: 2
                    card_param: cards
                    filter:
                      template: |-
                        {% set updates= states.input_boolean
                              | selectattr('entity_id', 'contains', 'chores')
                              | selectattr('state', 'eq', 'off')
                              |sort(attribute='attributes.friendly_name')
                              |map(attribute='entity_id')
                              |list
                        %}
                        {% for cat in updates -%}
                        {{
                          {
                            'type': 'custom:button-card',
                            'entity': cat,
                            'label': 'Done',
                            'template': 'switch_label_template',
                          }
                        }},
                        {%- endfor %}
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Alarm
                icon: mdi:alarm
                hash: '#alarm'
                button_type: name
              - square: false
                columns: 1
                type: grid
                cards:
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: input_boolean.light_alarm
                        label: >-
                          [[[ return
                          states["sensor.light_alarm_time_readable"].state ]]]
                        template: switch_label_template
                        variables:
                          icon_on: mdi:alarm-light-outline
                          icon_off: mdi:alarm-light-off-outline
                          color: var(--yellow)
                      - type: custom:button-card
                        entity: input_boolean.sound_alarm
                        label: '[[[ return states["sensor.wake_time_1"].state ]]]'
                        template: switch_label_template
                        variables:
                          icon_on: mdi:alarm-note
                          icon_off: mdi:alarm-note-off
                          color: var(--green)
                  - type: custom:button-card
                    entity: sensor.wake_time_1
                    icon: |
                      [[[
                        if (states['binary_sensor.is_alarm_on'].state == "on") return "mdi:alarm";
                        else return "mdi:alarm-off";
                      ]]]
                    show_icon: true
                    show_state: true
                    show_name: false
                    tap_action:
                      action: none
                    styles:
                      grid:
                        - grid-template-areas: '". plus1 plus2 ." "i s s ." ". minus1 minus2 ."'
                        - grid-template-columns: 1fr min-content min-content 1fr
                        - grid-template-rows: 1fr min-content
                      card:
                        - background: none
                        - box-shadow: none
                      state:
                        - font-size: 50px
                      icon:
                        - color: |
                            [[[
                              if (states['binary_sensor.is_alarm_on'].state == "on") return "var(--contrast20)";
                              else return "var(--contrast10)";
                            ]]]
                    custom_fields:
                      plus1:
                        card:
                          type: custom:button-card
                          icon: mdi:plus
                          tap_action:
                            action: perform-action
                            perform_action: input_number.increment
                            target:
                              entity_id: input_number.wakehour_1
                          styles:
                            card:
                              - background: none
                              - box-shadow: none
                      plus2:
                        card:
                          type: custom:button-card
                          icon: mdi:plus
                          tap_action:
                            action: perform-action
                            perform_action: input_number.increment
                            target:
                              entity_id: input_number.wakeminutes_1
                          styles:
                            card:
                              - background: none
                              - box-shadow: none
                      minus1:
                        card:
                          type: custom:button-card
                          icon: mdi:minus
                          tap_action:
                            action: perform-action
                            perform_action: input_number.decrement
                            target:
                              entity_id: input_number.wakehour_1
                          styles:
                            card:
                              - background: none
                              - box-shadow: none
                      minus2:
                        card:
                          type: custom:button-card
                          icon: mdi:minus
                          tap_action:
                            action: perform-action
                            perform_action: input_number.decrement
                            target:
                              entity_id: input_number.wakeminutes_1
                          styles:
                            card:
                              - background: none
                              - box-shadow: none
                  - square: true
                    columns: 7
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: input_boolean.wakeweekday_mon_1
                        show_name: true
                        show_icon: false
                        name: Mo
                        aspect_ratio: 1/1
                        tap_action:
                          action: toggle
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--orange)";
                                  else return "var(--contrast2)";
                                ]]]
                          name:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: input_boolean.wakeweekday_tue_1
                        show_name: true
                        show_icon: false
                        name: Tu
                        aspect_ratio: 1/1
                        tap_action:
                          action: toggle
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--green)";
                                  else return "var(--contrast2)";
                                ]]]
                          name:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: input_boolean.wakeweekday_wed_1
                        show_name: true
                        show_icon: false
                        name: We
                        aspect_ratio: 1/1
                        tap_action:
                          action: toggle
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--blue)";
                                  else return "var(--contrast2)";
                                ]]]
                          name:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: input_boolean.wakeweekday_thu_1
                        show_name: true
                        show_icon: false
                        name: Th
                        aspect_ratio: 1/1
                        tap_action:
                          action: toggle
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--red)";
                                  else return "var(--contrast2)";
                                ]]]
                          name:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: input_boolean.wakeweekday_fri_1
                        show_name: true
                        show_icon: false
                        name: Fr
                        aspect_ratio: 1/1
                        tap_action:
                          action: toggle
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--purple)";
                                  else return "var(--contrast2)";
                                ]]]
                          name:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: input_boolean.wakeweekday_sat_1
                        show_name: true
                        show_icon: false
                        name: Sa
                        aspect_ratio: 1/1
                        tap_action:
                          action: toggle
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--yellow)";
                                  else return "var(--contrast2)";
                                ]]]
                          name:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: input_boolean.wakeweekday_sun_1
                        show_name: true
                        show_icon: false
                        name: Su
                        aspect_ratio: 1/1
                        tap_action:
                          action: toggle
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--teal)";
                                  else return "var(--contrast2)";
                                ]]]
                          name:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                  - square: false
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Light Offset
                        entity: input_number.light_alarm_offset
                        show_state: false
                        template: custom_card_number_slider
                        variables:
                          icon: '[[[ return entity.attributes.icon ]]]'
                          label: >-
                            [[[return
                            Math.round(states["input_number.light_alarm_offset"].state)
                            + "min" ]]]
                          color: var(--yellow)
                      - type: custom:button-card
                        name: Volume
                        entity: input_number.alarm_volume
                        show_state: false
                        template: custom_card_number_slider
                        variables:
                          icon: '[[[ return entity.attributes.icon ]]]'
                          label: >-
                            [[[return
                            states["input_number.alarm_volume"].state*100 +
                            "%"]]]
                          color: var(--green)
                    columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Climate
                icon: mdi:thermometer
                hash: '#climate'
                button_type: name
              - square: false
                type: grid
                cards:
                  - type: custom:mini-graph-card
                    entities:
                      - sensor.temperature_mean
                    name: Temperature
                    line_color: var(--red)
                  - type: custom:mini-graph-card
                    entities:
                      - sensor.humidity_mean
                    name: Humidity
                    line_color: var(--blue)
                columns: 2
              - features:
                  - type: climate-preset-modes
                    style: dropdown
                    preset_modes:
                      - away
                      - home
                type: tile
                entity: climate.bathroom
                name: Mode
                icon: mdi:home-thermometer-outline
                vertical: false
                state_content:
                  - preset_mode
                  - current_temperature
                features_position: bottom
              - type: heading
                icon: mdi:thermostat
                heading: Thermostat
                heading_style: title
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: climate.living_room
                    template: custom_card_climate
                    variables:
                      sensor: binary_sensor.living_room_window_door_sensor
                      name: '[[[ return "Living<br>Room" ]]]'
                      radius: 24px 24px 6px 24px
                  - type: custom:button-card
                    entity: climate.bed_room
                    template: custom_card_climate
                    variables:
                      sensor: binary_sensor.bed_room_window_door_sensor
                      name: '[[[ return "Bedroom" ]]]'
                      radius: 24px 24px 24px 6px
                  - type: custom:button-card
                    entity: climate.office
                    template: custom_card_climate
                    variables:
                      sensor: binary_sensor.office_window_door_sensor
                      name: '[[[ return "Office<br>" ]]]'
                      radius: 24px 6px 6px 24px
                  - type: custom:button-card
                    entity: climate.kitchen
                    template: custom_card_climate
                    variables:
                      sensor: binary_sensor.kitchen_window_door_sensor
                      name: '[[[ return "Kitchen" ]]]'
                      radius: 6px 24px 24px 6px
                  - type: custom:button-card
                    entity: climate.bathroom
                    template: custom_card_climate
                    variables:
                      sensor: binary_sensor.bathroom_window_door_sensor
                      name: '[[[ return "Bathroom" ]]]'
                      radius: 24px 6px 24px 24px
                  - type: custom:button-card
                    entity: climate.guest_room
                    template: custom_card_climate
                    variables:
                      sensor: binary_sensor.guest_room_window_door_sensor
                      name: '[[[ return "Guest<br>Room" ]]]'
                      radius: 6px 24px 24px 24px
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Vacuum
                icon: mdi:robot-vacuum
                hash: '#vacuum'
                button_type: name
              - type: vertical-stack
                cards:
                  - type: picture
                    image_entity: image.dobby_map
                    card_mod:
                      style: |
                        ha-card { 
                          box-shadow: none;
                          background: transparent;
                          border-radius: none;
                        }
                  - type: custom:button-card
                    entity: vacuum.dobby
                    name: Dobby
                    icon: |
                      [[[
                        if (entity.state == 'idle') {
                          return 'mdi:dots-circle';
                        } else if (entity.state == 'cleaning') {
                          return 'mdi:robot-vacuum';
                        } else if (entity.state == 'docked') {
                          return 'mdi:robot-vacuum-off';
                        } else {
                          return 'mdi:robot-vacuum-alert';
                        }
                      ]]]
                    show_name: true
                    show_icon: true
                    show_label: true
                    show_state: false
                    tap_action:
                      action: more-info
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: call-service
                      service: vacuum.return_to_base
                      service_data:
                        entity_id: vacuum.dobby
                    label: '[[[ return states["vacuum.dobby"].state ]]]'
                    custom_fields:
                      icon1:
                        card:
                          type: custom:button-card
                          icon: mdi:robot-vacuum
                          styles:
                            card:
                              - background-color: var(--contrast1)
                              - width: 30px
                              - height: 30px
                            icon:
                              - width: 18px
                              - color: var(--contrast20)
                      icon2:
                        card:
                          type: custom:button-card
                          entity: input_boolean.chores_empty_dobby
                          icon: |
                            [[[
                              if (states['input_boolean.chores_empty_dobby'].state == 'on'){
                                return "mdi:delete-empty";
                              } else {
                                return "mdi:delete";
                              }
                            ]]]
                          show_icon: true
                          show_name: false
                          tap_action:
                            action: more-info
                          styles:
                            card:
                              - width: 24px
                              - border: none
                              - background: none
                              - overflow: visible
                            icon:
                              - width: 22px
                              - color: |
                                  [[[
                                    if (entity.state == 'docked') {
                                      return 'var(--contrast20)';
                                    } else {
                                      return 'var(--black)';
                                    }
                                  ]]]
                    styles:
                      grid:
                        - grid-template-areas: >-
                            ". icon1" "l l" "n icon2" "rem icon2" "bar bar"
                            "start end"
                        - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                        - grid-template-columns: 60% 40%
                      card:
                        - height: 100%
                        - padding: 1rem
                        - background: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'var(--contrast2)';
                              } else if (entity.state == 'cleaning') {
                                return 'var(--green)';
                              } else if (entity.state == 'idle') {
                                return 'var(--yellow)';
                              } else {
                                return 'var(--red)';
                              }
                            ]]]
                      img_cell:
                        - position: absolute
                        - top: 20%
                        - left: 40%
                        - overflow: visible
                      icon:
                        - position: absolute
                        - width: 20em
                        - opacity: 20%
                        - color: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'var(--white)';
                              } else {
                                return 'var(--black)';
                              }
                            ]]]
                        - transform: rotate(-20deg)
                        - animation: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'null';
                              } else if (entity.state == 'idle') {
                                return 'blink 1.5s linear infinite';
                              } else if (entity.state == 'cleaning') {
                                return 'rotating 2s linear infinite';
                              } else {
                                return 'blink 1.5s linear infinite';
                              }
                            ]]] 
                      label:
                        - text-align: left
                        - font-size: 18px
                        - font-weight: 500
                        - justify-self: start
                        - align-self: end
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--black)';
                              }
                            ]]]
                      name:
                        - text-align: left
                        - font-size: 12px
                        - opacity: 0.7
                        - justify-self: start
                        - align-self: center
                        - overflow: visible
                        - color: |
                            [[[
                              if (entity.state == 'docked') {
                                return 'var(--contrast20)';
                              } else {
                                return 'var(--black)';
                              }
                            ]]]
                      custom_fields:
                        icon1:
                          - justify-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'docked') {
                                  return 'var(--contrast20)';
                                } else {
                                  return 'var(--black)';
                                }
                              ]]]
                        icon2:
                          - justify-self: end
                          - align-self: end
                          - width: 24px
                          - color: |
                              [[[
                                if (entity.state == 'docked') {
                                  return 'var(--contrast20)';
                                } else {
                                  return 'var(--black)';
                                }
                              ]]]
                      hold_action:
                        action: more-info
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: vacuum.dobby
                    icon: mdi:pause
                    label: Start
                    name: >-
                      [[[return states["vacuum.dobby"].attributes.battery_level
                      + "% Battery"]]]
                    template: button_template
                    variables:
                      icon2: mdi:play
                      state_on: cleaning
                      state_off: docked
                      background_color_off: var(--green)
                      background_color_on: var(--red)
                      color_on: var(--black)
                      color_off: var(--black)
                    tap_action:
                      action: call-service
                      service: vacuum.start
                      service_data:
                        entity_id: vacuum.dobby
                      haptic: success
                  - type: custom:button-card
                    entity: input_boolean.readytoclean
                    template: switch_template
                    variables:
                      icon_on: mdi:calendar-check-outline
                      icon_off: mdi:calendar
                      color: var(--purple)
                    name: Scheduled cleaning
                  - type: custom:button-card
                    entity: vacuum.dobby
                    icon: mdi:home-variant
                    name: '[[[ return "Currently " + states["vacuum.dobby"].state ]]]'
                    label: Return
                    show_label: true
                    tap_action:
                      action: call-service
                      service: vacuum.return_to_base
                      service_data:
                        entity_id: vacuum.dobby
                      haptic: success
                    template: button_template
                    variables:
                      icon2: mdi:home-variant
                      state_on: cleaning
                      state_off: docked
                      background_color_off: var(--red)
                      background_color_on: var(--red)
                      color_on: var(--black)
                      color_off: var(--black)
                  - type: custom:button-card
                    entity: sensor.dobby_main_brush_lifespan
                    template: custom_card_sensor_small
                    name: Main Brush
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = '%';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    entity: sensor.dobby_side_brush_lifespan
                    template: custom_card_sensor_small
                    name: Side Brush
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = '%';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    entity: sensor.dobby_total_cleanings
                    template: custom_card_sensor_small
                    name: Total Cleanings
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' ';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Remote
                icon: mdi:television
                hash: '#remote'
                button_type: name
                sub_button:
                  - entity: select.harmony_hub_activities
                    show_name: false
                    show_state: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.is_tv_on
                    state: 'on'
                  - entity: switch.harmony_hub_nintendo_switch
                    state_not: 'on'
                card:
                  type: heading
                  icon: mdi:multimedia
                  heading: Media
                  heading_style: title
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.is_tv_on
                    state: 'on'
                  - entity: switch.harmony_hub_nintendo_switch
                    state_not: 'on'
                card:
                  type: custom:button-card
                  entity: media_player.tv_and_ps5
                  template: custom_card_mediaplayer_tv
              - type: heading
                icon: mdi:star
                heading: Activities
                heading_style: title
              - columns: 4
                type: grid
                cards:
                  - type: custom:button-card
                    entity: select.harmony_hub_activities
                    icon: mdi:television-guide
                    show_name: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: select.select_option
                      target:
                        entity_id: select.harmony_hub_activities
                      data:
                        option: Smart TV
                      haptic: medium
                    hold_action:
                      action: more-info
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--green)
                      icon:
                        - color: |
                            [[[
                              if (entity.state == "Smart TV") return "var(--white)";
                              else return "var(--black)";
                            ]]]
                  - type: custom:button-card
                    entity: select.harmony_hub_activities
                    icon: mdi:netflix
                    show_name: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: select.select_option
                      target:
                        entity_id: select.harmony_hub_activities
                      data:
                        option: Netflix
                      haptic: medium
                    hold_action:
                      action: more-info
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--red)
                      icon:
                        - color: |
                            [[[
                              if (entity.state == "Netflix") return "var(--white)";
                              else return "var(--black)";
                            ]]]
                  - type: custom:button-card
                    entity: select.harmony_hub_activities
                    icon: mdi:sony-playstation
                    show_name: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: select.select_option
                      target:
                        entity_id: select.harmony_hub_activities
                      data:
                        option: Playstation
                      haptic: medium
                    hold_action:
                      action: more-info
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--blue)
                      icon:
                        - color: |
                            [[[
                              if (entity.state == "Playstation") return "var(--white)";
                              else return "var(--black)";
                            ]]]
                  - type: custom:button-card
                    entity: select.harmony_hub_activities
                    icon: mdi:nintendo-switch
                    show_name: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: select.select_option
                      target:
                        entity_id: select.harmony_hub_activities
                      data:
                        option: Nintendo Switch
                      haptic: medium
                    hold_action:
                      action: more-info
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--red)
                      icon:
                        - color: |
                            [[[
                              if (entity.state == "Nintendo Switch") return "var(--white)";
                              else return "var(--black)";
                            ]]]
              - type: heading
                icon: mdi:remote-tv
                heading: Remote
                heading_style: title
              - type: grid
                cards:
                  - type: custom:button-card
                    icon: mdi:volume-minus
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '53906750'
                        command: VolumeDown
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    icon: mdi:volume-mute
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '53906750'
                        command: Mute
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    icon: mdi:volume-plus
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '53906750'
                        command: VolumeUp
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    icontype: custom:button-card
                    icon: mdi:power
                    entity: remote.harmony_hub
                    show_name: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.turn_on_tv
                    styles:
                      card:
                        - border-radius: 24px
                        - background: var(--green)
                      icon:
                        - width: 32px
                        - color: var(--black)
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - background: var(--red)
                  - type: custom:button-card
                    icon: mdi:chevron-up
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '77485195'
                        command: DirectionUp
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    show_name: false
                    tap_action:
                      action: call-service
                      haptic: medium
                      service: media_player.media_play_pause
                      service_data:
                        entity_id: media_player.apple_tv_4k_2
                    styles:
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                    icon: mdi:pause
                    entity: media_player.apple_tv_4k_2
                    state:
                      - value: paused
                        icon: mdi:play
                        styles:
                          card:
                            - background-color: var(--green)
                          icon:
                            - color: var(--black)
                      - value: playing
                        styles:
                          card:
                            - background-color: var(--yellow)
                          icon:
                            - color: var(--black)
                  - type: custom:button-card
                    icon: mdi:chevron-left
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '77485195'
                        command: DirectionLeft
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    icon: mdi:circle-outline
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '77485195'
                        command: Select
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    icon: mdi:chevron-right
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '77485195'
                        command: DirectionRight
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    icon: mdi:arrow-left
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '53906339'
                        command: Back
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    icon: mdi:chevron-down
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '77485195'
                        command: DirectionDown
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
                  - type: custom:button-card
                    icon: mdi:home-variant
                    aspect_ratio: 1/1
                    entity: media_player.apple_tv_4k_2
                    show_name: false
                    tap_action:
                      action: call-service
                      service: remote.send_command
                      service_data:
                        device: '77485195'
                        command: Home
                        entity_id: remote.harmony_hub
                    styles:
                      card:
                        - border-radius: 24px
                        - background-color: var(--contrast2)
                      icon:
                        - width: 32px
                        - color: var(--contrast8)
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--contrast20)
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#julian'
                name: Julian
                icon: mdi:face-agent
                bg_opacity: 100
                hide_backdrop: true
                bg_blur: 100
                bg_color: var(--contrast1)
                button_type: name
                sub_button:
                  - entity: sensor.julians_apple_watch_area
                    show_background: false
                    show_state: true
              - type: heading
                icon: mdi:account
                heading: Personal
                heading_style: title
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.is_alarm_on
                    name: Alarm
                    label: '[[[return states["sensor.wake_time_1"].state]]]'
                    template: nav_button_small
                    variables:
                      navigation_path: home#alarm
                      icon_on: mdi:alarm
                      icon_off: mdi:alarm-off
                      background_color_on: var(--yellow)
                      background_color_off: var(--contrast2)
                      color_on: var(--black)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: group.chores
                    name: Chores
                    label: '[[[return states["sensor.chores_on_count"].state]]]'
                    template: nav_button
                    variables:
                      navigation_path: home#chores
                      icon_on: mdi:list-box-outline
                      icon_off: mdi:list-box-outline
                      background_color_on: var(--orange)
                      background_color_off: var(--contrast2)
                      color_on: var(--black)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: input_boolean.notifications_julians_iphone
                    name: My Notifications
                    template: switch_template
                    variables:
                      icon_on: mdi:cellphone-message
                      icon_off: mdi:cellphone-message-off
                      color: var(--purple)
                  - type: custom:button-card
                    entity: input_boolean.ai_morning_briefing
                    name: AI Morning Brief
                    template: switch_template
                    variables:
                      icon_on: mdi:brain
                      icon_off: mdi:brain
                      color: var(--pink)
                  - type: custom:button-card
                    entity: input_boolean.music_follow_julian
                    name: Music Follows
                    template: switch_template
                    variables:
                      icon_on: mdi:account-music
                      icon_off: mdi:music-off
                      color: var(--green)
                  - type: custom:button-card
                    name: Min Brightness
                    entity: input_number.al_min_brightness_julian
                    show_state: false
                    template: custom_card_number_slider
                    variables:
                      icon: mdi:brightness-5
                      label: >-
                        [[[return
                        Math.round(states["input_number.al_min_brightness_julian"].state)
                        + "/255"]]]
                      color: var(--yellow)
                columns: 2
              - type: heading
                icon: mdi:home
                heading: Home
                heading_style: title
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.vacation_mode
                    icon: mdi:weather-sunny-off
                    name: Vacation Mode
                    template: switch_template
                    variables:
                      icon_on: mdi:weather-sunny
                      icon_off: mdi:weather-sunny-off
                      color: var(--orange)
                  - type: custom:button-card
                    entity: switch.voice_assistant_mute_switch
                    icon: mdi:account-tie-voice-off
                    name: Voice Mute Switch
                    template: switch_label_template
                    label: |
                      [[[
                        if (entity.state == "on"){
                          return "Muted";
                        } else {
                          return "Off";
                        }
                      ]]]
                    variables:
                      icon_on: mdi:account-tie-voice-off
                      icon_off: mdi:account-tie-voice
                      color: var(--red)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.adguard_protection
                    name: AdGuard
                    variables:
                      icon_on: mdi:shield-check
                      icon_off: mdi:shield-off
                      color: var(--purple)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.junglemoneyguest
                    name: Guest WIFI
                    variables:
                      icon_on: mdi:wifi
                      icon_off: mdi:wifi-off
                      color: var(--blue)
                columns: 2
              - type: heading
                icon: mdi:bug
                heading: Debug
                heading_style: title
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.debug_rounded
                    name: Rounded
                    template: switch_template
                    variables:
                      icon_on: mdi:bug-play-outline
                      icon_off: mdi:bug-outline
                      color: var(--red)
                  - type: custom:button-card
                    entity: input_boolean.debug_alarm_clock
                    name: Alarm Clock
                    template: switch_template
                    variables:
                      icon_on: mdi:bug-play-outline
                      icon_off: mdi:bug-outline
                      color: var(--red)
                columns: 2
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: heading
                    icon: mdi:book-music
                    heading: Audiobook
                    heading_style: title
                    badges:
                      - type: entity
                        show_state: true
                        show_icon: true
                        entity: input_select.audiobook
                        tap_action:
                          action: more-info
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: conditional
                    conditions:
                      - entity: input_select.audiobook
                        state: Harry Potter
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: media_player.schlafzimmer
                          show_entity_picture: true
                          show_name: false
                          entity_picture: |
                            [[[
                              if (states['input_number.hp_book'].state == 1.0)
                                return '/local/images/HP_1.jpg';
                              else if (states['input_number.hp_book'].state == 2.0)
                                return '/local/images/HP_2.jpg';
                              else if (states['input_number.hp_book'].state == 3.0)
                                return '/local/images/HP_3.jpg';
                              else if (states['input_number.hp_book'].state == 4.0)
                                return '/local/images/HP_4.jpg';
                              else if (states['input_number.hp_book'].state == 5.0)
                                return '/local/images/HP_5.jpg';
                              else if (states['input_number.hp_book'].state == 6.0)
                                return '/local/images/HP_6.jpg';
                              else if (states['input_number.hp_book'].state == 7.0)
                                return '/local/images/HP_7.jpg';
                            ]]]
                          tap_action:
                            action: more-info
                          styles:
                            grid:
                              - grid-template-areas: '"info"'
                              - grid-template-columns: 1fr
                              - grid-template-rows: min-content
                            card:
                              - background: var(--contrast2);
                              - padding: 0
                              - position: relative
                              - '--mdc-ripple-press-opacity': 0
                            img_cell:
                              - position: absolute
                            icon:
                              - width: 150%
                              - opacity: var(--color-tint)
                              - '-webkit-filter': blur(20px)
                              - '-moz-filter': blur(20px)
                              - '-o-filter': blur(20px)
                              - '-ms-filter': blur(20px)
                              - filter: blur(20px)
                          custom_fields:
                            info:
                              card:
                                type: custom:button-card
                                entity: media_player.schlafzimmer
                                show_name: false
                                show_entity_picture: true
                                entity_picture: |
                                  [[[
                                    if (states['input_number.hp_book'].state == 1.0)
                                      return '/local/images/HP_1.jpg';
                                    else if (states['input_number.hp_book'].state == 2.0)
                                      return '/local/images/HP_2.jpg';
                                    else if (states['input_number.hp_book'].state == 3.0)
                                      return '/local/images/HP_3.jpg';
                                    else if (states['input_number.hp_book'].state == 4.0)
                                      return '/local/images/HP_4.jpg';
                                    else if (states['input_number.hp_book'].state == 5.0)
                                      return '/local/images/HP_5.jpg';
                                    else if (states['input_number.hp_book'].state == 6.0)
                                      return '/local/images/HP_6.jpg';
                                    else if (states['input_number.hp_book'].state == 7.0)
                                      return '/local/images/HP_7.jpg';
                                  ]]]
                                show_label: true
                                show_icon: true
                                icon: mdi:book-music-outline
                                styles:
                                  grid:
                                    - grid-template-areas: '"i" "i"'
                                    - grid-template-columns: 1fr
                                    - grid-template-rows: min-content
                                  card:
                                    - background: none
                                    - border-radius: 0
                                    - background: none
                                    - padding: 14px
                                    - '--mdc-ripple-press-opacity': 0
                                  img_cell:
                                    - height: 120px
                                    - width: 120px
                                    - border-radius: 16px
                                  icon:
                                    - height: 100%
                                    - width: 100%
                                  name:
                                    - font-size: 16px
                                    - color: var(--contrast20)
                                    - width: 100%
                                    - text-align: left
                                    - align-self: end
                                  label:
                                    - font-size: 12px
                                    - color: var(--contrast20)
                                    - opacity: 0.5
                                    - width: 100%
                                    - text-align: left
                                    - align-self: start
                                  custom_fields:
                                    image:
                                      - '--mdc-ripple-press-opacity': 0.5
                        - square: false
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: input_number.hp_book
                              name: Harry Potter
                              double_tap_action:
                                action: call-service
                                service: input_number.increment
                                service_data:
                                  entity_id: input_number.hp_book
                              template: custom_card_sensor_medium
                              variables:
                                state: |
                                  [[[ 
                                    var st = states[entity.entity_id].state;
                                    var uni = ' Book';
                                    return `
                                    ${parseFloat(st).toFixed(0)}<span style="font-size:
                                  0.5em;opacity:0.7">${uni}</span>
                                    `
                                  ]]]
                            - type: custom:button-card
                              entity: input_number.hp_cd
                              name: Harry Potter
                              double_tap_action:
                                action: call-service
                                service: input_number.increment
                                service_data:
                                  entity_id: input_number.hp_cd
                              template: custom_card_sensor_medium
                              variables:
                                state: |
                                  [[[ 
                                    var st = states[entity.entity_id].state;
                                    var uni = ' CD';
                                    return `
                                    ${parseFloat(st).toFixed(0)}<span style="font-size:
                                  0.5em;opacity:0.7">${uni}</span>
                                    `
                                  ]]]
                          columns: 1
              - type: heading
                icon: mdi:camera
                heading: BeReal
                heading_style: title
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: automation.bereal_notification
                    name: BeReal
                    template: switch_template
                    variables:
                      icon_on: mdi:camera
                      icon_off: mdi:camera-off
                      color: var(--yellow)
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: automation.bereal_notification
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: input_datetime.random_date_time
                      name: BeReal Today
                      template: custom_card_sensor_medium
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' ';
                            return `
                            ${st.split(' ')[1].slice(0,5)}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: automation.bereal_notification
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: input_number.holiday_time_difference
                      name: Time Difference
                      template: custom_card_sensor_medium
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' h';
                            return `
                            ${parseFloat(st).toFixed(0)}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: automation.bereal_notification
                        state: 'on'
                    card:
                      type: custom:button-card
                      entity: input_datetime.holiday_end
                      template: custom_card_sensor_medium
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' ';
                            var datePart = st.split(' ')[0];        // '2025-02-15'
                            var parts = datePart.split('-');        // ['2025', '02', '15']
                            var formatted = parts[2] + '.' + parts[1] + '.';
                            return `
                            ${formatted}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#anna'
                name: Anna
                icon: mdi:face-woman
                bg_opacity: 100
                hide_backdrop: true
                bg_blur: 100
                bg_color: var(--contrast1)
              - type: heading
                icon: mdi:account
                heading: Personal
                heading_style: title
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.is_alarm_on
                    name: Alarm
                    label: '[[[return states["sensor.wake_time_1"].state]]]'
                    template: nav_button_small
                    variables:
                      navigation_path: home#alarm
                      icon_on: mdi:alarm
                      icon_off: mdi:alarm-off
                      background_color_on: var(--yellow)
                      background_color_off: var(--contrast2)
                      color_on: var(--black)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: input_boolean.notifications_anna
                    icon: mdi:cellphone-message-off
                    name: My Notifications
                    template: switch_template
                    variables:
                      icon_on: mdi:cellphone-message
                      icon_off: mdi:cellphone-message-off
                      color: var(--purple)
                  - type: custom:button-card
                    entity: input_boolean.motion_lights
                    name: Motion Lights
                    template: switch_template
                    variables:
                      icon_on: mdi:lightbulb-auto-outline
                      icon_off: mdi:lightbulb-off-outline
                      color: var(--green)
                  - type: custom:button-card
                    name: Min Brightness
                    entity: input_number.al_min_brightness_anna
                    show_state: false
                    template: custom_card_number_slider
                    variables:
                      icon: mdi:brightness-5
                      label: >-
                        [[[return
                        Math.round(states["input_number.al_min_brightness_anna"].state)
                        + "/255"]]]
                      color: var(--yellow)
                columns: 2
              - type: heading
                icon: mdi:home
                heading: Home
                heading_style: title
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.vacation_mode
                    icon: mdi:weather-sunny-off
                    name: Vacation Mode
                    template: switch_template
                    variables:
                      icon_on: mdi:weather-sunny
                      icon_off: mdi:weather-sunny-off
                      color: var(--orange)
                  - type: custom:button-card
                    entity: switch.voice_assistant_mute_switch
                    icon: mdi:account-tie-voice-off
                    name: Voice Mute Switch
                    template: switch_label_template
                    label: |
                      [[[
                        if (entity.state == "on"){
                          return "Muted";
                        } else {
                          return "Off";
                        }
                      ]]]
                    variables:
                      icon_on: mdi:account-tie-voice-off
                      icon_off: mdi:account-tie-voice
                      color: var(--red)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.adguard_protection
                    name: AdGuard
                    variables:
                      icon_on: mdi:shield-check
                      icon_off: mdi:shield-off
                      color: var(--purple)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.junglemoneyguest
                    name: Guest WIFI
                    variables:
                      icon_on: mdi:wifi
                      icon_off: mdi:wifi-off
                      color: var(--blue)
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#weather'
                name: Weather
                icon: mdi:weather-partly-cloudy
                bg_opacity: 100
                hide_backdrop: true
                bg_blur: 100
                bg_color: var(--contrast1)
                button_type: name
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.weather_today
                    name: Today
                    template: switch_template
                    variables:
                      color: var(--teal)
                      icon_on: mdi:sun-clock-outline
                      icon_off: mdi:weather-sunny-off
                  - type: custom:button-card
                    entity: input_boolean.weather_week
                    name: Week
                    template: switch_template
                    variables:
                      color: var(--purple)
                      icon_off: mdi:cloud-off-outline
                      icon_on: mdi:weather-cloudy-arrow-right
                columns: 2
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.weather_today
                    state: 'on'
                card:
                  square: false
                  type: grid
                  cards:
                    - type: heading
                      icon: mdi:sun-clock
                      heading: Today
                      heading_style: title
                    - type: custom:weather-chart-card
                      entity: weather.pirateweather_berlin
                      show_main: true
                      show_temperature: true
                      show_current_condition: true
                      show_attributes: true
                      show_time: false
                      show_day: false
                      show_date: false
                      show_humidity: true
                      show_pressure: true
                      show_wind_direction: true
                      show_wind_speed: true
                      show_sun: true
                      show_feels_like: false
                      use_12hour_format: false
                      icons_size: 25
                      animated_icons: false
                      icon_style: style1
                      forecast:
                        precipitation_type: rainfall
                        labels_font_size: '11'
                        precip_bar_size: '100'
                        style: style2
                        show_wind_forecast: true
                        condition_icons: true
                        round_temp: false
                        type: hourly
                      units:
                        pressure: ''
                        speed: ''
                    - type: iframe
                      url: >-
                        https://embed.windy.com/embed2.html?lat=52.46597846204767&lon=13.42859745025635&detailLat=52.46597846204767&detailLon=13.42859745025635&width=650&height=450&zoom=9&level=surface&overlay=rain&product=ecmwf&menu=&message=&marker=&calendar=now&pressure=&type=map&location=coordinates&detail=&metricWind=default&metricTemp=default&radarRange=-1
                      aspect_ratio: 98%
                  columns: 1
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.weather_week
                    state: 'on'
                card:
                  type: heading
                  icon: mdi:cloud-arrow-right-outline
                  heading: Week
                  heading_style: title
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.weather_week
                    state: 'on'
                card:
                  type: custom:clock-weather-card
                  entity: weather.pirateweather_berlin
        column_span: 3
    type: sections
    max_columns: 3
    path: home
    icon: mdi:home-assistant
    cards: []
    dense_section_placement: false
    theme: Rounded-Bubble
  - title: Music
    header:
      card:
        type: markdown
        text_only: true
        content: |-

          {% if (states("sensor.time_of_day") == "morning") %}
            # Good Morning, {{user}}!
            {{ states("input_text.ai_morning_brief") }}
          {% elif (states("sensor.time_of_day") == "day") %}
            # Hey, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}.
          {% elif (states("sensor.time_of_day") == "evening") %}
            # Good Evening, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% elif (states("sensor.time_of_day") == "night") %}
            # Good Night, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% endif %}
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      layout: responsive
      badges_position: top
      badges_wrap: scroll
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.vacation_mode
        color: orange
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.vacation_mode
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_julians_iphone
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_julians_iphone
            state: 'off'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_anna
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_anna
            state: 'off'
          - condition: user
            users:
              - 82def695e9504f63b1eb09150073737d
        icon: mdi:cellphone-message-off
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.lights_on_count
        color: amber
        visibility:
          - condition: numeric_state
            entity: sensor.lights_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#lights
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.chores_on_count
        color: yellow
        visibility:
          - condition: numeric_state
            entity: sensor.chores_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#chores
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            {{ 100 - state_attr('sensor.dishwasher_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            mdi:dishwasher
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            mdi:dishwasher-alert
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            mdi:dishwasher
          {% else %}
            mdi:dishwasher-off
          {% endif %}    
        color: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            blue
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            green
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.dishwasher_status
        label: ''
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_dishwasher
          data: {}
        visibility:
          - condition: state
            entity: sensor.dishwasher_status
            state_not: 'Off'
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            {{ 100 - state_attr('sensor.waschmaschine_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            mdi:washing-machine
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            mdi:washing-machine-alert
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            mdi:washing-machine
          {% else %}
            mdi:washing-machine-off
          {% endif %}
        color: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            blue
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            green
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.washing_machine_status
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_laundry
          data: {}
        visibility:
          - condition: state
            entity: sensor.washing_machine_status
            state_not: 'Off'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.prusalink_progress
        icon: mdi:printer-3d
        color: orange
        visibility:
          - condition: state
            entity: sensor.prusalink
            state: printing
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#3d-printer
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: vacuum.dobby
        color: purple
        visibility:
          - condition: state
            entity: vacuum.dobby
            state_not: docked
        tap_action:
          action: navigate
          navigation_path: home#vacuum
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.fan_outlet
        color: blue
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.fan_outlet
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.desk_webcam
        color: green
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.desk_webcam
            state: 'on'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.wake_time_1
        icon: mdi:alarm
        color: yellow
        visibility:
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
              - 82def695e9504f63b1eb09150073737d
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - entity: binary_sensor.is_alarm_on
                    state: 'on'
                  - entity: sensor.time_of_day
                    state_not: day
                  - condition: state
                    entity: input_boolean.alarm_has_run
                    state: 'off'
                  - entity: alarm_control_panel.security_system
                    state_not: armed_away
                  - entity: alarm_control_panel.security_system
                    state_not: triggered
                  - condition: state
                    entity: person.julian_
                    state: home
              - condition: state
                entity: input_boolean.sound_alarm_is_running
                state: 'on'
        tap_action:
          action: navigate
          navigation_path: home#alarm
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.raspberry_pi_health_attention
        icon: mdi:minidisc
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.raspberry_pi_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sensor.junglemoneynas_volume_1_status
        icon: mdi:nas
        color: red
        visibility:
          - condition: state
            entity: sensor.junglemoneynas_volume_1_status
            state_not: normal
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#nas
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.battery_health_attention
        icon: mdi:battery-20
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.battery_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#battery
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('alarm_control_panel.security_system', 'triggered') or
                is_state('alarm_control_panel.alexa_guard_431b6', 'triggered')  %}
                  TRIGGERED
                {% elif is_state('alarm_control_panel.security_system', 'armed_away')  %}
                  Armed
                {% elif is_state('alarm_control_panel.security_system', 'armed_home') %}
                  Home
                {% elif is_state('alarm_control_panel.security_system', 'armed_night') %}
                  Night
                {% else %}
                  Arming...
                {% endif %}
        icon: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            mdi:shield-home-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            mdi:shield-lock-outline
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            mdi:shield-alert-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            mdi:shield-moon-outline
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            mdi:shield-off-outline
          {% else %}
            mdi:shield-alert-outline
          {% endif %}
        color: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            green
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            red
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            orange
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            blue
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            grey
          {% else %}
            yellow
          {% endif %}
        entity: alarm_control_panel.security_system
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: '{{ states("sensor.window_open_count") }}'
        icon: mdi:window-open-variant
        entity: group.window_sensors
        color: red
        tap_action:
          action: more-info
        visibility:
          - condition: numeric_state
            entity: sensor.window_open_count
            above: 0
      - type: custom:mushroom-template-badge
        icon: |-
          {% if is_state('lock.flat_door', 'locked') %}
            mdi:lock
          {% else %}
            mdi:lock-open
          {% endif %}
        color: |-
          {% if is_state('lock.flat_door', 'locked') %}
            green
          {% else %}
            red
          {% endif %}
        entity: lock.flat_door
        double_tap_action:
          action: call-service
          service: lock.lock
          data: {}
          target:
            entity_id: lock.flat_door
        content: ''
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.home_assistant_update
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.home_assistant_update
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
          - condition: screen
            media_query: '(min-width: 768px)'
        tap_action:
          action: navigate
          navigation_path: server#updates
      - type: custom:mushroom-template-badge
        icon: mdi:account-tie-voice
        color: white
        content: ''
        tap_action:
          action: assist
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: custom:mushroom-template-badge
        entity: person.julian_
        picture: '{{ state_attr("person.julian_","entity_picture") }}'
        content: '{{ states("sensor.julians_apple_watch_area") }}'
        label: Julian
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        icon: ''
        color: ''
        tap_action:
          action: navigate
          navigation_path: home#julian
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: vertical-stack
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:button-card
                        styles:
                          grid:
                            - grid-template-areas: '''item6 item7 item1 item2 item3 item4 item5'''
                            - grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr
                          card:
                            - padding: 5px 0px
                            - background: none
                          custom_fields:
                            item1:
                              - justify-self: center
                            item2:
                              - justify-self: center
                            item3:
                              - justify-self: center
                            item4:
                              - justify-self: center
                            item5:
                              - justify-self: center
                            item6:
                              - justify-self: center
                            item7:
                              - justify-self: center
                        custom_fields:
                          item1:
                            card:
                              type: custom:button-card
                              entity: media_player.bed_room
                              icon: mdi:bed-king-outline
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: script.play_on_repeat_on_alarm_clock
                          item2:
                            card:
                              type: custom:button-card
                              entity: media_player.office
                              icon: mdi:monitor
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: script.play_on_repeat_on_office_nest
                          item3:
                            card:
                              type: custom:button-card
                              entity: media_player.kitchen
                              icon: mdi:silverware-variant
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: script.play_on_repeat_on_kitchen_nest
                          item4:
                            card:
                              type: custom:button-card
                              entity: media_player.bathroom
                              icon: mdi:paper-roll-outline
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: script.play_on_repeat_on_bathroom_nest
                          item5:
                            card:
                              type: custom:button-card
                              entity: media_player.guest_room
                              icon: mdi:desk
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: script.play_on_repeat_on_guest_room_nest
                          item6:
                            card:
                              type: custom:button-card
                              entity: media_player.nest_party
                              icon: mdi:home-outline
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: script.play_on_repeat_on_nest_party
                          item7:
                            card:
                              type: custom:button-card
                              entity: media_player.living_room
                              icon: mdi:sofa-outline
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: script.play_on_repeat_on_living_room_nest
                grid_options:
                  columns: full
                  rows: auto
            grid_options:
              columns: full
          - type: iframe
            url: >-
              https://homeassistant.systemprintout.de/d5369777_music_assistant/ingress
            aspect_ratio: 50%
            grid_options:
              columns: full
              rows: 8
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template: custom_card_user
              - type: custom:bubble-card
                card_type: empty-column
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: custom:decluttering-card
            template: footer_template
          - type: custom:bubble-card
            card_type: separator
            name: Music
            icon: mdi:spotify
            sub_button:
              - name: Playlist
                icon: mdi:playlist-music
                state_background: false
                show_name: true
                tap_action:
                  action: navigate
                  navigation_path: '#playlist'
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 767px)'
      - type: grid
        cards:
          - type: custom:navbar-card
            desktop:
              position: left
              min_width: 768
              show_labels: true
            mobile:
              show_labels: true
            routes:
              - icon: mdi:home-outline
                icon_selected: mdi:home-assistant
                url: /dashboard-bubble/home
                label: Home
              - icon: mdi:sofa-outline
                icon_selected: mdi:sofa
                label: Rooms
                badge:
                  show: |
                    [[[ return states['light.all_lights'].state === 'on' ]]]
                  color: var(--yellow-color)
                  count: |
                    [[[ return states['sensor.lights_on_count'].state ]]]
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:sofa-outline
                    url: /dashboard-bubble/home#living-room
                    label: Living Room
                  - icon: mdi:bed-king-outline
                    url: /dashboard-bubble/home#bedroom
                    label: Bedroom
                  - icon: mdi:monitor
                    url: /dashboard-bubble/home#office
                    label: Office
                  - icon: mdi:silverware-variant
                    url: /dashboard-bubble/home#kitchen
                    label: Kitchen
                  - icon: mdi:paper-roll-outline
                    url: /dashboard-bubble/home#bathroom
                    label: Bathroom
                  - icon: mdi:desk
                    url: /dashboard-bubble/home#guest-room
                    label: Guest Room
                  - icon: mdi:door
                    url: /dashboard-bubble/home#corridor
                    label: Corridor
              - icon: mdi:music
                url: /dashboard-bubble/music
                label: Music
                badge:
                  show: >
                    [[[ return states['media_player.music'].state === 'playing'
                    ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return false;
                    else if (states['remote.harmony_hub'].state == "on") return true;
                    else return false;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:television
                url: /dashboard-bubble/home#remote
                label: TV
                badge:
                  show: >
                    [[[ return states['media_player.tv_and_ps5'].state ===
                    'playing' ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return true;
                    else if (states['remote.harmony_hub'].state == "on") return false;
                    else return true;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:shield-outline
                icon_selected: mdi:security
                url: /dashboard-bubble/security
                label: Security
                badge:
                  show: >
                    [[[ return states['binary_sensor.window_sensors'].state ===
                    'on' ]]]
                  color: var(--red-color)
                  count: |
                    [[[ return states['sensor.window_open_count'].state ]]]
              - icon: mdi:face-agent
                url: /dashboard-bubble/home#julian
                label: Julian
                hidden: |
                  [[[ return user.name != "Julian" ]]]
                badge:
                  show: >
                    [[[ return states['input_boolean.debug_rounded'].state ===
                    'on' ]]]
                  color: var(--red-color)
              - icon: mdi:face-woman
                url: /dashboard-bubble/home#anna
                label: Anna
                hidden: |
                  [[[ return user.name != "Anna" ]]]
              - icon: mdi:dots-horizontal
                label: More
                badge:
                  show: |
                    [[[
                      if (states['binary_sensor.monitored_entities'].state == "on") return true;
                      else if (states['binary_sensor.home_assistant_update'].state == "on") return true;
                      else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                      else return false;
                    ]]]
                  color: var(--red-color)
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:server-outline
                    url: /dashboard-bubble/server
                    label: Server
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                    badge:
                      show: |
                        [[[
                          if (states['binary_sensor.monitored_entities'].state == "on") return true;
                          else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                          else return false;
                        ]]]
                      color: var(--red-color)
                  - icon: mdi:cart
                    url: /dashboard-bring/home
                    label: Shopping List
                    badge:
                      show: |
                        [[[ return states['todo.shopping_list'].state > 0 ]]]
                      color: var(--red-color)
                      count: |
                        [[[ return states['todo.shopping_list'].state ]]]
                  - icon: mdi:bookshelf
                    url: /d5369777_music_assistant/ingress
                    label: Music Assistant
                  - icon: mdi:cog
                    url: /config/dashboard
                    label: Settings
                    badge:
                      show: >
                        [[[ return
                        states['binary_sensor.home_assistant_update'].state ===
                        'on' ]]]
                      color: var(--red-color)
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                  - icon: mdi:hammer
                    url: /developer-tools/yaml
                    label: Developer Tools
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
            styles: |
              .navbar {
                --navbar-primary-color: var(--green-color);
                background: var(--contrast2);
              }
          - type: heading
            icon: mdi:music
            heading: Music
            heading_style: title
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
          - type: conditional
            conditions:
              - condition: state
                entity: media_player.music
                state_not: playing
              - condition: state
                entity: media_player.music
                state_not: paused
              - condition: state
                entity: input_boolean.music_player_idle_helper
                state: 'off'
            card:
              square: false
              columns: 1
              type: grid
              cards:
                - square: false
                  columns: 2
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: media_player.music
                      icon: mdi:arrow-down
                      name: Room
                      label: Choose
                      show_label: true
                      tap_action:
                        action: none
                        haptic: success
                      template: button_template
                      variables:
                        icon2: mdi:arrow-down
                        state_on: playing
                        state_off: idle
                        background_color_off: var(--contrast2)
                        background_color_on: var(--green)
                        color_on: var(--contrast1)
                        color_off: var(--contrast20)
                    - type: custom:button-card
                      entity: media_player.nest_party
                      icon: mdi:home-variant
                      name: in all Rooms
                      label: Play
                      show_label: true
                      tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_nest_party
                        haptic: success
                      template: button_template
                      variables:
                        icon2: mdi:home-variant
                        state_on: playing
                        state_off: 'off'
                        background_color_off: var(--contrast2)
                        background_color_on: var(--purple)
                        color_on: var(--contrast1)
                        color_off: var(--contrast20)
                - square: true
                  columns: 6
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: media_player.living_room
                      icon: mdi:sofa-outline
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                      tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_living_room_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 18px
                          - background-color: var(--green)
                        icon:
                          - color: |
                              [[[
                                if (entity.state == "playing") return "var(--white)";
                                else return "var(--black)";
                              ]]]
                    - type: custom:button-card
                      entity: media_player.bed_room
                      icon: mdi:bed
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                      tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_alarm_clock
                        haptic: success
                      styles:
                        card:
                          - border-radius: 18px
                          - background-color: var(--blue)
                        icon:
                          - color: |
                              [[[
                                if (entity.state == "playing") return "var(--white)";
                                else return "var(--black)";
                              ]]]
                    - type: custom:button-card
                      entity: media_player.office
                      icon: mdi:monitor
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                      tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_office_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 18px
                          - background-color: var(--red)
                        icon:
                          - color: |
                              [[[
                                if (entity.state == "playing") return "var(--white)";
                                else return "var(--black)";
                              ]]]
                    - type: custom:button-card
                      entity: media_player.kitchen
                      icon: mdi:silverware-variant
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                      tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_kitchen_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 18px
                          - background-color: var(--yellow)
                        icon:
                          - color: |
                              [[[
                                if (entity.state == "playing") return "var(--white)";
                                else return "var(--black)";
                              ]]]
                    - type: custom:button-card
                      entity: media_player.bathroom
                      icon: mdi:paper-roll-outline
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                      tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_bathroom_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 18px
                          - background-color: var(--purple)
                        icon:
                          - color: |
                              [[[
                                if (entity.state == "playing") return "var(--white)";
                                else return "var(--black)";
                              ]]]
                    - type: custom:button-card
                      entity: media_player.guest_room
                      icon: mdi:desk
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                      tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_guest_room_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 18px
                          - background-color: var(--orange)
                        icon:
                          - color: |
                              [[[
                                if (entity.state == "playing") return "var(--white)";
                                else return "var(--black)";
                              ]]]
          - type: conditional
            conditions:
              - condition: state
                entity: input_boolean.music_player_idle_helper
                state: 'on'
              - condition: state
                entity: media_player.music
                state_not: 'off'
              - condition: state
                entity: media_player.music
                state_not: standby
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
            card:
              type: vertical-stack
              cards:
                - square: true
                  columns: 7
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: media_player.nest_party
                      icon: mdi:home-outline
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                        - value: paused
                          icon: mdi:pause-circle-outline
                      tap_action:
                        action: call-service
                        service: music_assistant.transfer_queue
                        data:
                          source_player: |
                            [[[
                              if (states['sensor.music_room'].state == "Living Room") return "media_player.living_room_nest_2";
                              else if (states['sensor.music_room'].state == "Kitchen") return "media_player.kitchen_nest_2";
                              else if (states['sensor.music_room'].state == "Bathroom") return "media_player.bathroom_nest_2";
                              else if (states['sensor.music_room'].state == "Office") return "media_player.office_nest_2";
                              else if (states['sensor.music_room'].state == "Bedroom") return "media_player.alarm_clock_2";
                              else if (states['sensor.music_room'].state == "Guest Room") return "media_player.guest_room_nest_2";
                              else if (states['sensor.music_room'].state == "Houseparty") return "media_player.nest_party";
                              else return "";
                            ]]]
                        target:
                          entity_id: media_player.nest_party
                        haptic: success
                      double_tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_nest_party
                        haptic: success
                      styles:
                        card:
                          - border-radius: 12px
                          - background-color: var(--teal)
                        icon:
                          - color: var(--black)
                    - type: custom:button-card
                      entity: media_player.living_room
                      icon: mdi:sofa-outline
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                        - value: paused
                          icon: mdi:pause-circle-outline
                      tap_action:
                        action: call-service
                        service: music_assistant.transfer_queue
                        data:
                          source_player: |
                            [[[
                              if (states['sensor.music_room'].state == "Living Room") return "media_player.living_room_nest_2";
                              else if (states['sensor.music_room'].state == "Kitchen") return "media_player.kitchen_nest_2";
                              else if (states['sensor.music_room'].state == "Bathroom") return "media_player.bathroom_nest_2";
                              else if (states['sensor.music_room'].state == "Office") return "media_player.office_nest_2";
                              else if (states['sensor.music_room'].state == "Bedroom") return "media_player.alarm_clock_2";
                              else if (states['sensor.music_room'].state == "Guest Room") return "media_player.guest_room_nest_2";
                              else if (states['sensor.music_room'].state == "Houseparty") return "media_player.nest_party";
                              else return "";
                            ]]]
                        target:
                          entity_id: media_player.living_room_nest_2
                        haptic: success
                      double_tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_living_room_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 12px
                          - background-color: var(--green)
                        icon:
                          - color: var(--black)
                    - type: custom:button-card
                      entity: media_player.bed_room
                      icon: mdi:bed
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                        - value: paused
                          icon: mdi:pause-circle-outline
                      tap_action:
                        action: call-service
                        service: music_assistant.transfer_queue
                        data:
                          source_player: |
                            [[[
                              if (states['sensor.music_room'].state == "Living Room") return "media_player.living_room_nest_2";
                              else if (states['sensor.music_room'].state == "Kitchen") return "media_player.kitchen_nest_2";
                              else if (states['sensor.music_room'].state == "Bathroom") return "media_player.bathroom_nest_2";
                              else if (states['sensor.music_room'].state == "Office") return "media_player.office_nest_2";
                              else if (states['sensor.music_room'].state == "Bedroom") return "media_player.alarm_clock_2";
                              else if (states['sensor.music_room'].state == "Guest Room") return "media_player.guest_room_nest_2";
                              else if (states['sensor.music_room'].state == "Houseparty") return "media_player.nest_party";
                              else return "";
                            ]]]
                        target:
                          entity_id: media_player.alarm_clock_2
                        haptic: success
                      double_tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_alarm_clock
                        haptic: success
                      styles:
                        card:
                          - border-radius: 12px
                          - background-color: var(--blue)
                        icon:
                          - color: var(--black)
                    - type: custom:button-card
                      entity: media_player.office
                      icon: mdi:monitor
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                        - value: paused
                          icon: mdi:pause-circle-outline
                      tap_action:
                        action: call-service
                        service: music_assistant.transfer_queue
                        data:
                          source_player: |
                            [[[
                              if (states['sensor.music_room'].state == "Living Room") return "media_player.living_room_nest_2";
                              else if (states['sensor.music_room'].state == "Kitchen") return "media_player.kitchen_nest_2";
                              else if (states['sensor.music_room'].state == "Bathroom") return "media_player.bathroom_nest_2";
                              else if (states['sensor.music_room'].state == "Office") return "media_player.office_nest_2";
                              else if (states['sensor.music_room'].state == "Bedroom") return "media_player.alarm_clock_2";
                              else if (states['sensor.music_room'].state == "Guest Room") return "media_player.guest_room_nest_2";
                              else if (states['sensor.music_room'].state == "Houseparty") return "media_player.nest_party";
                              else return "";
                            ]]]
                        target:
                          entity_id: media_player.office_nest_2
                        haptic: success
                      double_tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_office_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 12px
                          - background-color: var(--red)
                        icon:
                          - color: var(--black)
                    - type: custom:button-card
                      entity: media_player.kitchen
                      icon: mdi:silverware-variant
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                        - value: paused
                          icon: mdi:pause-circle-outline
                      tap_action:
                        action: call-service
                        service: music_assistant.transfer_queue
                        data:
                          source_player: |
                            [[[
                              if (states['sensor.music_room'].state == "Living Room") return "media_player.living_room_nest_2";
                              else if (states['sensor.music_room'].state == "Kitchen") return "media_player.kitchen_nest_2";
                              else if (states['sensor.music_room'].state == "Bathroom") return "media_player.bathroom_nest_2";
                              else if (states['sensor.music_room'].state == "Office") return "media_player.office_nest_2";
                              else if (states['sensor.music_room'].state == "Bedroom") return "media_player.alarm_clock_2";
                              else if (states['sensor.music_room'].state == "Guest Room") return "media_player.guest_room_nest_2";
                              else if (states['sensor.music_room'].state == "Houseparty") return "media_player.nest_party";
                              else return "";
                            ]]]
                        target:
                          entity_id: media_player.kitchen_nest_2
                        haptic: success
                      double_tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_kitchen_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 12px
                          - background-color: var(--yellow)
                        icon:
                          - color: var(--black)
                    - type: custom:button-card
                      entity: media_player.bathroom
                      icon: mdi:paper-roll-outline
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                        - value: paused
                          icon: mdi:pause-circle-outline
                      tap_action:
                        action: call-service
                        service: music_assistant.transfer_queue
                        data:
                          source_player: |
                            [[[
                              if (states['sensor.music_room'].state == "Living Room") return "media_player.living_room_nest_2";
                              else if (states['sensor.music_room'].state == "Kitchen") return "media_player.kitchen_nest_2";
                              else if (states['sensor.music_room'].state == "Bathroom") return "media_player.bathroom_nest_2";
                              else if (states['sensor.music_room'].state == "Office") return "media_player.office_nest_2";
                              else if (states['sensor.music_room'].state == "Bedroom") return "media_player.alarm_clock_2";
                              else if (states['sensor.music_room'].state == "Guest Room") return "media_player.guest_room_nest_2";
                              else if (states['sensor.music_room'].state == "Houseparty") return "media_player.nest_party";
                              else return "";
                            ]]]
                        target:
                          entity_id: media_player.bathroom_nest_2
                        haptic: success
                      double_tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_bathroom_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 12px
                          - background-color: var(--purple)
                        icon:
                          - color: var(--black)
                    - type: custom:button-card
                      entity: media_player.guest_room
                      icon: mdi:desk
                      show_name: false
                      aspect_ratio: 1/1
                      state:
                        - value: playing
                          icon: mdi:play-circle-outline
                        - value: paused
                          icon: mdi:pause-circle-outline
                      tap_action:
                        action: call-service
                        service: music_assistant.transfer_queue
                        data:
                          source_player: |
                            [[[
                              if (states['sensor.music_room'].state == "Living Room") return "media_player.living_room_nest_2";
                              else if (states['sensor.music_room'].state == "Kitchen") return "media_player.kitchen_nest_2";
                              else if (states['sensor.music_room'].state == "Bathroom") return "media_player.bathroom_nest_2";
                              else if (states['sensor.music_room'].state == "Office") return "media_player.office_nest_2";
                              else if (states['sensor.music_room'].state == "Bedroom") return "media_player.alarm_clock_2";
                              else if (states['sensor.music_room'].state == "Guest Room") return "media_player.guest_room_nest_2";
                              else if (states['sensor.music_room'].state == "Houseparty") return "media_player.nest_party";
                              else return "";
                            ]]]
                        target:
                          entity_id: media_player.guest_room_nest_2
                        haptic: success
                      double_tap_action:
                        action: call-service
                        service: script.play_on_repeat_on_guest_room_nest
                        haptic: success
                      styles:
                        card:
                          - border-radius: 12px
                          - background-color: var(--orange)
                        icon:
                          - color: var(--black)
                - type: custom:swipe-card
                  card_width: 100%
                  parameters:
                    centeredSlides: true
                    slidesPerView: auto
                    spaceBetween: 16
                    initialSlide: 0
                  cards:
                    - type: custom:button-card
                      entity: media_player.music
                      template: media_player
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.music_assistant_playing_devices
                          above: 1
                        - condition: state
                          entity: media_player.nest_party
                          state_not: playing
                        - condition: state
                          entity: sensor.music_room
                          state_not: Living Room
                        - condition: or
                          conditions:
                            - condition: state
                              entity: media_player.living_room_nest_2
                              state: paused
                            - condition: state
                              entity: media_player.living_room_nest_2
                              state: playing
                      card:
                        type: custom:button-card
                        entity: media_player.living_room_nest_2
                        template: media_player
                        variables:
                          room: Living Room
                          icon_1: <ha-icon icon="mdi:arrow-down"></ha-icon>
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.music_assistant_playing_devices
                          above: 1
                        - condition: state
                          entity: media_player.nest_party
                          state_not: playing
                        - condition: state
                          entity: sensor.music_room
                          state_not: Kitchen
                        - condition: or
                          conditions:
                            - condition: state
                              entity: media_player.kitchen_nest_2
                              state: paused
                            - condition: state
                              entity: media_player.kitchen_nest_2
                              state: playing
                      card:
                        type: custom:button-card
                        entity: media_player.kitchen_nest_2
                        template: media_player
                        variables:
                          room: Kitchen
                          icon_1: <ha-icon icon="mdi:arrow-down"></ha-icon>
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.music_assistant_playing_devices
                          above: 1
                        - condition: state
                          entity: media_player.nest_party
                          state_not: playing
                        - condition: state
                          entity: sensor.music_room
                          state_not: Bathroom
                        - condition: or
                          conditions:
                            - condition: state
                              entity: media_player.bathroom_nest_2
                              state: paused
                            - condition: state
                              entity: media_player.bathroom_nest_2
                              state: playing
                      card:
                        type: custom:button-card
                        entity: media_player.bathroom_nest_2
                        template: media_player
                        variables:
                          room: Bathroom
                          icon_1: <ha-icon icon="mdi:arrow-down"></ha-icon>
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.music_assistant_playing_devices
                          above: 1
                        - condition: state
                          entity: media_player.nest_party
                          state_not: playing
                        - condition: state
                          entity: sensor.music_room
                          state_not: Office
                        - condition: or
                          conditions:
                            - condition: state
                              entity: media_player.office_nest_2
                              state: paused
                            - condition: state
                              entity: media_player.office_nest_2
                              state: playing
                      card:
                        type: custom:button-card
                        entity: media_player.office_nest_2
                        template: media_player
                        variables:
                          room: Office
                          icon_1: <ha-icon icon="mdi:arrow-down"></ha-icon>
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.music_assistant_playing_devices
                          above: 1
                        - condition: state
                          entity: media_player.nest_party
                          state_not: playing
                        - condition: state
                          entity: sensor.music_room
                          state_not: Bedroom
                        - condition: or
                          conditions:
                            - condition: state
                              entity: media_player.bedroom_nest_music_assistant
                              state: paused
                            - condition: state
                              entity: media_player.bedroom_nest_music_assistant
                              state: playing
                      card:
                        type: custom:button-card
                        entity: media_player.alarm_clock_2
                        template: media_player
                        variables:
                          room: Bedroom
                          icon_1: <ha-icon icon="mdi:arrow-down"></ha-icon>
                    - type: conditional
                      conditions:
                        - condition: numeric_state
                          entity: sensor.music_assistant_playing_devices
                          above: 1
                        - condition: state
                          entity: media_player.nest_party
                          state_not: playing
                        - condition: state
                          entity: sensor.music_room
                          state_not: Guest Room
                        - condition: or
                          conditions:
                            - condition: state
                              entity: media_player.guest_room_nest_2
                              state: paused
                            - condition: state
                              entity: media_player.guest_room_nest_2
                              state: playing
                      card:
                        type: custom:button-card
                        entity: media_player.guest_room_nest_2
                        template: media_player
                        variables:
                          room: Guest Room
                          icon_1: <ha-icon icon="mdi:arrow-down"></ha-icon>
                - type: conditional
                  conditions:
                    - condition: state
                      entity: media_player.living_room_nest_2
                      state_not: idle
                    - condition: state
                      entity: media_player.living_room_nest_2
                      state_not: 'off'
                  card:
                    type: custom:button-card
                    name: Living Room
                    entity: media_player.living_room_nest_2
                    template: volume_slider_small
                - type: conditional
                  conditions:
                    - condition: state
                      entity: media_player.kitchen_nest_2
                      state_not: idle
                    - condition: state
                      entity: media_player.kitchen_nest_2
                      state_not: 'off'
                  card:
                    type: custom:button-card
                    name: Kitchen
                    entity: media_player.kitchen_nest_2
                    template: volume_slider_small
                - type: conditional
                  conditions:
                    - condition: state
                      entity: media_player.bathroom_nest_2
                      state_not: idle
                    - condition: state
                      entity: media_player.bathroom_nest_2
                      state_not: 'off'
                  card:
                    type: custom:button-card
                    name: Bathroom
                    entity: media_player.bathroom_nest_2
                    template: volume_slider_small
                - type: conditional
                  conditions:
                    - condition: state
                      entity: media_player.office_nest_2
                      state_not: idle
                    - condition: state
                      entity: media_player.office_nest_2
                      state_not: 'off'
                  card:
                    type: custom:button-card
                    name: Office
                    entity: media_player.office_nest_2
                    template: volume_slider_small
                - type: conditional
                  conditions:
                    - condition: state
                      entity: media_player.bedroom_nest_music_assistant
                      state_not: idle
                    - condition: state
                      entity: media_player.bedroom_nest_music_assistant
                      state_not: 'off'
                  card:
                    type: custom:button-card
                    name: Bedroom
                    entity: media_player.alarm_clock_2
                    template: volume_slider_small
                - type: conditional
                  conditions:
                    - condition: state
                      entity: media_player.guest_room_nest_2
                      state_not: idle
                    - condition: state
                      entity: media_player.guest_room_nest_2
                      state_not: 'off'
                  card:
                    type: custom:button-card
                    name: Guest Room
                    entity: media_player.guest_room_nest_2
                    template: volume_slider_small
          - type: vertical-stack
            cards:
              - type: conditional
                conditions:
                  - condition: state
                    entity: media_player.living_room_nest_2
                    state_not: idle
                  - condition: state
                    entity: media_player.living_room_nest_2
                    state_not: 'off'
                card:
                  type: custom:button-card
                  name: Living Room
                  entity: media_player.living_room_nest_2
                  template: volume_slider_small
              - type: conditional
                conditions:
                  - condition: state
                    entity: media_player.kitchen_nest_2
                    state_not: idle
                  - condition: state
                    entity: media_player.kitchen_nest_2
                    state_not: 'off'
                card:
                  type: custom:button-card
                  name: Kitchen
                  entity: media_player.kitchen_nest_2
                  template: volume_slider_small
              - type: conditional
                conditions:
                  - condition: state
                    entity: media_player.bathroom_nest_2
                    state_not: idle
                  - condition: state
                    entity: media_player.bathroom_nest_2
                    state_not: 'off'
                card:
                  type: custom:button-card
                  name: Bathroom
                  entity: media_player.bathroom_nest_2
                  template: volume_slider_small
              - type: conditional
                conditions:
                  - condition: state
                    entity: media_player.office_nest_2
                    state_not: idle
                  - condition: state
                    entity: media_player.office_nest_2
                    state_not: 'off'
                card:
                  type: custom:button-card
                  name: Office
                  entity: media_player.office_nest_2
                  template: volume_slider_small
              - type: conditional
                conditions:
                  - condition: state
                    entity: media_player.bedroom_nest_music_assistant
                    state_not: idle
                  - condition: state
                    entity: media_player.bedroom_nest_music_assistant
                    state_not: 'off'
                card:
                  type: custom:button-card
                  name: Bedroom
                  entity: media_player.alarm_clock_2
                  template: volume_slider_small
              - type: conditional
                conditions:
                  - condition: state
                    entity: media_player.guest_room_nest_2
                    state_not: idle
                  - condition: state
                    entity: media_player.guest_room_nest_2
                    state_not: 'off'
                card:
                  type: custom:button-card
                  name: Guest Room
                  entity: media_player.guest_room_nest_2
                  template: volume_slider_small
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
          - type: heading
            icon: mdi:playlist-music
            heading: Playlist
            heading_style: title
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
          - square: true
            type: grid
            cards:
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/on_repeat.jpg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:37i9dQZF1EpoGwnAPpW3Ia
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/blend.jpg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:7JuH4HkZEeTbWfym8vFLtx
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/woman_only.png
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:3wjUzIssRvDRshe4r8DQGE
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/jazz_rap.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:37i9dQZF1DX8Kgdykz6OKj
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/rinradio.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:37i9dQZF1E4FFABKdvHjm2
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/thisispaula.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:37i9dQZF1DZ06evO28jAMG
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/baeworld.jpg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:2nUgo1WJ6Q1I0ba9IYVplK
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/thisisapsilon.jpg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:37i9dQZF1DZ06evO3YH73D
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/rap_uk.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:37i9dQZF1DX6PKX5dyBKeq
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/country_boy_swag.jpg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:5dJC924Sz4VDvNkb50Pkfc
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/africaradio.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:37i9dQZF1E8IWwJIDNbrmu
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/travisradio.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:37i9dQZF1E4DJxvMlYoeHG
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/2000hiphop.jpg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:0VmmZTMTHafp1zdyHcBmsX
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/theoc.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:3EZMkP6Pisa70eVND6Ui8q
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/90kidz.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:5JQCy0hazicYyv6oHm9KbU
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
              - type: custom:button-card
                name: Playlist
                show_entity_picture: true
                entity_picture: /local/images/hipster.jpeg
                show_name: false
                show_state: false
                aspect_ratio: 1/1
                tap_action:
                  action: call-service
                  service: script.set_playlist_and_play
                  data:
                    playlist: spotify:playlist:3vxotOnOGDlZXyzJPLFnm2
                styles:
                  card:
                    - border-radius: 20px
                    - padding: 0
                    - box-shadow: none
                  entity_picture:
                    - object-fit: cover
                  img_cell:
                    - height: 100%
                    - width: 100%
                    - border-radius: 20px
                  icon:
                    - height: 100%
                    - width: 100%
            columns: 4
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#playlist'
                button_type: name
                name: Playlist
                icon: mdi:playlist-music
              - square: true
                type: grid
                cards:
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/on_repeat.jpg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:37i9dQZF1EpoGwnAPpW3Ia
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/blend.jpg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:7JuH4HkZEeTbWfym8vFLtx
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/woman_only.png
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:3wjUzIssRvDRshe4r8DQGE
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/jazz_rap.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:37i9dQZF1DX8Kgdykz6OKj
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/rinradio.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:37i9dQZF1E4FFABKdvHjm2
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/thisispaula.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:37i9dQZF1DZ06evO28jAMG
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/baeworld.jpg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:2nUgo1WJ6Q1I0ba9IYVplK
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/thisisapsilon.jpg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:37i9dQZF1DZ06evO3YH73D
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/rap_uk.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:37i9dQZF1DX6PKX5dyBKeq
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/country_boy_swag.jpg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:5dJC924Sz4VDvNkb50Pkfc
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/africaradio.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:37i9dQZF1E8IWwJIDNbrmu
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/travisradio.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:37i9dQZF1E4DJxvMlYoeHG
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/2000hiphop.jpg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:0VmmZTMTHafp1zdyHcBmsX
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/theoc.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:3EZMkP6Pisa70eVND6Ui8q
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/90kidz.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:5JQCy0hazicYyv6oHm9KbU
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                  - type: custom:button-card
                    name: Playlist
                    show_entity_picture: true
                    entity_picture: /local/images/hipster.jpeg
                    show_name: false
                    show_state: false
                    aspect_ratio: 1/1
                    tap_action:
                      action: call-service
                      service: script.set_playlist_and_play
                      data:
                        playlist: spotify:playlist:3vxotOnOGDlZXyzJPLFnm2
                    styles:
                      card:
                        - border-radius: 20px
                        - padding: 0
                        - box-shadow: none
                      entity_picture:
                        - object-fit: cover
                      img_cell:
                        - height: 100%
                        - width: 100%
                        - border-radius: 20px
                      icon:
                        - height: 100%
                        - width: 100%
                columns: 3
        column_span: 3
    type: sections
    max_columns: 3
    path: music
    icon: mdi:music
    cards: []
    dense_section_placement: false
    theme: Rounded-Bubble
  - title: Security
    header:
      card:
        type: markdown
        text_only: true
        content: |-

          {% if (states("sensor.time_of_day") == "morning") %}
            # Good Morning, {{user}}!
            {{ states("input_text.ai_morning_brief") }}
          {% elif (states("sensor.time_of_day") == "day") %}
            # Hey, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}.
          {% elif (states("sensor.time_of_day") == "evening") %}
            # Good Evening, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% elif (states("sensor.time_of_day") == "night") %}
            # Good Night, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% endif %}
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      layout: responsive
      badges_position: top
      badges_wrap: scroll
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.vacation_mode
        color: orange
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.vacation_mode
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_julians_iphone
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_julians_iphone
            state: 'off'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_anna
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_anna
            state: 'off'
          - condition: user
            users:
              - 82def695e9504f63b1eb09150073737d
        icon: mdi:cellphone-message-off
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.lights_on_count
        color: amber
        visibility:
          - condition: numeric_state
            entity: sensor.lights_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#lights
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.chores_on_count
        color: yellow
        visibility:
          - condition: numeric_state
            entity: sensor.chores_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#chores
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            {{ 100 - state_attr('sensor.dishwasher_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            mdi:dishwasher
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            mdi:dishwasher-alert
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            mdi:dishwasher
          {% else %}
            mdi:dishwasher-off
          {% endif %}    
        color: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            blue
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            green
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.dishwasher_status
        label: ''
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_dishwasher
          data: {}
        visibility:
          - condition: state
            entity: sensor.dishwasher_status
            state_not: 'Off'
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            {{ 100 - state_attr('sensor.waschmaschine_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            mdi:washing-machine
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            mdi:washing-machine-alert
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            mdi:washing-machine
          {% else %}
            mdi:washing-machine-off
          {% endif %}
        color: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            blue
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            green
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.washing_machine_status
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_laundry
          data: {}
        visibility:
          - condition: state
            entity: sensor.washing_machine_status
            state_not: 'Off'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.prusalink_progress
        icon: mdi:printer-3d
        color: orange
        visibility:
          - condition: state
            entity: sensor.prusalink
            state: printing
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#3d-printer
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: vacuum.dobby
        color: purple
        visibility:
          - condition: state
            entity: vacuum.dobby
            state_not: docked
        tap_action:
          action: navigate
          navigation_path: home#vacuum
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.fan_outlet
        color: blue
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.fan_outlet
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.desk_webcam
        color: green
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.desk_webcam
            state: 'on'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.wake_time_1
        icon: mdi:alarm
        color: yellow
        visibility:
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
              - 82def695e9504f63b1eb09150073737d
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - entity: binary_sensor.is_alarm_on
                    state: 'on'
                  - entity: sensor.time_of_day
                    state_not: day
                  - condition: state
                    entity: input_boolean.alarm_has_run
                    state: 'off'
                  - entity: alarm_control_panel.security_system
                    state_not: armed_away
                  - entity: alarm_control_panel.security_system
                    state_not: triggered
                  - condition: state
                    entity: person.julian_
                    state: home
              - condition: state
                entity: input_boolean.sound_alarm_is_running
                state: 'on'
        tap_action:
          action: navigate
          navigation_path: home#alarm
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.raspberry_pi_health_attention
        icon: mdi:minidisc
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.raspberry_pi_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sensor.junglemoneynas_volume_1_status
        icon: mdi:nas
        color: red
        visibility:
          - condition: state
            entity: sensor.junglemoneynas_volume_1_status
            state_not: normal
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#nas
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.battery_health_attention
        icon: mdi:battery-20
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.battery_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#battery
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('alarm_control_panel.security_system', 'triggered') or
                is_state('alarm_control_panel.alexa_guard_431b6', 'triggered')  %}
                  TRIGGERED
                {% elif is_state('alarm_control_panel.security_system', 'armed_away')  %}
                  Armed
                {% elif is_state('alarm_control_panel.security_system', 'armed_home') %}
                  Home
                {% elif is_state('alarm_control_panel.security_system', 'armed_night') %}
                  Night
                {% else %}
                  Arming...
                {% endif %}
        icon: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            mdi:shield-home-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            mdi:shield-lock-outline
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            mdi:shield-alert-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            mdi:shield-moon-outline
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            mdi:shield-off-outline
          {% else %}
            mdi:shield-alert-outline
          {% endif %}
        color: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            green
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            red
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            orange
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            blue
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            grey
          {% else %}
            yellow
          {% endif %}
        entity: alarm_control_panel.security_system
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: '{{ states("sensor.window_open_count") }}'
        icon: mdi:window-open-variant
        entity: group.window_sensors
        color: red
        tap_action:
          action: more-info
        visibility:
          - condition: numeric_state
            entity: sensor.window_open_count
            above: 0
      - type: custom:mushroom-template-badge
        icon: |-
          {% if is_state('lock.flat_door', 'locked') %}
            mdi:lock
          {% else %}
            mdi:lock-open
          {% endif %}
        color: |-
          {% if is_state('lock.flat_door', 'locked') %}
            green
          {% else %}
            red
          {% endif %}
        entity: lock.flat_door
        double_tap_action:
          action: call-service
          service: lock.lock
          data: {}
          target:
            entity_id: lock.flat_door
        content: ''
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.home_assistant_update
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.home_assistant_update
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
          - condition: screen
            media_query: '(min-width: 768px)'
        tap_action:
          action: navigate
          navigation_path: server#updates
      - type: custom:mushroom-template-badge
        icon: mdi:account-tie-voice
        color: white
        content: ''
        tap_action:
          action: assist
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: custom:mushroom-template-badge
        entity: person.julian_
        picture: '{{ state_attr("person.julian_","entity_picture") }}'
        content: '{{ states("sensor.julians_apple_watch_area") }}'
        label: Julian
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        icon: ''
        color: ''
        tap_action:
          action: navigate
          navigation_path: home#julian
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: vertical-stack
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:button-card
                        styles:
                          grid:
                            - grid-template-areas: >-
                                'item6 item7 item8 item1 item2 item3 item4
                                item5'
                            - grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr
                          card:
                            - padding: 5px 0px
                            - background: none
                          custom_fields:
                            item1:
                              - justify-self: center
                            item2:
                              - justify-self: center
                            item3:
                              - justify-self: center
                            item4:
                              - justify-self: center
                            item5:
                              - justify-self: center
                            item6:
                              - justify-self: center
                            item7:
                              - justify-self: center
                            item8:
                              - justify-self: center
                        custom_fields:
                          item1:
                            card:
                              type: custom:button-card
                              entity: person.julian_
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: input_boolean.toggle
                                target:
                                  entity_id: input_boolean.julian_present
                          item2:
                            card:
                              type: custom:button-card
                              entity: person.anna
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: input_boolean.toggle
                                target:
                                  entity_id: input_boolean.anna_present
                          item3:
                            card:
                              type: custom:button-card
                              entity: person.dog
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: input_boolean.toggle
                                target:
                                  entity_id: input_boolean.dog_present
                          item4:
                            card:
                              type: custom:button-card
                              entity: person.dog_simone
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: input_boolean.toggle
                                target:
                                  entity_id: input_boolean.dog_simone_present
                          item5:
                            card:
                              type: custom:button-card
                              entity: person.guest
                              show_label: false
                              show_state: true
                              show_entity_picture: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: perform-action
                                perform_action: input_boolean.toggle
                                target:
                                  entity_id: input_boolean.guest_present
                          item6:
                            card:
                              type: custom:button-card
                              entity: zone.home
                              show_label: false
                              show_state: true
                              state:
                                - value: '0'
                                  icon: mdi:home-outline
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                  - color: |
                                      [[[
                                        if (states['zone.home'].state == "0") return "var(--contrast10)";
                                        else return "var(--purple)";
                                      ]]]
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                          item7:
                            card:
                              type: custom:button-card
                              entity: binary_sensor.anyone_home
                              name: Anyone
                              show_label: false
                              show_state: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                  - color: |
                                      [[[
                                        if (states['binary_sensor.anyone_home'].state == "on") return "var(--blue)";
                                        else return "var(--contrast10)";
                                      ]]]
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                          item8:
                            card:
                              type: custom:button-card
                              entity: binary_sensor.dog_home
                              name: Dogs
                              show_label: false
                              show_state: true
                              styles:
                                card:
                                  - border-radius: 0px
                                  - box-shadow: none
                                  - padding-right: 5px
                                  - background: none
                                grid:
                                  - grid-template-areas: '''i n'' ''i s'''
                                  - grid-template-columns: min-content
                                  - column-gap: 10px
                                entity_picture:
                                  - border-radius: 100%
                                icon:
                                  - width: 20px
                                  - color: |
                                      [[[
                                        if (states['binary_sensor.dog_home'].state == "on") return "var(--green)";
                                        else return "var(--contrast10)";
                                      ]]]
                                img_cell:
                                  - width: 20px
                                name:
                                  - justify-self: start
                                  - font-size: 10px
                                  - font-weight: 500
                                  - color: var(--contrast14)
                                state:
                                  - justify-self: start
                                  - font-size: 15px
                                  - font-weight: 700
                              tap_action:
                                action: more-info
                grid_options:
                  columns: full
                  rows: auto
            grid_options:
              columns: full
          - type: vertical-stack
            cards:
              - type: heading
                icon: mdi:cctv
                heading: Cameras
                heading_style: title
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: switch.security_cameras
                    color: red
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: switch.camera_corridor_outlet
                    icon: mdi:door
                    color: green
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: switch.camera_living_room
                    icon: mdi:sofa-outline
                    color: green
                    tap_action:
                      action: toggle
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: switch.camera_office_outlet
                    icon: mdi:monitor
                    color: green
                    tap_action:
                      action: toggle
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
              - condition: state
                entity: switch.security_cameras
                state: 'on'
              - condition: state
                entity: input_boolean.vacation_mode
                state: 'off'
            grid_options:
              columns: full
          - square: false
            type: grid
            cards:
              - show_state: false
                show_name: false
                camera_view: live
                fit_mode: cover
                type: picture-entity
                camera_image: camera.192_168_178_78
                entity: camera.192_168_178_78
              - show_state: false
                show_name: false
                camera_view: live
                fit_mode: cover
                type: picture-entity
                camera_image: camera.192_168_178_125
                entity: camera.192_168_178_125
              - show_state: false
                show_name: false
                camera_view: live
                fit_mode: cover
                type: picture-entity
                camera_image: camera.192_168_178_77
                entity: camera.192_168_178_77
            columns: 3
            grid_options:
              columns: full
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
              - condition: state
                entity: switch.security_cameras
                state: 'on'
              - condition: state
                entity: input_boolean.vacation_mode
                state: 'off'
          - type: vertical-stack
            cards:
              - type: heading
                heading: Map
                heading_style: title
                icon: mdi:map-marker-account
                badges:
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.julian_
                    icon: mdi:face-agent
                    color: green
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.anna
                    icon: mdi:face-woman
                    color: purple
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.dog
                    icon: mdi:dog
                    color: brown
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.dog_simone
                    icon: mdi:dog-side
                    color: white
                    tap_action:
                      action: more-info
                  - type: entity
                    show_state: false
                    show_icon: true
                    entity: person.guest
                    icon: mdi:account-group
                    color: orange
                    tap_action:
                      action: more-info
            grid_options:
              columns: full
          - type: map
            entities:
              - entity: person.julian_
              - entity: person.dog
              - entity: zone.home
            theme_mode: auto
            hours_to_show: 0
          - type: vertical-stack
            cards:
              - type: heading
                heading: People
                heading_style: title
                icon: mdi:account
                badges: []
                grid_options:
                  columns: 12
                  rows: 1
                tap_action:
                  action: navigate
                  navigation_path: '#user'
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    name: Julian
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.julian_
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 50%
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - box-shadow: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - box-shadow: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Julian
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.julian_'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - opacity: '0.7'
                              - box-shadow: none
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.julians_iphone_12_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.julians_iphone_12_battery_level') | float > 10  else 'var(--red)' }};
                                    --color: {{ 'var(--contrast20)' if states('sensor.julians_iphone_12_battery_level') | float > 10  else 'var(--black)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                  - type: custom:button-card
                    name: Anna
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.anna
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Anna
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.anna
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.anna'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - box-shadow: none
                              - opacity: '0.7'
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.annas_iphone_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --color: {{ 'var(--contrast20)' if states('sensor.annas_iphone_battery_level') | float > 10  else 'var(--black)' }};
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.annas_iphone_battery_level') | float > 10  else 'var(--red)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                  - type: custom:button-card
                    name: Valentin
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.dog
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Valentin
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.dog
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.dog'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - opacity: '0.7'
                              - box-shadow: none
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.valentin_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --color: {{ 'var(--contrast20)' if states('sensor.valentin_battery_level') | float > 10  else 'var(--black)' }};
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.valentin_battery_level') | float > 10  else 'var(--red)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                  - type: custom:button-card
                    name: Simone
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.dog_simone
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Simone
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.dog_simone
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.dog_simone'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - opacity: '0.7'
                              - box-shadow: none
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: input_boolean.dog_simone_present
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('input_boolean.dog_simone_present','on') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('input_boolean.dog_simone_present','on') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                  - type: custom:button-card
                    name: Simone
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.guest
                    tap_action:
                      action: more-info
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 10px 10px 0px
                      grid:
                        - grid-template-areas: '"icon name btn" "icon state btn"'
                        - grid-template-columns: 60px 1fr min-content
                        - grid-template-rows: min-content
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 8px 10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 40px
                        - height: 40px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                      icon:
                        - width: 50px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 0
                          - margin-top: '-5px'
                        btn:
                          - align-self: end
                          - justify-self: end
                        icon:
                          - align-self: start
                          - justify-self: start
                        badge:
                          - position: absolute
                          - left: 38px
                          - top: 5px
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Guest
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 14px
                              - font-weight: 600
                              - background: none
                              - box-shadow: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.guest
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.guest'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 12px
                              - background: none
                              - opacity: '0.7'
                              - box-shadow: none
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: input_boolean.guest_present
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('input_boolean.guest_present','on') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('input_boolean.guest_present','on') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    box-shadow: none !important;
                                    --primary-text-color: var(--contrast20);
                      badge:
                        card:
                          type: custom:button-card
                          entity: '[[[ return entity.entity_id ]]]'
                          show_icon: true
                          show_name: false
                          icon: mdi:home
                          state:
                            - value: home
                              icon: mdi:home
                              styles:
                                card:
                                  - background: var(--green)
                            - value: not_home
                              icon: mdi:home-export-outline
                              styles:
                                card:
                                  - background: var(--red)
                          styles:
                            card:
                              - border-radius: 50%
                              - width: 16px
                              - height: 16px
                              - background: none
                            icon:
                              - color: black
                              - width: 12px
                columns: 2
          - type: vertical-stack
            cards:
              - type: heading
                icon: mdi:cctv
                heading: Cameras
                heading_style: title
                tap_action:
                  action: navigate
                  navigation_path: '#cameras'
              - square: false
                type: grid
                cards:
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.camera_corridor_outlet
                    name: Corridor
                    variables:
                      icon_on: mdi:cctv
                      icon_off: mdi:cctv-off
                      color: var(--red)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.camera_living_room
                    name: Living Room
                    variables:
                      icon_on: mdi:cctv
                      icon_off: mdi:cctv-off
                      color: var(--purple)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.camera_office_outlet
                    name: Office
                    variables:
                      icon_on: mdi:cctv
                      icon_off: mdi:cctv-off
                      color: var(--blue)
                columns: 3
              - type: heading
                icon: mdi:shield-home
                heading: Sensors
                heading_style: title
              - square: false
                type: grid
                cards:
                  - square: true
                    columns: 8
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: group.window_sensors
                        show_name: false
                        show_icon: true
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--red)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.living_room_window_door_sensor
                        show_name: false
                        show_icon: true
                        icon: mdi:sofa-outline
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--green)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.bed_room_window_door_sensor
                        show_name: false
                        show_icon: true
                        icon: mdi:bed
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--blue)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.office_window_door_sensor
                        show_name: false
                        show_icon: true
                        icon: mdi:monitor
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--red)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.kitchen_window_door_sensor
                        show_name: false
                        show_icon: true
                        icon: mdi:silverware-variant
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--purple)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.bathroom_window_door_sensor
                        show_name: false
                        show_icon: true
                        icon: mdi:paper-roll-outline
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--yellow)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.guest_room_window_door_sensor
                        show_name: false
                        show_icon: true
                        icon: mdi:desk
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--orange)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.flat_door
                        show_name: false
                        show_icon: true
                        aspect_ratio: 1/1
                        icon: mdi:door
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--orange)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                  - square: true
                    columns: 8
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: group.motion_sensors
                        show_name: false
                        show_icon: true
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--red)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.living_room_presence_sensor_occupancy
                        show_name: false
                        show_icon: true
                        icon: mdi:sofa-outline
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--green)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.bed_room_presence_sensor_occupancy
                        show_name: false
                        show_icon: true
                        icon: mdi:bed
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--blue)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.office_motion_sensors
                        show_name: false
                        show_icon: true
                        icon: mdi:monitor
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--red)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.kitchen_motion_sensor
                        show_name: false
                        show_icon: true
                        icon: mdi:silverware-variant
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--purple)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.bathroom_motion_sensors
                        show_name: false
                        show_icon: true
                        icon: mdi:paper-roll-outline
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--yellow)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.guest_room_motion_sensor
                        show_name: false
                        show_icon: true
                        icon: mdi:desk
                        aspect_ratio: 1/1
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--orange)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                      - type: custom:button-card
                        entity: binary_sensor.hue_motion_sensor_1_motion
                        show_name: false
                        show_icon: true
                        aspect_ratio: 1/1
                        icon: mdi:door
                        tap_action:
                          action: more-info
                        styles:
                          card:
                            - border-radius: 14px
                            - background-color: |
                                [[[
                                  if (entity.state == "on") return "var(--orange)";
                                  else return "var(--contrast2)";
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == "on") return "var(--black)";
                                  else return "var(--contrast20)";
                                ]]]
                columns: 1
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template: custom_card_user
              - type: custom:bubble-card
                card_type: empty-column
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: custom:decluttering-card
            template: footer_template
          - square: false
            columns: 1
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Security
                icon: mdi:security
                sub_button:
                  - name: User
                    icon: mdi:account
                    show_name: true
                    tap_action:
                      action: navigate
                      navigation_path: '#user'
                  - entity: switch.security_cameras
                    name: Cameras
                    icon: mdi:cctv
                    show_name: true
                    state_background: false
                    show_background: true
                    show_state: false
                    show_attribute: false
                    show_last_changed: false
                    tap_action:
                      action: navigate
                      navigation_path: '#cameras'
                styles: |-
                  .bubble-sub-button-1 {
                      opacity: 1 !important;
                      background-color: var(--contrast2) !important;
                      color: var(--contrast20) !important;
                    }
                  .bubble-sub-button-2 {
                      opacity: 1 !important;
                      background-color: ${hass.states['switch.security_cameras'].state === 'on' ? 'var(--red)' : 'var(--contrast2)'} !important;
                      color: ${hass.states['switch.security_cameras'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                    }
              - type: custom:button-card
                tap_action:
                  action: navigate
                  navigation_path: user
                styles:
                  grid:
                    - grid-template-areas: '''item1 item2 item3 item4 item5'''
                    - grid-template-columns: 1fr 1fr 1fr 1fr 1fr
                  card:
                    - padding: 15px
                    - background-color: var(--contrast2)
                  custom_fields:
                    item1:
                      - justify-self: start
                    item2:
                      - justify-self: start
                    item3:
                      - justify-self: center
                    item4:
                      - justify-self: end
                    item5:
                      - justify-self: end
                custom_fields:
                  item1:
                    card:
                      type: custom:button-card
                      name: Julian
                      entity: person.julian_
                      show_entity_picture: true
                      show_state: true
                      styles:
                        card:
                          - border-radius: 0px
                          - box-shadow: none
                          - padding-right: 5px
                          - background-color: var(--contrast2)
                        grid:
                          - grid-template-areas: '''i n'' ''i s'''
                          - grid-template-columns: min-content
                          - column-gap: 10px
                        entity_picture:
                          - border-radius: 100%
                        icon:
                          - width: 18px
                        img_cell:
                          - width: 18px
                        name:
                          - justify-self: start
                          - font-size: 8px
                          - font-weight: 500
                          - color: var(--contrast14)
                        state:
                          - justify-self: start
                          - font-size: 12px
                          - font-weight: 700
                      tap_action:
                        action: more-info
                      double_tap_action:
                        action: perform-action
                        perform_action: input_boolean.toggle
                        target:
                          entity_id: input_boolean.julian_present
                  item2:
                    card:
                      type: custom:button-card
                      name: Anna
                      entity: person.anna
                      show_entity_picture: true
                      show_state: true
                      styles:
                        card:
                          - border-radius: 0px
                          - box-shadow: none
                          - padding-right: 5px
                          - background-color: var(--contrast2)
                        grid:
                          - grid-template-areas: '''i n'' ''i s'''
                          - grid-template-columns: min-content
                          - column-gap: 10px
                        entity_picture:
                          - border-radius: 100%
                        icon:
                          - width: 18px
                        img_cell:
                          - width: 18px
                        name:
                          - justify-self: start
                          - font-size: 8px
                          - font-weight: 500
                          - color: var(--contrast14)
                        state:
                          - justify-self: start
                          - font-size: 12px
                          - font-weight: 700
                      tap_action:
                        action: more-info
                      double_tap_action:
                        action: perform-action
                        perform_action: input_boolean.toggle
                        target:
                          entity_id: input_boolean.anna_present
                  item3:
                    card:
                      type: custom:button-card
                      name: Valentin
                      entity: person.dog
                      show_entity_picture: true
                      show_state: true
                      styles:
                        card:
                          - border-radius: 0px
                          - box-shadow: none
                          - padding-right: 5px
                          - background-color: var(--contrast2)
                        grid:
                          - grid-template-areas: '''i n'' ''i s'''
                          - grid-template-columns: min-content
                          - column-gap: 10px
                        entity_picture:
                          - border-radius: 100%
                        icon:
                          - width: 18px
                        img_cell:
                          - width: 18px
                        name:
                          - justify-self: start
                          - font-size: 8px
                          - font-weight: 500
                          - color: var(--contrast14)
                        state:
                          - justify-self: start
                          - font-size: 12px
                          - font-weight: 700
                      tap_action:
                        action: more-info
                      double_tap_action:
                        action: perform-action
                        perform_action: input_boolean.toggle
                        target:
                          entity_id: input_boolean.dog_present
                  item4:
                    card:
                      type: custom:button-card
                      name: Simone
                      entity: person.dog_simone
                      show_entity_picture: true
                      show_state: true
                      styles:
                        card:
                          - border-radius: 0px
                          - box-shadow: none
                          - padding-right: 5px
                          - background-color: var(--contrast2)
                        grid:
                          - grid-template-areas: '''i n'' ''i s'''
                          - grid-template-columns: min-content
                          - column-gap: 10px
                        entity_picture:
                          - border-radius: 100%
                        icon:
                          - width: 18px
                        img_cell:
                          - width: 18px
                        name:
                          - justify-self: start
                          - font-size: 8px
                          - font-weight: 500
                          - color: var(--contrast14)
                        state:
                          - justify-self: start
                          - font-size: 12px
                          - font-weight: 700
                      tap_action:
                        action: more-info
                      double_tap_action:
                        action: perform-action
                        perform_action: input_boolean.toggle
                        target:
                          entity_id: input_boolean.dog_simone_present
                  item5:
                    card:
                      type: custom:button-card
                      name: Guest
                      entity: person.guest
                      show_entity_picture: true
                      show_state: true
                      styles:
                        card:
                          - border-radius: 0px
                          - box-shadow: none
                          - padding-right: 5px
                          - background-color: var(--contrast2)
                        grid:
                          - grid-template-areas: '''i n'' ''i s'''
                          - grid-template-columns: min-content
                          - column-gap: 10px
                        entity_picture:
                          - border-radius: 100%
                        icon:
                          - width: 18px
                        img_cell:
                          - width: 18px
                        name:
                          - justify-self: start
                          - font-size: 8px
                          - font-weight: 500
                          - color: var(--contrast14)
                        state:
                          - justify-self: start
                          - font-size: 12px
                          - font-weight: 700
                      tap_action:
                        action: more-info
                      double_tap_action:
                        action: perform-action
                        perform_action: input_boolean.toggle
                        target:
                          entity_id: input_boolean.guest_present
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 767px)'
      - type: grid
        cards:
          - type: custom:navbar-card
            desktop:
              position: left
              min_width: 768
              show_labels: true
            mobile:
              show_labels: true
            routes:
              - icon: mdi:home-outline
                icon_selected: mdi:home-assistant
                url: /dashboard-bubble/home
                label: Home
              - icon: mdi:sofa-outline
                icon_selected: mdi:sofa
                label: Rooms
                badge:
                  show: |
                    [[[ return states['light.all_lights'].state === 'on' ]]]
                  color: var(--yellow-color)
                  count: |
                    [[[ return states['sensor.lights_on_count'].state ]]]
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:sofa-outline
                    url: /dashboard-bubble/home#living-room
                    label: Living Room
                  - icon: mdi:bed-king-outline
                    url: /dashboard-bubble/home#bedroom
                    label: Bedroom
                  - icon: mdi:monitor
                    url: /dashboard-bubble/home#office
                    label: Office
                  - icon: mdi:silverware-variant
                    url: /dashboard-bubble/home#kitchen
                    label: Kitchen
                  - icon: mdi:paper-roll-outline
                    url: /dashboard-bubble/home#bathroom
                    label: Bathroom
                  - icon: mdi:desk
                    url: /dashboard-bubble/home#guest-room
                    label: Guest Room
                  - icon: mdi:door
                    url: /dashboard-bubble/home#corridor
                    label: Corridor
              - icon: mdi:music
                url: /dashboard-bubble/music
                label: Music
                badge:
                  show: >
                    [[[ return states['media_player.music'].state === 'playing'
                    ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return false;
                    else if (states['remote.harmony_hub'].state == "on") return true;
                    else return false;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:television
                url: /dashboard-bubble/home#remote
                label: TV
                badge:
                  show: >
                    [[[ return states['media_player.tv_and_ps5'].state ===
                    'playing' ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return true;
                    else if (states['remote.harmony_hub'].state == "on") return false;
                    else return true;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:shield-outline
                icon_selected: mdi:security
                url: /dashboard-bubble/security
                label: Security
                badge:
                  show: >
                    [[[ return states['binary_sensor.window_sensors'].state ===
                    'on' ]]]
                  color: var(--red-color)
                  count: |
                    [[[ return states['sensor.window_open_count'].state ]]]
              - icon: mdi:face-agent
                url: /dashboard-bubble/home#julian
                label: Julian
                hidden: |
                  [[[ return user.name != "Julian" ]]]
                badge:
                  show: >
                    [[[ return states['input_boolean.debug_rounded'].state ===
                    'on' ]]]
                  color: var(--red-color)
              - icon: mdi:face-woman
                url: /dashboard-bubble/home#anna
                label: Anna
                hidden: |
                  [[[ return user.name != "Anna" ]]]
              - icon: mdi:dots-horizontal
                label: More
                badge:
                  show: |
                    [[[
                      if (states['binary_sensor.monitored_entities'].state == "on") return true;
                      else if (states['binary_sensor.home_assistant_update'].state == "on") return true;
                      else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                      else return false;
                    ]]]
                  color: var(--red-color)
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:server-outline
                    url: /dashboard-bubble/server
                    label: Server
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                    badge:
                      show: |
                        [[[
                          if (states['binary_sensor.monitored_entities'].state == "on") return true;
                          else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                          else return false;
                        ]]]
                      color: var(--red-color)
                  - icon: mdi:cart
                    url: /dashboard-bring/home
                    label: Shopping List
                    badge:
                      show: |
                        [[[ return states['todo.shopping_list'].state > 0 ]]]
                      color: var(--red-color)
                      count: |
                        [[[ return states['todo.shopping_list'].state ]]]
                  - icon: mdi:bookshelf
                    url: /d5369777_music_assistant/ingress
                    label: Music Assistant
                  - icon: mdi:cog
                    url: /config/dashboard
                    label: Settings
                    badge:
                      show: >
                        [[[ return
                        states['binary_sensor.home_assistant_update'].state ===
                        'on' ]]]
                      color: var(--red-color)
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                  - icon: mdi:hammer
                    url: /developer-tools/yaml
                    label: Developer Tools
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
            styles: |
              .navbar {
                --navbar-primary-color: var(--red-color);
                background: var(--contrast2);
              }
          - type: heading
            heading: Security
            heading_style: title
            icon: mdi:security
            badges:
              - type: entity
                show_state: false
                show_icon: true
                entity: switch.security_cameras
                color: orange
                tap_action:
                  action: toggle
              - type: entity
                show_state: false
                show_icon: true
                entity: group.window_sensors
                color: red
                tap_action:
                  action: more-info
              - type: entity
                show_state: false
                show_icon: true
                entity: group.motion_sensors
                tap_action:
                  action: more-info
                color: yellow
              - type: entity
                show_state: false
                show_icon: true
                entity: lock.flat_door
                tap_action:
                  action: more-info
                color: red
            grid_options:
              columns: 12
              rows: 1
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                template: alarm
                entity: alarm_control_panel.security_system
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: lock.flat_door
                    name: Flat Door
                    template: custom_card_sensor_big
                    variables:
                      icon_on: mdi:lock-open-variant
                      icon_off: mdi:lock
                      state_on: unlocked
                      state_off: locked
                      background_color_on: var(--red)
                      background_color_off: var(--green)
                      color_on: var(--black)
                      color_off: var(--black)
                      state: |
                        [[[ 
                          if (entity.state == "locked") return `<span style="font-size:1em;">Locked</span>`;
                          else return `<span style="font-size:1em;">Unlocked</span>`;
                        ]]]
                    styles:
                      card:
                        - height: 166px
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.flat_door
                        name: Flat Door
                        icon: mdi:help-circle-outline
                        label: |
                          [[[
                            if (entity.state == "on") return "Open";
                            else return "Closed";
                          ]]]
                        template: button_template
                        variables:
                          icon2: |
                            [[[
                              if (entity.state == "on") return "mdi:door-open";
                              else return "mdi:door-closed";
                            ]]]
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--black)
                          color_off: var(--contrast20)
                      - type: custom:button-card
                        entity: lock.front_door
                        icon: mdi:lock-open
                        label: '[[[return states["lock.front_door"].state]]]'
                        template: button_template
                        variables:
                          icon2: |
                            [[[
                              if (entity.state == "locked") return "mdi:lock";
                              else return "mdi:lock-open-variant";
                            ]]]
                          state_on: unlocked
                          state_off: locked
                          background_color_off: var(--green)
                          background_color_on: var(--red)
                          color_on: var(--black)
                          color_off: var(--contrast1)
                  - type: custom:button-card
                    entity: group.motion_sensors
                    icon: mdi:motion-sensor-off
                    label: '[[[return states["group.motion_sensors"].state]]]'
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:motion-sensor";
                          else return "mdi:motion-sensor-off";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--purple)
                      color_on: var(--black)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: group.window_sensors
                    icon: mdi:window-closed-variant
                    label: |
                      [[[
                        if (entity.state == "on") return "Open";
                        else return "Closed";
                      ]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:window-open-variant";
                          else return "mdi:window-closed-variant";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--black)
                      color_off: var(--contrast20)
            columns: 1
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Cameras
                icon: mdi:cctv
                sub_button:
                  - entity: switch.camera_corridor_outlet
                    icon: mdi:door
                    show_name: false
                    show_state: true
                    state_background: false
                    tap_action:
                      action: toggle
                  - entity: switch.camera_living_room
                    icon: mdi:sofa-outline
                    show_name: false
                    show_state: true
                    state_background: false
                    tap_action:
                      action: toggle
                  - entity: switch.camera_office_outlet
                    icon: mdi:monitor
                    show_name: false
                    show_state: true
                    state_background: false
                    tap_action:
                      action: toggle
              - type: conditional
                conditions:
                  - entity: switch.security_cameras
                    state: 'on'
                card:
                  type: custom:swipe-card
                  card_width: calc(100% - 48px)
                  parameters:
                    centeredSlides: true
                    slidesPerView: auto
                    spaceBetween: 16
                    initialSlide: 0
                  cards:
                    - type: conditional
                      conditions:
                        - entity: switch.camera_corridor_outlet
                          state: 'on'
                        - entity: switch.camera_living_room
                          state: 'on'
                        - entity: switch.camera_office_outlet
                          state: 'on'
                      card:
                        type: custom:button-card
                        entity: camera.192_168_178_78
                        show_entity_picture: true
                        show_name: false
                        tap_action:
                          action: more-info
                        double_tap_action:
                          action: more-info
                        styles:
                          grid:
                            - grid-template-areas: '"i two" "i three"'
                            - grid-template-columns: 50% 50%
                            - grid-template-rows: 50% 50%
                          card:
                            - background: var(--contrast2)
                            - padding: 0
                            - border-radius: 16px
                          entity_picture:
                            - width: 100%
                            - height: 100%
                            - object-fit: cover
                        custom_fields:
                          two:
                            card:
                              type: custom:button-card
                              entity: camera.192_168_178_125
                              show_entity_picture: true
                              show_name: false
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: more-info
                              styles:
                                card:
                                  - background: var(--contrast2)
                                  - padding: 0
                                  - border-radius: 0px 16px 0px 0px
                                  - border-left: 2px solid black
                                  - border-bottom: 1px solid black
                                entity_picture:
                                  - width: 100%
                                  - height: 100%
                          three:
                            card:
                              type: custom:button-card
                              entity: camera.192_168_178_77
                              show_entity_picture: true
                              show_name: false
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: more-info
                              styles:
                                card:
                                  - background: var(--contrast2)
                                  - padding: 0
                                  - border-radius: 0px 0px 16px 0px
                                  - border-left: 2px solid black
                                  - border-top: 1px solid black
                                entity_picture:
                                  - width: 100%
                                  - height: 100%
                    - type: conditional
                      conditions:
                        - entity: switch.camera_corridor_outlet
                          state: 'on'
                      card:
                        show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        tap_action:
                          action: navigate
                          navigation_path: cameras
                        entity: camera.192_168_178_78
                    - type: conditional
                      conditions:
                        - entity: switch.camera_living_room
                          state: 'on'
                      card:
                        show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        tap_action:
                          action: navigate
                          navigation_path: cameras
                        entity: camera.192_168_178_125
                    - type: conditional
                      conditions:
                        - entity: switch.camera_office_outlet
                          state: 'on'
                      card:
                        show_state: false
                        show_name: false
                        camera_view: live
                        type: picture-entity
                        tap_action:
                          action: navigate
                          navigation_path: cameras
                        entity: camera.192_168_178_77
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: People
                icon: mdi:account-group
                hash: '#user'
                button_type: name
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    name: Julian
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.julian_
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    tap_action:
                      action: more-info
                    icon: mdi:bed-king-outline
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 0px 10px 10px
                      grid:
                        - grid-template-areas: '"name name btn" "state btn1 btn" "icon btn1 btn"'
                        - grid-template-columns: 3fr min-content min-content
                        - grid-template-rows: 1em 1em 1fr
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 -10px -10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                        - opacity: |
                            [[[
                              if (entity.state == 'not_home') {
                                return '0.7';
                              } else {
                                return '1';
                              }
                            ]]]
                      icon:
                        - width: 45px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                          - margin-top: 5px
                        btn1:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 8px
                        btn:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 5px
                        icon:
                          - align-self: start
                          - justify-self: start
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Julian
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 18px
                              - font-weight: 500
                              - background: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.julian_
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.julian_'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 13px
                              - background: none
                              - opacity: '0.7'
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.julians_iphone_12_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.julians_iphone_12_battery_level') | float > 10  else 'var(--red)' }};
                                    --color: {{ 'var(--contrast20)' if states('sensor.julians_iphone_12_battery_level') | float > 10  else 'var(--black)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: navigate
                                navigation_path: steps
                              entity: sensor.julians_iphone_12_steps
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if states('sensor.julians_iphone_12_steps') | float > states('sensor.annas_iphone_steps') | float  else 'var(--red)' }};
                                    --color: var(--black);
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.home_julian_direction_of_travel
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: var(--contrast1);
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);

                                  }
                  - type: custom:button-card
                    name: Anna
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.anna
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    tap_action:
                      action: more-info
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 0px 10px 10px
                      grid:
                        - grid-template-areas: '"name name btn" "state btn1 btn" "icon btn1 btn"'
                        - grid-template-columns: 3fr min-content min-content
                        - grid-template-rows: 1em 1em 1fr
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 -10px -10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                        - opacity: |
                            [[[
                              if (entity.state == 'not_home') {
                                return '0.7';
                              } else {
                                return '1';
                              }
                            ]]]
                      icon:
                        - width: 45px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                          - margin-top: 5px
                        btn1:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 8px
                        btn:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 5px
                        icon:
                          - align-self: start
                          - justify-self: start
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Anna
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 18px
                              - font-weight: 500
                              - background: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.anna
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.anna'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 13px
                              - background: none
                              - opacity: '0.7'
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.annas_iphone_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.julians_iphone_12_battery_level') | float > 10  else 'var(--red)' }};
                                    --color: {{ 'var(--contrast20)' if states('sensor.julians_iphone_12_battery_level') | float > 10  else 'var(--black)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: navigate
                                navigation_path: steps
                              entity: sensor.annas_iphone_steps
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if states('sensor.julians_iphone_12_steps') | float < states('sensor.annas_iphone_steps') | float  else 'var(--red)' }};
                                    --color: var(--black);
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.home_anna_direction_of_travel
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: var(--contrast1);
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);

                                  }
                  - type: custom:button-card
                    name: Valentin
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.dog
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    tap_action:
                      action: more-info
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 0px 10px 10px
                      grid:
                        - grid-template-areas: '"name name btn" "state btn1 btn" "icon btn1 btn"'
                        - grid-template-columns: 3fr min-content min-content
                        - grid-template-rows: 1em 1em 1fr
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 -10px -10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                        - opacity: |
                            [[[
                              if (entity.state == 'not_home') {
                                return '0.7';
                              } else {
                                return '1';
                              }
                            ]]]
                      icon:
                        - width: 45px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                          - margin-top: 5px
                        btn1:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 8px
                        btn:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 5px
                        icon:
                          - align-self: start
                          - justify-self: start
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Valentin
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 18px
                              - font-weight: 500
                              - background: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.dog
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.dog'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 13px
                              - background: none
                              - opacity: '0.7'
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.valentin_battery_level
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--contrast1)' if states('sensor.valentin_battery_level') | float > 10  else 'var(--red)' }};
                                    --color: {{ 'var(--contrast20)' if states('sensor.valentin_battery_level') | float > 10  else 'var(--black)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.dog_away_time_day
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: var(--contrast1);
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.home_valentin_direction_of_travel
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: var(--contrast1);
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);

                                  }
                  - type: custom:button-card
                    name: Simone
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.dog_simone
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    tap_action:
                      action: more-info
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 0px 10px 10px
                      grid:
                        - grid-template-areas: '"name name btn" "state btn1 btn" "icon btn1 btn"'
                        - grid-template-columns: 3fr min-content min-content
                        - grid-template-rows: 1em 1em 1fr
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 -10px -10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                        - opacity: |
                            [[[
                              if (entity.state == 'not_home') {
                                return '0.7';
                              } else {
                                return '1';
                              }
                            ]]]
                      icon:
                        - width: 45px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                          - margin-top: 5px
                        btn1:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 8px
                        btn:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 5px
                        icon:
                          - align-self: start
                          - justify-self: start
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Simone
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 18px
                              - font-weight: 500
                              - background: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.dog_simone
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.dog_simone'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 13px
                              - background: none
                              - opacity: '0.7'
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              double_tap_action:
                                action: call-service
                                service: input_boolean.toggle
                                service_data:
                                  entity_id: input_boolean.dog_simone_present
                              entity: device_tracker.dog_simone_presence
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('device_tracker.dog_simone_presence','home') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('device_tracker.dog_simone_presence','home') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: device_tracker.simonebeacon_c3ad
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('device_tracker.simonebeacon_c3ad','home') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('device_tracker.simonebeacon_c3ad','home') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: sensor.home_simone_direction_of_travel
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: var(--contrast1);
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);

                                  }
                  - type: custom:button-card
                    name: Guest
                    show_name: false
                    show_state: false
                    show_icon: true
                    show_entity_picture: true
                    entity: person.guest
                    state:
                      - value: not_home
                        styles:
                          entity_picture:
                            - filter: grayscale(100%)
                    tap_action:
                      action: more-info
                    styles:
                      card:
                        - background-color: var(--contrast2)
                        - padding: 10px 0px 10px 10px
                      grid:
                        - grid-template-areas: '"name name btn" "state btn1 btn" "icon btn1 btn"'
                        - grid-template-columns: 3fr min-content min-content
                        - grid-template-rows: 1em 1em 1fr
                      img_cell:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 -10px -10px
                        - border-radius: 500px
                        - border: |
                            [[[
                              if (entity.state == 'home') {
                                return '2px solid var(--green)';
                              } else {
                                return 'none';
                              }
                            ]]]
                      entity_picture:
                        - justify-content: start
                        - position: absolute
                        - width: 90px
                        - height: 90px
                        - left: 0
                        - bottom: 0
                        - margin: 0 0 0 0
                        - border-radius: 500px
                        - opacity: |
                            [[[
                              if (entity.state == 'not_home') {
                                return '0.7';
                              } else {
                                return '1';
                              }
                            ]]]
                      icon:
                        - width: 45px
                        - color: var(--contrast1)
                      custom_fields:
                        name:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                        state:
                          - align-self: start
                          - justify-self: start
                          - background: none
                          - padding: 5px
                          - margin-top: 5px
                        btn1:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 8px
                        btn:
                          - align-self: end
                          - justify-self: end
                          - padding-right: 5px
                        icon:
                          - align-self: start
                          - justify-self: start
                    custom_fields:
                      name:
                        card:
                          type: custom:button-card
                          name: Guest
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 18px
                              - font-weight: 500
                              - background: none
                      state:
                        card:
                          type: custom:button-card
                          entity: person.guest
                          show_icon: false
                          name: |
                            [[[ 
                              return states['person.guest'].state;
                            ]]]
                          state:
                            - value: home
                              name: Home
                            - value: not_home
                              name: Away
                          styles:
                            card:
                              - color: var(--contrast20)
                              - font-size: 13px
                              - background: none
                              - opacity: '0.7'
                      btn:
                        card:
                          type: custom:mushroom-chips-card
                          chips:
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: switch.junglemoneyguest
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('switch.junglemoneyguest','on') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('switch.junglemoneyguest','on') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: device_tracker.guest_presence
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('device_tracker.guest_presence','home') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('device_tracker.guest_presence','home') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);
                            - type: entity
                              tap_action:
                                action: more-info
                              entity: device_tracker.guestbeacon_71ce
                              content_info: none
                              card_mod:
                                style: |
                                  ha-card {
                                    --chip-background: {{ 'var(--green)' if is_state('device_tracker.guestbeacon_71ce','home') else 'var(--contrast1)' }};
                                    --color: {{ 'var(--black)' if is_state('device_tracker.guestbeacon_71ce','home') else 'var(--contrast20)' }};
                                    padding: 0px!important;
                                    border-radius: 100px!impportant;
                                    --primary-text-color: var(--contrast20);

                                  }
              - type: heading
                icon: mdi:devices
                heading: Devices
                heading_style: title
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: person.julian_
                    show_entity_picture: true
                    show_name: false
                    tap_action:
                      action: more-info
                    styles:
                      grid:
                        - grid-template-areas: '"info"'
                        - grid-template-columns: 1fr
                        - grid-template-rows: min-content
                      card:
                        - background: none
                        - padding: 0
                        - position: relative
                        - '--mdc-ripple-press-opacity': 0
                      img_cell:
                        - position: absolute
                      icon:
                        - width: 150%
                        - opacity: |
                            [[[
                              if (entity.state == "not_home") return "var(--color-tint)";
                              else return "100";
                            ]]]
                        - '-webkit-filter': blur(20px)
                        - '-moz-filter': blur(20px)
                        - '-o-filter': blur(20px)
                        - '-ms-filter': blur(20px)
                        - filter: blur(20px)
                    custom_fields:
                      info:
                        card:
                          type: custom:button-card
                          entity: person.julian_
                          name: Julian
                          show_entity_picture: true
                          label: '[[[return states["person.julian_"].state]]]'
                          show_label: true
                          state:
                            - value: home
                              label: Home
                            - value: not_home
                              label: Away
                          tap_action:
                            action: more-info
                            haptic: success
                          styles:
                            icon:
                              - width: 24px
                              - color: var(--contrast20)
                            img_cell:
                              - justify-content: flex-start
                              - margin-top: '-4px'
                            name:
                              - justify-self: start
                              - color: var(--white)
                              - font-size: 12px
                              - margin-bottom: 0px
                            card:
                              - background: none
                              - height: 166px
                              - box-shadow: none
                              - border-radius: 24px
                              - padding: 96px 0px 16px 14px
                              - z-index: 1
                            entity_picture:
                              - border-radius: 12px
                            label:
                              - justify-self: start
                              - color: var(--white)
                              - font-size: 12px
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.julian_presence
                        name: Presence
                        icon: mdi:face-agent
                        double_tap_action:
                          action: call-service
                          service: input_boolean.toggle
                          service_data:
                            entity_id: input_boolean.julian_present
                          haptic: success
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:face-agent
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                      - type: custom:button-card
                        entity: device_tracker.julians_iphone
                        name: iPhone 14
                        icon: mdi:cellphone-nfc
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:cellphone-nfc
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.julians_iphone_12
                        name: iPhone 14
                        icon: mdi:cellphone-marker
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:cellphone-marker
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                      - type: custom:button-card
                        entity: device_tracker.macbook_pro_von_julian
                        name: MacBook Pro
                        icon: mdi:laptop
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:laptop
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
              - type: custom:bubble-card
                card_type: empty-column
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: person.anna
                    show_entity_picture: true
                    show_name: false
                    tap_action:
                      action: more-info
                    styles:
                      grid:
                        - grid-template-areas: '"info"'
                        - grid-template-columns: 1fr
                        - grid-template-rows: min-content
                      card:
                        - background: none
                        - padding: 0
                        - position: relative
                        - '--mdc-ripple-press-opacity': 0
                      img_cell:
                        - position: absolute
                      icon:
                        - width: 150%
                        - opacity: |
                            [[[
                              if (entity.state == "not_home") return "var(--color-tint)";
                              else return "100";
                            ]]]
                        - '-webkit-filter': blur(20px)
                        - '-moz-filter': blur(20px)
                        - '-o-filter': blur(20px)
                        - '-ms-filter': blur(20px)
                        - filter: blur(20px)
                    custom_fields:
                      info:
                        card:
                          type: custom:button-card
                          entity: person.anna
                          name: Anna
                          show_entity_picture: true
                          label: '[[[return states["person.anna"].state]]]'
                          show_label: true
                          state:
                            - value: home
                              label: Home
                            - value: not_home
                              label: Away
                          tap_action:
                            action: more-info
                            haptic: success
                          styles:
                            icon:
                              - width: 24px
                              - color: var(--contrast20)
                            img_cell:
                              - justify-content: flex-start
                              - margin-top: '-4px'
                            name:
                              - justify-self: start
                              - color: var(--white)
                              - font-size: 12px
                              - margin-bottom: 0px
                            card:
                              - background: none
                              - height: 166px
                              - box-shadow: none
                              - border-radius: 24px
                              - padding: 96px 0px 16px 14px
                              - z-index: 1
                            entity_picture:
                              - border-radius: 12px
                            label:
                              - justify-self: start
                              - color: var(--white)
                              - font-size: 12px
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.anna_presence
                        name: Presence
                        icon: mdi:face-woman
                        double_tap_action:
                          action: call-service
                          service: input_boolean.toggle
                          service_data:
                            entity_id: input_boolean.anna_present
                          haptic: success
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:face-woman
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                      - type: custom:button-card
                        entity: device_tracker.annas_iphone
                        name: iPhone
                        icon: mdi:cellphone-nfc
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:cellphone-nfc
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.annas_iphone_14
                        name: iPhone
                        icon: mdi:cellphone-marker
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:cellphone-marker
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                      - type: custom:button-card
                        entity: device_tracker.iphone_12
                        name: iPhone
                        icon: mdi:router-wireless
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:router-wireless
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
              - type: custom:bubble-card
                card_type: empty-column
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.dog_home
                    show_entity_picture: true
                    entity_picture: /local/images/dogs.jpeg
                    show_name: false
                    tap_action:
                      action: more-info
                    styles:
                      grid:
                        - grid-template-areas: '"info"'
                        - grid-template-columns: 1fr
                        - grid-template-rows: min-content
                      card:
                        - background: none
                        - padding: 0
                        - position: relative
                        - '--mdc-ripple-press-opacity': 0
                      img_cell:
                        - position: absolute
                      icon:
                        - width: 150%
                        - opacity: |
                            [[[
                              if (entity.state == "off") return "var(--color-tint)";
                              else return "100";
                            ]]]
                        - '-webkit-filter': blur(20px)
                        - '-moz-filter': blur(20px)
                        - '-o-filter': blur(20px)
                        - '-ms-filter': blur(20px)
                        - filter: blur(20px)
                    custom_fields:
                      info:
                        card:
                          type: custom:button-card
                          entity: binary_sensor.dog_home
                          name: Dogs
                          show_entity_picture: true
                          entity_picture: /local/images/dogs.jpeg
                          label: '[[[return states["binary_sensor.dog_home"].state]]]'
                          show_label: true
                          state:
                            - value: 'on'
                              label: Home
                            - value: 'off'
                              label: Away
                          tap_action:
                            action: more-info
                            haptic: success
                          styles:
                            icon:
                              - width: 24px
                              - color: var(--contrast20)
                            img_cell:
                              - justify-content: flex-start
                              - margin-top: '-4px'
                            name:
                              - justify-self: start
                              - color: var(--white)
                              - font-size: 12px
                              - margin-bottom: 0px
                            card:
                              - background: none
                              - height: 166px
                              - box-shadow: none
                              - border-radius: 24px
                              - padding: 96px 0px 16px 14px
                              - z-index: 1
                            entity_picture:
                              - border-radius: 12px
                            label:
                              - justify-self: start
                              - color: var(--white)
                              - font-size: 12px
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: person.dog
                        show_entity_picture: true
                        show_name: false
                        tap_action:
                          action: more-info
                        double_tap_action:
                          action: call-service
                          service: input_boolean.toggle
                          service_data:
                            entity_id: input_boolean.dog_present
                          haptic: success
                        styles:
                          grid:
                            - grid-template-areas: '"info"'
                            - grid-template-columns: 1fr
                            - grid-template-rows: min-content
                          card:
                            - background: none
                            - padding: 0
                            - position: relative
                            - '--mdc-ripple-press-opacity': 0
                          img_cell:
                            - position: absolute
                          icon:
                            - width: 150%
                            - opacity: |
                                [[[
                                  if (entity.state == "not_home") return "var(--color-tint)";
                                  else return "100";
                                ]]]
                            - '-webkit-filter': blur(20px)
                            - '-moz-filter': blur(20px)
                            - '-o-filter': blur(20px)
                            - '-ms-filter': blur(20px)
                            - filter: blur(20px)
                        custom_fields:
                          info:
                            card:
                              type: custom:button-card
                              entity: person.dog
                              name: Valentin
                              show_label: true
                              label: |
                                [[[
                                  if (entity.state == "home") return "Home";
                                  else return "Away";
                                ]]]
                              custom_fields:
                                icon2:
                                  card:
                                    type: custom:button-card
                                    show_entity_picture: true
                                    entity: '[[[ return entity.entity_id ]]]'
                                    show_name: false
                                    icon: '[[[ return variables.icon2 ]]]'
                                    styles:
                                      img_cell:
                                        - width: 27px
                                        - height: 27px
                                      card:
                                        - background-color: var(--contrast1)
                                        - width: 27px
                                        - height: 27px
                                        - padding: 0
                                      icon:
                                        - width: 27px
                                        - color: var(--contrast20)
                              styles:
                                grid:
                                  - grid-template-areas: '"l l icon2" "n n n"'
                                  - grid-template-columns: 14px 1fr 1fr
                                  - grid-template-rows: 1fr min-content
                                icon:
                                  - width: 14px
                                  - margin-bottom: 5px
                                  - color: '[[[ return variables.color_off ]]]'
                                img_cell:
                                  - justify-content: flex-start
                                name:
                                  - justify-self: start
                                  - font-size: 11px
                                  - margin-bottom: 2px
                                  - color: '[[[ return variables.color_off ]]]'
                                  - opacity: 0.7
                                card:
                                  - height: 75px
                                  - background: none
                                  - box-shadow: none
                                  - border-radius: 24px
                                  - padding: 12px 0 12px 14px
                                  - z-index: 1
                                label:
                                  - justify-self: start
                                  - font-size: 20px
                                  - margin-top: 11px
                                  - font-weight: 500
                                  - color: '[[[ return variables.color_off ]]]'
                                custom_fields:
                                  icon2:
                                    - margin-top: '-20px'
                                    - justify-self: end
                                    - align-self: center
                                    - width: 24px
                                    - padding-right: 10px
                                    - color: |
                                        [[[
                                          if (entity.state == "on") return "var(--black)";
                                          else return "var(--contrast20)";
                                        ]]]
                      - type: custom:button-card
                        entity: person.dog_simone
                        show_entity_picture: true
                        show_name: false
                        tap_action:
                          action: more-info
                        double_tap_action:
                          action: call-service
                          service: input_boolean.toggle
                          service_data:
                            entity_id: input_boolean.dog_simone_present
                          haptic: success
                        styles:
                          grid:
                            - grid-template-areas: '"info"'
                            - grid-template-columns: 1fr
                            - grid-template-rows: min-content
                          card:
                            - background: none
                            - padding: 0
                            - position: relative
                            - '--mdc-ripple-press-opacity': 0
                          img_cell:
                            - position: absolute
                          icon:
                            - width: 150%
                            - opacity: |
                                [[[
                                  if (entity.state == "not_home") return "var(--color-tint)";
                                  else return "100";
                                ]]]
                            - '-webkit-filter': blur(20px)
                            - '-moz-filter': blur(20px)
                            - '-o-filter': blur(20px)
                            - '-ms-filter': blur(20px)
                            - filter: blur(20px)
                        custom_fields:
                          info:
                            card:
                              type: custom:button-card
                              entity: person.dog_simone
                              name: Simone
                              show_label: true
                              label: |
                                [[[
                                  if (entity.state == "home") return "Home";
                                  else return "Away";
                                ]]]
                              custom_fields:
                                icon2:
                                  card:
                                    type: custom:button-card
                                    show_entity_picture: true
                                    entity: '[[[ return entity.entity_id ]]]'
                                    show_name: false
                                    icon: '[[[ return variables.icon2 ]]]'
                                    styles:
                                      img_cell:
                                        - width: 27px
                                        - height: 27px
                                      card:
                                        - background-color: var(--contrast1)
                                        - width: 27px
                                        - height: 27px
                                        - padding: 0
                                      icon:
                                        - width: 27px
                                        - color: var(--contrast20)
                              styles:
                                grid:
                                  - grid-template-areas: '"l l icon2" "n n n"'
                                  - grid-template-columns: 14px 1fr 1fr
                                  - grid-template-rows: 1fr min-content
                                icon:
                                  - width: 14px
                                  - margin-bottom: 5px
                                  - color: '[[[ return variables.color_off ]]]'
                                img_cell:
                                  - justify-content: flex-start
                                name:
                                  - justify-self: start
                                  - font-size: 11px
                                  - margin-bottom: 2px
                                  - color: '[[[ return variables.color_off ]]]'
                                  - opacity: 0.7
                                card:
                                  - height: 75px
                                  - background: none
                                  - box-shadow: none
                                  - border-radius: 24px
                                  - padding: 12px 0 12px 14px
                                  - z-index: 1
                                label:
                                  - justify-self: start
                                  - font-size: 20px
                                  - margin-top: 11px
                                  - font-weight: 500
                                  - color: '[[[ return variables.color_off ]]]'
                                custom_fields:
                                  icon2:
                                    - margin-top: '-20px'
                                    - justify-self: end
                                    - align-self: center
                                    - width: 24px
                                    - padding-right: 10px
                                    - color: |
                                        [[[
                                          if (entity.state == "on") return "var(--black)";
                                          else return "var(--contrast20)";
                                        ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.cdnivavh_valentin
                        name: Tractive
                        icon: mdi:paw
                        double_tap_action:
                          action: call-service
                          service: input_boolean.toggle
                          service_data:
                            entity_id: input_boolean.dog_present
                          haptic: success
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:paw
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                      - type: custom:button-card
                        entity: device_tracker.simonebeacon_c3ad
                        name: Beacon
                        icon: mdi:dog-side
                        double_tap_action:
                          action: call-service
                          service: input_boolean.toggle
                          service_data:
                            entity_id: input_boolean.dog_simone_present
                          haptic: success
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:dog-side
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
              - type: custom:bubble-card
                card_type: empty-column
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: person.guest
                    show_entity_picture: true
                    show_name: false
                    tap_action:
                      action: more-info
                    styles:
                      grid:
                        - grid-template-areas: '"info"'
                        - grid-template-columns: 1fr
                        - grid-template-rows: min-content
                      card:
                        - background: none
                        - padding: 0
                        - position: relative
                        - '--mdc-ripple-press-opacity': 0
                      img_cell:
                        - position: absolute
                      icon:
                        - width: 150%
                        - opacity: |
                            [[[
                              if (entity.state == "not_home") return "var(--color-tint)";
                              else return "100";
                            ]]]
                        - '-webkit-filter': blur(20px)
                        - '-moz-filter': blur(20px)
                        - '-o-filter': blur(20px)
                        - '-ms-filter': blur(20px)
                        - filter: blur(20px)
                    custom_fields:
                      info:
                        card:
                          type: custom:button-card
                          entity: person.guest
                          name: Guest
                          show_entity_picture: true
                          label: '[[[return states["person.guest"].state]]]'
                          show_label: true
                          state:
                            - value: home
                              label: Home
                            - value: not_home
                              label: Away
                          tap_action:
                            action: more-info
                            haptic: success
                          styles:
                            icon:
                              - width: 24px
                              - color: var(--contrast20)
                            img_cell:
                              - justify-content: flex-start
                              - margin-top: '-4px'
                            name:
                              - justify-self: start
                              - color: var(--white)
                              - font-size: 12px
                              - margin-bottom: 0px
                            card:
                              - background: none
                              - height: 166px
                              - box-shadow: none
                              - border-radius: 24px
                              - padding: 96px 0px 16px 14px
                              - z-index: 1
                            entity_picture:
                              - border-radius: 12px
                            label:
                              - justify-self: start
                              - color: var(--white)
                              - font-size: 12px
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.guest_presence
                        name: Presence
                        icon: mdi:account-group
                        double_tap_action:
                          action: call-service
                          service: input_boolean.toggle
                          service_data:
                            entity_id: input_boolean.guest_present
                          haptic: success
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:account-group
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                      - type: custom:button-card
                        entity: device_tracker.guestbeacon_71ce
                        name: Guest Beacon
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:bluetooth
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.marcos_iphone_12
                        name: Marcos iPhone
                        icon: mdi:cellphone-nfc
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:cellphone-nfc
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
                      - type: custom:button-card
                        entity: device_tracker.karins_iphone
                        name: Karin iPhone
                        icon: mdi:cellphone-nfc
                        label: |
                          [[[
                            if (entity.state == "home") return "Home";
                            else return "Away";
                          ]]]
                        template: button_template
                        variables:
                          icon2: mdi:cellphone-nfc
                          state_on: home
                          state_off: not_home
                          background_color_off: var(--contrast2)
                          background_color_on: var(--purple)
                          color_on: var(--contrast1)
                          color_off: var(--contrast20)
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                name: Cameras
                icon: mdi:cctv
                hash: '#cameras'
                button_type: name
              - type: custom:bubble-card
                card_type: separator
                name: Corridor
                icon: mdi:cctv
                sub_button:
                  - entity: switch.camera_corridor_outlet
                    icon: ''
                    show_name: false
                    show_state: true
                    state_background: false
                    tap_action:
                      action: toggle
                  - entity: binary_sensor.hue_motion_sensor_1_motion
                    state_background: false
                styles: |-
                  .bubble-sub-button-1 {
                      opacity: 1 !important;
                      background-color: ${hass.states['switch.camera_corridor_outlet'].state === 'on' ? 'var(--green)' : 'var(--contrast2)'} !important;
                      color: ${hass.states['switch.camera_corridor_outlet'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                    }
                  .bubble-sub-button-2 {
                      opacity: 1 !important;
                      background-color: ${hass.states['binary_sensor.hue_motion_sensor_1_motion'].state === 'on' ? 'var(--red)' : 'var(--contrast2)'} !important;
                      color: ${hass.states['binary_sensor.hue_motion_sensor_1_motion'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                    }
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: conditional
                    conditions:
                      - entity: switch.camera_corridor_outlet
                        state: 'on'
                    card:
                      show_state: false
                      show_name: false
                      camera_view: live
                      type: picture-entity
                      camera_image: camera.192_168_178_78
                      entity: camera.192_168_178_78
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: separator
                    name: Living Room
                    icon: mdi:cctv
                    sub_button:
                      - entity: switch.camera_living_room
                        icon: ''
                        show_name: false
                        show_state: true
                        state_background: false
                        tap_action:
                          action: toggle
                      - entity: binary_sensor.living_room_presence_sensor_occupancy
                        state_background: false
                    styles: |-
                      .bubble-sub-button-1 {
                          opacity: 1 !important;
                          background-color: ${hass.states['switch.camera_living_room'].state === 'on' ? 'var(--green)' : 'var(--contrast2)'} !important;
                          color: ${hass.states['switch.camera_living_room'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                        }
                      .bubble-sub-button-2 {
                          opacity: 1 !important;
                          background-color: ${hass.states['binary_sensor.living_room_presence_sensor_occupancy'].state === 'on' ? 'var(--red)' : 'var(--contrast2)'} !important;
                          color: ${hass.states['binary_sensor.living_room_presence_sensor_occupancy'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                        }
                  - type: conditional
                    conditions:
                      - entity: switch.camera_living_room
                        state: 'on'
                    card:
                      show_state: false
                      show_name: false
                      camera_view: live
                      type: picture-entity
                      camera_image: camera.192_168_178_125
                      entity: camera.192_168_178_125
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: separator
                    name: Office
                    icon: mdi:cctv
                    sub_button:
                      - entity: switch.camera_office_outlet
                        icon: ''
                        show_name: false
                        show_state: true
                        state_background: false
                        tap_action:
                          action: toggle
                      - entity: binary_sensor.office_motion_sensors
                        state_background: false
                    styles: |-
                      .bubble-sub-button-1 {
                          opacity: 1 !important;
                          background-color: ${hass.states['switch.camera_office_outlet'].state === 'on' ? 'var(--green)' : 'var(--contrast2)'} !important;
                          color: ${hass.states['switch.camera_office_outlet'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                        }
                      .bubble-sub-button-2 {
                          opacity: 1 !important;
                          background-color: ${hass.states['binary_sensor.office_motion_sensors'].state === 'on' ? 'var(--red)' : 'var(--contrast2)'} !important;
                          color: ${hass.states['binary_sensor.office_motion_sensors'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                        }
                  - type: conditional
                    conditions:
                      - entity: switch.camera_office_outlet
                        state: 'on'
                    card:
                      show_state: false
                      show_name: false
                      camera_view: live
                      type: picture-entity
                      camera_image: camera.192_168_178_77
                      entity: camera.192_168_178_77
        column_span: 3
    type: sections
    max_columns: 3
    path: security
    icon: mdi:security
    cards: []
    dense_section_placement: false
    theme: Rounded-Bubble
  - title: Server
    header:
      card:
        type: markdown
        text_only: true
        content: |-

          {% if (states("sensor.time_of_day") == "morning") %}
            # Good Morning, {{user}}!
            {{ states("input_text.ai_morning_brief") }}
          {% elif (states("sensor.time_of_day") == "day") %}
            # Hey, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}.
          {% elif (states("sensor.time_of_day") == "evening") %}
            # Good Evening, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% elif (states("sensor.time_of_day") == "night") %}
            # Good Night, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% endif %}
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      layout: responsive
      badges_position: top
      badges_wrap: scroll
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.vacation_mode
        color: orange
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.vacation_mode
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_julians_iphone
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_julians_iphone
            state: 'off'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_anna
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_anna
            state: 'off'
          - condition: user
            users:
              - 82def695e9504f63b1eb09150073737d
        icon: mdi:cellphone-message-off
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.lights_on_count
        color: amber
        visibility:
          - condition: numeric_state
            entity: sensor.lights_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#lights
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.chores_on_count
        color: yellow
        visibility:
          - condition: numeric_state
            entity: sensor.chores_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#chores
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            {{ 100 - state_attr('sensor.dishwasher_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            mdi:dishwasher
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            mdi:dishwasher-alert
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            mdi:dishwasher
          {% else %}
            mdi:dishwasher-off
          {% endif %}    
        color: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            blue
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            green
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.dishwasher_status
        label: ''
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_dishwasher
          data: {}
        visibility:
          - condition: state
            entity: sensor.dishwasher_status
            state_not: 'Off'
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            {{ 100 - state_attr('sensor.waschmaschine_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            mdi:washing-machine
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            mdi:washing-machine-alert
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            mdi:washing-machine
          {% else %}
            mdi:washing-machine-off
          {% endif %}
        color: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            blue
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            green
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.washing_machine_status
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_laundry
          data: {}
        visibility:
          - condition: state
            entity: sensor.washing_machine_status
            state_not: 'Off'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.prusalink_progress
        icon: mdi:printer-3d
        color: orange
        visibility:
          - condition: state
            entity: sensor.prusalink
            state: printing
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#3d-printer
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: vacuum.dobby
        color: purple
        visibility:
          - condition: state
            entity: vacuum.dobby
            state_not: docked
        tap_action:
          action: navigate
          navigation_path: home#vacuum
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.fan_outlet
        color: blue
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.fan_outlet
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.desk_webcam
        color: green
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.desk_webcam
            state: 'on'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.wake_time_1
        icon: mdi:alarm
        color: yellow
        visibility:
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
              - 82def695e9504f63b1eb09150073737d
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - entity: binary_sensor.is_alarm_on
                    state: 'on'
                  - entity: sensor.time_of_day
                    state_not: day
                  - condition: state
                    entity: input_boolean.alarm_has_run
                    state: 'off'
                  - entity: alarm_control_panel.security_system
                    state_not: armed_away
                  - entity: alarm_control_panel.security_system
                    state_not: triggered
                  - condition: state
                    entity: person.julian_
                    state: home
              - condition: state
                entity: input_boolean.sound_alarm_is_running
                state: 'on'
        tap_action:
          action: navigate
          navigation_path: home#alarm
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.raspberry_pi_health_attention
        icon: mdi:minidisc
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.raspberry_pi_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sensor.junglemoneynas_volume_1_status
        icon: mdi:nas
        color: red
        visibility:
          - condition: state
            entity: sensor.junglemoneynas_volume_1_status
            state_not: normal
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#nas
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.battery_health_attention
        icon: mdi:battery-20
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.battery_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#battery
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('alarm_control_panel.security_system', 'triggered') or
                is_state('alarm_control_panel.alexa_guard_431b6', 'triggered')  %}
                  TRIGGERED
                {% elif is_state('alarm_control_panel.security_system', 'armed_away')  %}
                  Armed
                {% elif is_state('alarm_control_panel.security_system', 'armed_home') %}
                  Home
                {% elif is_state('alarm_control_panel.security_system', 'armed_night') %}
                  Night
                {% else %}
                  Arming...
                {% endif %}
        icon: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            mdi:shield-home-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            mdi:shield-lock-outline
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            mdi:shield-alert-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            mdi:shield-moon-outline
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            mdi:shield-off-outline
          {% else %}
            mdi:shield-alert-outline
          {% endif %}
        color: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            green
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            red
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            orange
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            blue
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            grey
          {% else %}
            yellow
          {% endif %}
        entity: alarm_control_panel.security_system
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: '{{ states("sensor.window_open_count") }}'
        icon: mdi:window-open-variant
        entity: group.window_sensors
        color: red
        tap_action:
          action: more-info
        visibility:
          - condition: numeric_state
            entity: sensor.window_open_count
            above: 0
      - type: custom:mushroom-template-badge
        icon: |-
          {% if is_state('lock.flat_door', 'locked') %}
            mdi:lock
          {% else %}
            mdi:lock-open
          {% endif %}
        color: |-
          {% if is_state('lock.flat_door', 'locked') %}
            green
          {% else %}
            red
          {% endif %}
        entity: lock.flat_door
        double_tap_action:
          action: call-service
          service: lock.lock
          data: {}
          target:
            entity_id: lock.flat_door
        content: ''
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.home_assistant_update
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.home_assistant_update
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
          - condition: screen
            media_query: '(min-width: 768px)'
        tap_action:
          action: navigate
          navigation_path: server#updates
      - type: custom:mushroom-template-badge
        icon: mdi:account-tie-voice
        color: white
        content: ''
        tap_action:
          action: assist
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: custom:mushroom-template-badge
        entity: person.julian_
        picture: '{{ state_attr("person.julian_","entity_picture") }}'
        content: '{{ states("sensor.julians_apple_watch_area") }}'
        label: Julian
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        icon: ''
        color: ''
        tap_action:
          action: navigate
          navigation_path: home#julian
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:button-card
                    styles:
                      grid:
                        - grid-template-areas: '''item6 item1 item2 item3 item4 item5'''
                        - grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr
                      card:
                        - padding: 5px 0px
                        - background: none
                      custom_fields:
                        item1:
                          - justify-self: center
                        item2:
                          - justify-self: center
                        item3:
                          - justify-self: center
                        item4:
                          - justify-self: center
                        item5:
                          - justify-self: center
                        item6:
                          - justify-self: center
                    custom_fields:
                      item1:
                        card:
                          type: custom:button-card
                          icon: mdi:cloud-arrow-up-outline
                          entity: sensor.speedtest_upload
                          name: Upload
                          show_label: false
                          show_state: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i s'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--red)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            state:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: more-info
                      item2:
                        card:
                          type: custom:button-card
                          name: Ping
                          entity: sensor.speedtest_ping
                          show_label: false
                          show_state: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i s'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--purple)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            state:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: more-info
                      item3:
                        card:
                          type: custom:button-card
                          icon: mdi:lightning-bolt
                          name: Energy
                          label: >-
                            [[[ return
                            states["sensor.tasmota_power_power_curr"].state +
                            "kwh" ]]]
                          show_label: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--yellow)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: energy
                      item4:
                        card:
                          type: custom:button-card
                          entity: sensor.prusalink_progress
                          icon: mdi:printer-3d
                          name: Prusa Mini+
                          label: >-
                            [[[ return states["sensor.prusalink_progress"].state
                            + '%' ]]]
                          show_label: true
                          state:
                            - value: unavailable
                              label: 'Off'
                              icon: mdi:printer-3d-off
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['sensor.prusalink_progress'].state == "unavailable") return "var(--contrast10)";
                                    else return "var(--purple)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#3d-printer'
                      item5:
                        card:
                          type: custom:button-card
                          entity: sensor.qbittorrent_all_torrents
                          icon: mdi:cloud-download-outline
                          name: QBittorrent
                          label: >-
                            [[[ return
                            states["sensor.qbittorrent_download_speed"].state
                            ]]]
                          show_label: true
                          show_state: false
                          state:
                            - value: '0'
                              label: Idle
                              icon: mdi:cloud-off-outline
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i l'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: |
                                  [[[
                                    if (states['sensor.qbittorrent_all_torrents'].state == "0") return "var(--contrast10)";
                                    else return "var(--red)";
                                  ]]]
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            label:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: navigate
                            navigation_path: '#download'
                          double_tap_action:
                            action: more-info
                      item6:
                        card:
                          type: custom:button-card
                          entity: sensor.speedtest_download
                          name: Download
                          icon: mdi:cloud-arrow-down-outline
                          show_label: false
                          show_state: true
                          show_name: true
                          styles:
                            card:
                              - border-radius: 0px
                              - box-shadow: none
                              - padding-right: 5px
                              - background: none
                            grid:
                              - grid-template-areas: '''i n'' ''i s'''
                              - grid-template-columns: min-content
                              - column-gap: 10px
                            icon:
                              - width: 20px
                              - color: var(--blue)
                            img_cell:
                              - width: 20px
                            name:
                              - justify-self: start
                              - font-size: 10px
                              - font-weight: 500
                              - color: var(--contrast14)
                            state:
                              - justify-self: start
                              - font-size: 15px
                              - font-weight: 700
                          tap_action:
                            action: more-info
            grid_options:
              columns: full
              rows: auto
          - type: conditional
            conditions:
              - condition: state
                entity: sensor.qbittorrent_active_torrents
                state_not: '0'
              - condition: state
                entity: sensor.qbittorrent_active_torrents
                state_not: unavailable
            card:
              type: horizontal-stack
              cards:
                - square: false
                  type: grid
                  cards:
                    - type: heading
                      icon: mdi:cloud-arrow-down-outline
                      heading: QBittorrent
                      heading_style: title
                    - type: horizontal-stack
                      cards:
                        - type: custom:swipe-card
                          card_width: calc(100% - 48px)
                          parameters:
                            centeredSlides: true
                            slidesPerView: auto
                            spaceBetween: 16
                            initialSlide: 0
                          cards:
                            - type: sensor
                              entity: sensor.qbittorrent_download_speed
                              hours_to_show: 24
                              detail: 1
                              graph: line
                              name: Download
                              icon: none
                              card_mod:
                                class: graph
                            - type: sensor
                              entity: sensor.qbittorrent_upload_speed
                              hours_to_show: 24
                              detail: 1
                              graph: line
                              name: Upload
                              icon: none
                              card_mod:
                                class: graph
                    - square: false
                      columns: 3
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.qbittorrent_none
                          template: custom_card_sensor_big
                          icon: mdi:cloud-off-outline
                          name: QBittorrent
                          label: Idle
                          state:
                            - value: disconnected
                              icon: mdi:cloud-download-outline
                              label: Downloading
                              styles:
                                card:
                                  - background-color: var(--blue)
                                label:
                                  - color: var(--black)
                                name:
                                  - color: var(--black)
                            - value: uploading
                              icon: mdi:cloud-upload-outline
                              label: Uploading
                              styles:
                                card:
                                  - background-color: var(--blue)
                                label:
                                  - color: var(--black)
                                name:
                                  - color: var(--black)
                        - square: false
                          columns: 1
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: sensor.qbittorrent_all_torrents
                              template: custom_card_sensor_small
                              name: All
                              variables:
                                state: |
                                  [[[ 
                                    var st = states[entity.entity_id].state;
                                    var uni = ' Torrent';
                                    return `
                                    ${st}<span style="font-size:
                                  0.5em;opacity:0.7">${uni}</span>
                                    `
                                  ]]]
                            - type: custom:button-card
                              entity: sensor.qbittorrent_active_torrents
                              template: custom_card_sensor_small
                              name: Active
                              variables:
                                state: |
                                  [[[ 
                                    var st = states[entity.entity_id].state;
                                    var uni = ' Torrent';
                                    return `
                                    <span style="font-size:
                                  0.9em;">${st}</span><span style="font-size:
                                  0.5em;opacity:0.7">${uni}</span>
                                    `
                                  ]]]
                        - square: false
                          columns: 1
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: sensor.qbittorrent_inactive_torrents
                              template: custom_card_sensor_small
                              name: Inactive
                              variables:
                                state: |
                                  [[[ 
                                    var st = states[entity.entity_id].state;
                                    var uni = ' Torrent';
                                    return `
                                    ${st}<span style="font-size:
                                  0.5em;opacity:0.7">${uni}</span>
                                    `
                                  ]]]
                            - type: custom:button-card
                              entity: sensor.qbittorrent_paused_torrents
                              template: custom_card_sensor_small
                              name: Paused
                              variables:
                                state: |
                                  [[[ 
                                    var st = states[entity.entity_id].state;
                                    var uni = ' Torrent';
                                    return `
                                    <span style="font-size:
                                  0.9em;">${st}</span><span style="font-size:
                                  0.5em;opacity:0.7">${uni}</span>
                                    `
                                  ]]]
                  columns: 1
          - type: vertical-stack
            cards:
              - type: heading
                icon: mdi:wifi
                heading: Guest WIFI
                heading_style: title
              - type: conditional
                conditions:
                  - entity: switch.junglemoneyguest
                    state: 'on'
                card:
                  type: custom:mod-card
                  card:
                    type: custom:vertical-stack-in-card
                    cards:
                      - type: horizontal-stack
                        cards:
                          - type: picture
                            image_entity: image.junglemoneyguest_qr_code
                            card_mod:
                              style: |
                                ha-card { 
                                  box-shadow: none;
                                  border-width: var(--ha-card-border-width, 0px);
                                  background: transparent;
                                  width: 75%;
                                  height: 75%;
                                  border-radius: none;
                                  margin-left: 25px;
                                }
                                ha-card > img {
                                  margin-top: 15px;
                                  border-radius: 10px;
                                }
                          - type: markdown
                            content: >-
                              Scan the QR code to connect to the WIFI.


                              <ha-icon icon="mdi:wifi"></ha-icon><ha-icon
                              icon="mdi:none"></ha-icon>JungleMoneyGuest


                              <ha-icon icon="mdi:lock"></ha-icon><ha-icon
                              icon="mdi:none"></ha-icon>IwantWIFI$$$
                            card_mod:
                              style: |
                                ha-card { 
                                  box-shadow: none;
                                  border-width: var(--ha-card-border-width, 0px);
                                  background: transparent;
                                  justify-content: center;
                                  flex-direction: column;
                                  color: var(--contrast20)
                                }
                    card_mod:
                      style: |
                        ha-card { 
                          box-shadow: none;
                          border-width: var(--ha-card-border-width, 0px);
                          background: transparent;
                          margin: 0px 10px 0px 10px;
                        }
                  card_mod:
                    style: |
                      ha-card { 
                        box-shadow: none;
                        border-width: var(--ha-card-border-width, 0px);
                        background: transparent;
                        margin: 0px 10px 0px 10px;
                      }
            visibility:
              - entity: switch.junglemoneyguest
                state: 'on'
          - type: vertical-stack
            cards:
              - type: heading
                icon: mdi:wifi
                heading: Controls
                heading_style: title
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.junglemoney
                    name: WIFI
                    variables:
                      icon_on: mdi:wifi
                      icon_off: mdi:wifi-off
                      color: var(--yellow)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.junglemoneyguest
                    name: Guest WIFI
                    variables:
                      icon_on: mdi:wifi
                      icon_off: mdi:wifi-off
                      color: var(--blue)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.wifi_junglemoney
                    name: Fritz.Box WIFI
                    variables:
                      icon_on: mdi:wifi
                      icon_off: mdi:wifi-off
                      color: var(--red)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.adguard_protection_home
                    name: AdGuard
                    variables:
                      icon_on: mdi:shield-check
                      icon_off: mdi:shield-off
                      color: var(--purple)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.adguard_filtering_home
                    name: Filtering
                    variables:
                      icon_on: mdi:filter
                      icon_off: mdi:filter-off
                      color: var(--orange)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.adguard_parental_control_home
                    icon: mdi:human-male-child
                    name: Parental Control
                    variables:
                      icon_on: mdi:human-male-child
                      icon_off: mdi:human-male-child
                      color: var(--pink)
          - type: vertical-stack
            cards:
              - type: heading
                icon: mdi:router-network
                heading: Router
                heading_style: title
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.fritz_box_6591_cable_kdg_connection
                    template: custom_card_sensor_big
                    name: FRITZ!Box
                    variables:
                      icon_on: mdi:router-wireless
                      icon_off: mdi:router-wireless-off
                      background_color_on: var(--green)
                      background_color_off: var(--red)
                      color_on: var(--black)
                      color_off: var(--black)
                      state: |
                        [[[ 
                          if (entity.state == "on") return `<span style="font-size:0.7em;">Connected</span>`;
                          else return `<span style="font-size:0.6em;">Disconnected</span>`;
                        ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.gateway_round_trip_time_maximum
                        template: custom_card_sensor_small
                        name: Internal
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' ms';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.google_round_trip_time_maximum
                        template: custom_card_sensor_small
                        name: Google
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' ms';
                              return `
                              <span style="font-size:
                            0.9em;">${st}</span><span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.fritz_box_6591_cable_kdg_gb_sent
                        template: custom_card_sensor_small
                        name: Sent
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' GB';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.cloudflare_round_trip_time_maximum
                        template: custom_card_sensor_small
                        name: Cloudflare
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' ms';
                              return `
                              <span style="font-size:
                            0.9em;">${st}</span><span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
          - type: vertical-stack
            cards:
              - type: heading
                icon: mdi:lightning-bolt
                heading: Energy
                heading_style: title
                tap_action:
                  action: navigate
                  navigation_path: energy
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sun.sun
                    name: Production
                    icon: mdi:home-lightning-bolt-outline
                    label: Energy
                    tap_action:
                      action: navigate
                      navigation_path: energy
                      haptic: success
                    template: custom_card_sensor_big
                    variables:
                      icon_on: mdi:home-lightning-bolt-outline
                      icon_off: mdi:weather-night
                      background_color_on: var(--yellow)
                      background_color_off: var(--blue)
                      state_on: above_horizon
                      state_off: below_horizon
                      color_on: var(--black)
                      color_off: var(--black)
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.tasmota_power_power_curr
                        template: custom_card_sensor_small
                        name: Power Current
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' W';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.tasmota_power_total_in
                        template: custom_card_sensor_small
                        name: Consuption
                        variables:
                          state: |
                            [[[ 
                              var st = Math.round(states[entity.entity_id].state);
                              var uni = ' kWh';
                              return `
                              <span style="font-size:
                            0.9em;">${st}</span><span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.plug_energy_power
                        template: custom_card_sensor_small
                        name: Solar Current
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' W';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.plug_energy_today
                        template: custom_card_sensor_small
                        name: Solar Today
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' kWH';
                              return `
                              <span style="font-size:
                            0.9em;">${st}</span><span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
          - type: vertical-stack
            cards:
              - type: conditional
                conditions:
                  - condition: user
                    users:
                      - 3eea636aa3de4c7f9c662ad29c6e92e0
                card:
                  type: heading
                  icon: mdi:account
                  heading: Admin
                  heading_style: title
              - type: conditional
                conditions:
                  - condition: user
                    users:
                      - 3eea636aa3de4c7f9c662ad29c6e92e0
                card:
                  square: false
                  columns: 3
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: binary_sensor.monitored_entities
                      icon: mdi:devices
                      name: Monitored
                      label: >-
                        [[[return
                        states["binary_sensor.monitored_entities"].state]]]
                      template: nav_button_state_small
                      variables:
                        navigation_path: '#monitored'
                        icon_on: mdi:devices
                        icon_off: mdi:devices
                        background_color_on: var(--red)
                        background_color_off: var(--green)
                    - type: custom:button-card
                      entity: binary_sensor.home_assistant_update
                      icon: mdi:update
                      name: Updates
                      label: |
                        [[[
                          if (entity.state == "on") return "Available";
                          else return "None";
                        ]]]
                      template: nav_button_small
                      variables:
                        navigation_path: '#updates'
                        icon_on: mdi:update
                        icon_off: mdi:update
                        background_color_on: var(--red)
                        background_color_off: var(--contrast2)
                        color_off: null
                    - type: custom:button-card
                      entity: binary_sensor.battery_health_attention
                      name: Batteries
                      label: >-
                        [[[return
                        states["binary_sensor.battery_health_attention"].state]]]
                      template: nav_button_state_small
                      variables:
                        navigation_path: '#battery'
                        icon_on: mdi:battery-alert-variant-outline
                        icon_off: mdi:battery-80
                    - type: custom:button-card
                      entity: sensor.junglemoneynas_volume_1_status
                      icon: mdi:nas
                      name: 'Status: Error'
                      label: >-
                        [[[return
                        Math.round(states["sensor.junglemoneynas_volume_1_volume_used"].state)
                        + "%"]]]
                      template: nav_button_small
                      variables:
                        navigation_path: '#nas'
                        icon_on: mdi:nas
                        icon_off: mdi:nas
                        state_off: normal
                        background_color_on: var(--red)
                        background_color_off: var(--blue)
                      state:
                        - value: normal
                          name: 'Status: normal'
                    - type: custom:button-card
                      entity: binary_sensor.uptime_kuma
                      icon: mdi:sort-clock-descending-outline
                      name: Uptime Kuma
                      label: '[[[return states["binary_sensor.uptime_kuma"].state]]]'
                      template: nav_button_small
                      variables:
                        navigation_path: '#uptime'
                        icon_on: mdi:sort-clock-descending-outline
                        icon_off: mdi:sort-clock-descending-outline
                        background_color_on: var(--purple)
                        background_color_off: var(--red)
        column_span: 2
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template: custom_card_user
              - type: custom:bubble-card
                card_type: empty-column
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: custom:decluttering-card
            template: footer_template
          - type: custom:bubble-card
            card_type: separator
            name: Server
            icon: mdi:server-outline
            sub_button: []
            styles: |-
              .bubble-sub-button-1 {
                  opacity: 1 !important;
                  background-color: var(--contrast2) !important;
                  color: var(--contrast20) !important;
                }
              .bubble-sub-button-2 {
                  opacity: 1 !important;
                  background-color: ${hass.states['switch.security_cameras'].state === 'on' ? 'var(--red)' : 'var(--contrast2)'} !important;
                  color: ${hass.states['switch.security_cameras'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                }
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 767px)'
      - type: grid
        cards:
          - type: custom:navbar-card
            desktop:
              position: left
              min_width: 768
              show_labels: true
            mobile:
              show_labels: true
            routes:
              - icon: mdi:home-outline
                icon_selected: mdi:home-assistant
                url: /dashboard-bubble/home
                label: Home
              - icon: mdi:sofa-outline
                icon_selected: mdi:sofa
                label: Rooms
                badge:
                  show: |
                    [[[ return states['light.all_lights'].state === 'on' ]]]
                  color: var(--yellow-color)
                  count: |
                    [[[ return states['sensor.lights_on_count'].state ]]]
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:sofa-outline
                    url: /dashboard-bubble/home#living-room
                    label: Living Room
                  - icon: mdi:bed-king-outline
                    url: /dashboard-bubble/home#bedroom
                    label: Bedroom
                  - icon: mdi:monitor
                    url: /dashboard-bubble/home#office
                    label: Office
                  - icon: mdi:silverware-variant
                    url: /dashboard-bubble/home#kitchen
                    label: Kitchen
                  - icon: mdi:paper-roll-outline
                    url: /dashboard-bubble/home#bathroom
                    label: Bathroom
                  - icon: mdi:desk
                    url: /dashboard-bubble/home#guest-room
                    label: Guest Room
                  - icon: mdi:door
                    url: /dashboard-bubble/home#corridor
                    label: Corridor
              - icon: mdi:music
                url: /dashboard-bubble/music
                label: Music
                badge:
                  show: >
                    [[[ return states['media_player.music'].state === 'playing'
                    ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return false;
                    else if (states['remote.harmony_hub'].state == "on") return true;
                    else return false;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:television
                url: /dashboard-bubble/home#remote
                label: TV
                badge:
                  show: >
                    [[[ return states['media_player.tv_and_ps5'].state ===
                    'playing' ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return true;
                    else if (states['remote.harmony_hub'].state == "on") return false;
                    else return true;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:shield-outline
                icon_selected: mdi:security
                url: /dashboard-bubble/security
                label: Security
                badge:
                  show: >
                    [[[ return states['binary_sensor.window_sensors'].state ===
                    'on' ]]]
                  color: var(--red-color)
                  count: |
                    [[[ return states['sensor.window_open_count'].state ]]]
              - icon: mdi:face-agent
                url: /dashboard-bubble/home#julian
                label: Julian
                hidden: |
                  [[[ return user.name != "Julian" ]]]
                badge:
                  show: >
                    [[[ return states['input_boolean.debug_rounded'].state ===
                    'on' ]]]
                  color: var(--red-color)
              - icon: mdi:face-woman
                url: /dashboard-bubble/home#anna
                label: Anna
                hidden: |
                  [[[ return user.name != "Anna" ]]]
              - icon: mdi:dots-horizontal
                label: More
                selected: true
                badge:
                  show: |
                    [[[
                      if (states['binary_sensor.monitored_entities'].state == "on") return true;
                      else if (states['binary_sensor.home_assistant_update'].state == "on") return true;
                      else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                      else return false;
                    ]]]
                  color: var(--red-color)
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:server-outline
                    url: /dashboard-bubble/server
                    label: Server
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                    badge:
                      show: |
                        [[[
                          if (states['binary_sensor.monitored_entities'].state == "on") return true;
                          else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                          else return false;
                        ]]]
                      color: var(--red-color)
                  - icon: mdi:cart
                    url: /dashboard-bring/home
                    label: Shopping List
                    badge:
                      show: |
                        [[[ return states['todo.shopping_list'].state > 0 ]]]
                      color: var(--red-color)
                      count: |
                        [[[ return states['todo.shopping_list'].state ]]]
                  - icon: mdi:bookshelf
                    url: /d5369777_music_assistant/ingress
                    label: Music Assistant
                  - icon: mdi:cog
                    url: /config/dashboard
                    label: Settings
                    badge:
                      show: >
                        [[[ return
                        states['binary_sensor.home_assistant_update'].state ===
                        'on' ]]]
                      color: var(--red-color)
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                  - icon: mdi:hammer
                    url: /developer-tools/yaml
                    label: Developer Tools
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
            styles: |
              .navbar {
                --navbar-primary-color: var(--blue-color);
                background: var(--contrast2);
              }
          - type: vertical-stack
            cards:
              - type: heading
                icon: mdi:wifi
                heading: Controls
                heading_style: title
                badges:
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.speedtest_download
                    color: blue
                    icon: mdi:arrow-down-bold
                  - type: entity
                    show_state: true
                    show_icon: true
                    entity: sensor.speedtest_upload
                    color: red
                    icon: mdi:arrow-up-bold
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.junglemoney
                    name: WIFI
                    variables:
                      icon_on: mdi:wifi
                      icon_off: mdi:wifi-off
                      color: var(--yellow)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.junglemoneyguest
                    name: Guest WIFI
                    variables:
                      icon_on: mdi:wifi
                      icon_off: mdi:wifi-off
                      color: var(--blue)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.wifi_junglemoney
                    name: Fritz.Box WIFI
                    variables:
                      icon_on: mdi:wifi
                      icon_off: mdi:wifi-off
                      color: var(--red)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.adguard_protection_home
                    name: AdGuard
                    variables:
                      icon_on: mdi:shield-check
                      icon_off: mdi:shield-off
                      color: var(--purple)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.adguard_filtering_home
                    name: Filtering
                    variables:
                      icon_on: mdi:filter
                      icon_off: mdi:filter-off
                      color: var(--orange)
                  - type: custom:button-card
                    template: switch_template
                    entity: switch.adguard_parental_control_home
                    icon: mdi:human-male-child
                    name: Parental Control
                    variables:
                      icon_on: mdi:human-male-child
                      icon_off: mdi:human-male-child
                      color: var(--pink)
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: vertical-stack
            cards:
              - type: heading
                icon: mdi:server-outline
                heading: Optiplex
                heading_style: title
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.raspberry_pi_health_attention
                    name: Optiplex Health
                    icon: mdi:minidisc
                    template: custom_card_sensor_big
                    variables:
                      icon_on: mdi:minidisc
                      icon_off: mdi:minidisc
                      background_color_on: var(--red)
                      background_color_off: var(--green)
                      color_on: var(--black)
                      color_off: var(--black)
                      state: |
                        [[[ 
                          if (entity.state == "on") return `<span style="font-size:1em;">Bad</span>`;
                          else return `<span style="font-size:1em;">Good</span>`;
                        ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.processor_use
                        template: custom_card_sensor_small
                        name: Processor
                      - type: custom:button-card
                        entity: sensor.disk_use_percent
                        template: custom_card_sensor_small
                        name: Disk Use
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' %';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.memory_use_percent
                        template: custom_card_sensor_small
                        name: Memory Use
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' %';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.disk_free
                        template: custom_card_sensor_small
                        name: Disk Free
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' GB';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
          - type: heading
            icon: mdi:power-plug-battery
            heading: UPS
            heading_style: title
          - square: false
            columns: 3
            type: grid
            cards:
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.eaton_ups_battery_charge
                    template: custom_card_sensor_small
                    name: Battery
                  - type: custom:button-card
                    entity: sensor.eaton_ups_battery_runtime
                    template: custom_card_sensor_small
                    name: Runtime
                    show_label: false
                    show_state: true
                    show_icon: false
                    styles:
                      grid:
                        - grid-template-columns: 1fr
                        - grid-template-areas: '"s" "n"'
                      state:
                        - justify-self: start
                        - font-size: 20px
                        - padding-top: 4px
                        - font-weight: 500
                        - color: var(--contrast20)
                      card:
                        - height: 66px
                        - border-radius: 24px
                        - padding: 12px 10px 10px 14px
                        - background: var(--contrast2)
                      name:
                        - justify-self: start
                        - font-size: 11px
                        - color: var(--contrast20)
                        - opacity: 0.7
                        - padding-bottom: 7px
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.eaton_ups_load
                    template: custom_card_sensor_small
                    name: Load
                  - type: custom:button-card
                    entity: sensor.eaton_ups_output_voltage
                    template: custom_card_sensor_small
                    name: Output
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' V';
                          return `
                          ${parseFloat(st).toFixed(0)}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
              - type: custom:button-card
                entity: sensor.eaton_ups_status
                name: Eaton UPS
                icon: mdi:power-plug-battery-outline
                template: custom_card_sensor_big
                variables:
                  icon_on: mdi:power-plug-battery-outline
                  icon_off: mdi:power-plug-battery-outline
                  state_on: Online
                  state_off: On Battery
                  background_color_on: var(--green)
                  background_color_off: var(--red)
                  color_on: var(--black)
                  color_off: var(--black)
                  state: |
                    [[[ 
                      return entity.state;
                    ]]]
          - type: heading
            icon: mdi:account
            heading: Admin
            heading_style: title
            visibility:
              - condition: user
                users:
                  - 3eea636aa3de4c7f9c662ad29c6e92e0
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: conditional
            conditions:
              - condition: user
                users:
                  - 3eea636aa3de4c7f9c662ad29c6e92e0
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
            card:
              square: false
              columns: 3
              type: grid
              cards:
                - type: custom:button-card
                  entity: binary_sensor.monitored_entities
                  icon: mdi:devices
                  name: Monitored
                  label: >-
                    [[[return
                    states["binary_sensor.monitored_entities"].state]]]
                  template: nav_button_state_small
                  variables:
                    navigation_path: '#monitored'
                    icon_on: mdi:devices
                    icon_off: mdi:devices
                    background_color_on: var(--red)
                    background_color_off: var(--green)
                - type: custom:button-card
                  entity: binary_sensor.home_assistant_update
                  icon: mdi:update
                  name: Updates
                  label: |
                    [[[
                      if (entity.state == "on") return "Available";
                      else return "None";
                    ]]]
                  template: nav_button_small
                  variables:
                    navigation_path: '#updates'
                    icon_on: mdi:update
                    icon_off: mdi:update
                    background_color_on: var(--red)
                    background_color_off: var(--contrast2)
                    color_off: null
                - type: custom:button-card
                  entity: binary_sensor.battery_health_attention
                  name: Batteries
                  label: >-
                    [[[return
                    states["binary_sensor.battery_health_attention"].state]]]
                  template: nav_button_state_small
                  variables:
                    navigation_path: '#battery'
                    icon_on: mdi:battery-alert-variant-outline
                    icon_off: mdi:battery-80
                - type: custom:button-card
                  entity: sensor.junglemoneynas_volume_1_status
                  icon: mdi:nas
                  name: 'Status: Error'
                  label: >-
                    [[[return
                    Math.round(states["sensor.junglemoneynas_volume_1_volume_used"].state)
                    + "%"]]]
                  template: nav_button_small
                  variables:
                    navigation_path: '#nas'
                    icon_on: mdi:nas
                    icon_off: mdi:nas
                    state_off: normal
                    background_color_on: var(--red)
                    background_color_off: var(--blue)
                  state:
                    - value: normal
                      name: 'Status: normal'
                - type: custom:button-card
                  entity: binary_sensor.uptime_kuma
                  icon: mdi:sort-clock-descending-outline
                  name: Uptime Kuma
                  label: '[[[return states["binary_sensor.uptime_kuma"].state]]]'
                  template: nav_button_small
                  variables:
                    navigation_path: '#uptime'
                    icon_on: mdi:sort-clock-descending-outline
                    icon_off: mdi:sort-clock-descending-outline
                    background_color_on: var(--purple)
                    background_color_off: var(--red)
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#monitored'
                button_type: name
                name: Monitored Entities
                icon: mdi:check-network
              - type: custom:auto-entities
                card:
                  type: entities
                filter:
                  template: |
                    {{ expand('group.monitored_entities')
                            | selectattr('state', 'eq', 'unavailable')
                            |sort(attribute='attributes.friendly_name')
                            |map(attribute='entity_id')
                            |list
                      }}
                show_empty: true
              - type: custom:auto-entities
                card:
                  type: entities
                filter:
                  template: |
                    {{ expand('group.monitored_automations')
                            | selectattr('state', 'eq', 'off')
                            |sort(attribute='attributes.friendly_name')
                            |map(attribute='entity_id')
                            |list
                      }}
                show_empty: true
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#battery'
                button_type: name
                name: Batteries
                icon: mdi:battery-50
                sub_button:
                  - entity: binary_sensor.battery_health_attention
                    state_background: false
                    show_state: true
                  - entity: binary_sensor.battery_health_attention_sensors
                    show_state: true
                    show_icon: true
                    state_background: false
                    icon: mdi:battery-10
                    double_tap_action:
                      action: perform-action
                      perform_action: input_boolean.toggle
                      target:
                        entity_id: input_boolean.battery_health
                styles: |-
                  .bubble-sub-button-1 {
                      opacity: 1 !important;
                      background-color: ${hass.states['binary_sensor.battery_health_attention'].state === 'on' ? 'var(--red)' : 'var(--contrast2)'} !important;
                      color: ${hass.states['binary_sensor.battery_health_attention'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                    }
                  .bubble-sub-button-2 {
                      opacity: 1 !important;
                      background-color: ${hass.states['binary_sensor.battery_health_attention_sensors'].state === 'on' ? 'var(--red)' : 'var(--contrast2)'} !important;
                      color: ${hass.states['binary_sensor.battery_health_attention_sensors'].state === 'on' ? 'var(--black)' : 'var(--contrast20)'} !important;
                    }
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.julians_iphone_12_battery_level
                    name: Julians iPhone 14
                    label: >-
                      [[[return
                      states["sensor.julians_iphone_12_battery_level"].state +
                      "%"]]]
                    template: button_template
                    variables:
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: sensor.macbook_pro_von_julian_internal_battery_level
                    name: MacBook Pro
                    label: >-
                      [[[return
                      states["sensor.macbook_pro_von_julian_internal_battery_level"].state
                      + "%"]]]
                    template: button_template
                    variables:
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: sensor.ipad_von_julian_battery_level
                    name: iPad Pro
                    label: >-
                      [[[return
                      states["sensor.ipad_von_julian_battery_level"].state +
                      "%"]]]
                    template: button_template
                    variables:
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: sensor.valentin_battery_level
                    name: Valentin Tracker
                    label: >-
                      [[[return states["sensor.valentin_battery_level"].state +
                      "%"]]]
                    template: button_template
                    variables:
                      icon2: mdi:battery-50
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: sensor.dobby_battery
                    name: Dobby
                    label: >-
                      [[[return Math.round(states["sensor.dobby_battery"].state)
                      + "%"]]]
                    template: button_template
                    variables:
                      icon2: mdi:battery-50
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: sensor.quest_2_battery_level
                    name: Quest 2
                    label: >-
                      [[[return states["sensor.quest_2_battery_level"].state +
                      "%"]]]
                    template: button_template
                    variables:
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.junglemoney_ipad_battery_level
                    name: iPad Battery
                    label: >-
                      [[[return
                      states["sensor.junglemoney_ipad_battery_level"].state
                      +"%"]]]
                    template: button_template
                    variables:
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: sensor.junglemoney_ipad_battery_state
                    name: iPad State
                    label: >-
                      [[[return
                      states["sensor.junglemoney_ipad_battery_state"].state]]]
                    template: button_template
                    variables:
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: sensor.body_battery
                    name: Weight
                    icon: mdi:battery
                    label: '[[[return states["sensor.body_battery"].state]]]'
                    template: button_template
                    variables:
                      icon2: mdi:battery-50
                      state_on: low
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: sensor.doorbell_sensor_battery
                    name: Doorbell Sensor
                    label: >-
                      [[[return states["sensor.doorbell_sensor_battery"].state +
                      "%"]]]
                    template: button_template
                    variables:
                      icon2: mdi:battery
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                    styles:
                      card:
                        - background-color: |
                            [[[
                              if (entity.state < 10) return "var(--red)";
                              else if (entity.state < 20) return "var(--yellow)";
                              else return "var(--contrast2)";
                            ]]]
                      name:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                      label:
                        - color: |
                            [[[
                              if (entity.state < 20) return "var(--black)";
                              else return "var(--contrast20)";
                            ]]]
                  - type: custom:button-card
                    entity: binary_sensor.flat_door_battery_critical
                    name: Flat Door
                    icon: mdi:battery
                    label: >-
                      [[[return
                      states["binary_sensor.flat_door_battery_critical"].state]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:battery-10";
                          else return "mdi:battery";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: binary_sensor.front_door_battery_critical
                    name: Front Door
                    icon: mdi:battery
                    label: >-
                      [[[return
                      states["binary_sensor.front_door_battery_critical"].state]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:battery-10";
                          else return "mdi:battery";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
              - type: custom:battery-state-card
                title: ''
                sort:
                  by: state
                collapse: 4
                entities:
                  - entity: sensor.bathroom_switch_battery
                  - entity: sensor.bedroom_switch_battery
                  - entity: sensor.guestroom_switch_battery
                  - entity: sensor.kitchen_switch_battery
                  - entity: sensor.livingroom_switch_battery
                  - entity: sensor.office_switch_battery
                  - entity: sensor.office_switch_2_battery
                  - entity: sensor.bed_switch_left_battery
                  - entity: sensor.bed_switch_right_battery
                  - entity: sensor.corridor_switch_battery
                  - entity: sensor.bathroom_motion_sensor_battery
                  - entity: sensor.bathroom_shower_motion_sensor_battery
                  - entity: sensor.office_motion_sensor_battery
                  - entity: sensor.office_desk_motion_sensor_battery
                  - entity: sensor.kitchen_motion_sensor_battery
                  - entity: sensor.guest_room_motion_sensor_battery
                  - entity: sensor.living_room_window_door_sensor_battery
                  - entity: sensor.kitchen_window_door_sensor_battery
                  - entity: sensor.office_window_door_sensor_battery
                  - entity: sensor.bed_room_window_door_sensor_battery
                  - entity: sensor.guest_room_window_door_sensor_battery
                  - entity: sensor.bathroom_window_door_sensor_battery
                  - entity: sensor.hue_tap_dial_battery
                  - entity: sensor.hue_motion_sensor_1_battery
                  - entity: sensor.bathroom_water_leakage_sensor_battery
                  - entity: sensor.living_room_subwoofer_battery
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.va3661765376_battery_state
                    name: Living Room
                    label: >-
                      [[[return
                      states["binary_sensor.va3661765376_battery_state"].state]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:battery-10";
                          else return "mdi:battery";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: binary_sensor.va2472352256_battery_state
                    name: Bed Room
                    label: >-
                      [[[return
                      states["binary_sensor.va2472352256_battery_state"].state]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:battery-10";
                          else return "mdi:battery";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: binary_sensor.va2831290112_battery_state
                    name: Office
                    label: >-
                      [[[return
                      states["binary_sensor.va2831290112_battery_state"].state]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:battery-10";
                          else return "mdi:battery";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: binary_sensor.va3577682688_battery_state
                    name: Kitchen
                    label: >-
                      [[[return
                      states["binary_sensor.va3577682688_battery_state"].state]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:battery-10";
                          else return "mdi:battery";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: binary_sensor.va4064418560_battery_state
                    name: Bathroom
                    label: >-
                      [[[return
                      states["binary_sensor.va4064418560_battery_state"].state]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:battery-10";
                          else return "mdi:battery";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
                  - type: custom:button-card
                    entity: binary_sensor.va3393133312_battery_state
                    name: Guest Room
                    label: >-
                      [[[return
                      states["binary_sensor.va3393133312_battery_state"].state]]]
                    template: button_template
                    variables:
                      icon2: |
                        [[[
                          if (entity.state == "on") return "mdi:battery-10";
                          else return "mdi:battery";
                        ]]]
                      background_color_off: var(--contrast2)
                      background_color_on: var(--red)
                      color_on: var(--contrast1)
                      color_off: var(--contrast20)
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#nas'
                button_type: name
                name: NAS
                icon: mdi:nas
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_cpu_utilization_total
                    template: custom_card_sensor_small
                    name: CPU Use
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_temperature
                    template: custom_card_sensor_small
                    name: Temperature
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' °C';
                          return `
                          ${parseFloat(st).toFixed(0)}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_volume_1_volume_used
                    template: custom_card_sensor_small
                    name: Volume Used
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_memory_usage_real
                    template: custom_card_sensor_small
                    name: Memory Use
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_volume_1_average_disk_temp
                    template: custom_card_sensor_small
                    name: Disk Temp
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' °C';
                          return `
                          ${parseFloat(st).toFixed(0)}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_volume_1_used_space
                    template: custom_card_sensor_small
                    name: Space Used
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' TB';
                          return `
                          ${parseFloat(st).toFixed(0)}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_volume_1_status
                    template: custom_card_sensor_big
                    name: Volume 1
                    variables:
                      icon_on: mdi:alert-circle-outline
                      icon_off: mdi:nas
                      state_on: attention
                      state_off: normal
                      background_color_on: var(--red)
                      background_color_off: var(--blue)
                      color_on: var(--black)
                      color_off: var(--black)
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = '';
                          return `
                          <span style="font-size:
                        0.9em;">${st}</span>
                          `
                        ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.junglemoneynas_drive_1_status
                        template: custom_card_sensor_small
                        name: Drive 1
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = '';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.junglemoneynas_drive_3_status
                        template: custom_card_sensor_small
                        name: Drive 3
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = '';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.junglemoneynas_drive_2_status
                        template: custom_card_sensor_small
                        name: Drive 2
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = '';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.junglemoneynas_drive_4_status
                        template: custom_card_sensor_small
                        name: Drive 4
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = '';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                  - type: custom:button-card
                    entity: binary_sensor.junglemoneynas_security_status
                    template: custom_card_sensor_small
                    name: Security Status
                    state:
                      - value: 'off'
                        label: safe
                      - value: 'on'
                        label: Problem
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = '';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_cache_device_1_status_2
                    template: custom_card_sensor_small
                    name: Cache 1
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = '';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    entity: sensor.junglemoneynas_cache_device_1_status
                    template: custom_card_sensor_small
                    name: Cache 2
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = '';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#updates'
                button_type: name
                name: Updates
                icon: mdi:update
              - square: false
                type: grid
                cards:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: binary_sensor.home_assistant_update
                        state: 'on'
                      - condition: user
                        users:
                          - 3eea636aa3de4c7f9c662ad29c6e92e0
                    card:
                      type: custom:auto-entities
                      show_empty: false
                      card:
                        square: false
                        type: grid
                        columns: 1
                      card_param: cards
                      filter:
                        template: |-
                          {% set updates= states.update
                                | selectattr('state', 'eq', 'on')
                                |sort(attribute='attributes.friendly_name')
                                |map(attribute='entity_id')
                                |list
                          %}
                          {% for cat in updates -%}
                          {{
                            {
                              'type': 'tile',
                              'entity': cat,
                              'features': [
                                {
                                  'type': 'update-actions',
                                  'backup': 'ask'
                                }
                              ]
                            }
                          }},
                          {%- endfor %}
                columns: 1
              - type: conditional
                conditions:
                  - condition: user
                    users:
                      - 3eea636aa3de4c7f9c662ad29c6e92e0
                  - condition: state
                    entity: binary_sensor.home_assistant_update
                    state: 'off'
                card:
                  type: markdown
                  content: |-
                    **Up-to-date**

                    Congratulations everything is up to date. 
              - type: conditional
                conditions:
                  - condition: user
                    users:
                      - bc1acd39ddb3478899834ca16eea656b
                      - 413b4c12ccc44bb982704fc87f34fb99
                      - 5fb1f01df88d43d293f30c47bc729f9e
                      - 4a8a45a495f54e808c3f4c4cd1639291
                      - 82def695e9504f63b1eb09150073737d
                card:
                  type: markdown
                  content: |-
                    **Access denied**

                    Sorry you don't have permission to this page.
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#download'
                button_type: name
                name: QBittorrent
                icon: mdi:check-network
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: sensor
                    entity: sensor.qbittorrent_download_speed
                    hours_to_show: 24
                    detail: 1
                    graph: line
                    name: Download
                    icon: none
                    card_mod:
                      class: graph
                  - type: sensor
                    entity: sensor.qbittorrent_upload_speed
                    hours_to_show: 24
                    detail: 1
                    graph: line
                    name: Upload
                    icon: none
                    card_mod:
                      class: graph
              - type: custom:bubble-card
                card_type: empty-column
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.qbittorrent_none
                    template: custom_card_sensor_big
                    icon: mdi:cloud-off-outline
                    name: QBittorrent
                    label: Idle
                    state:
                      - value: disconnected
                        icon: mdi:cloud-download-outline
                        label: Downloading
                        styles:
                          card:
                            - background-color: var(--blue)
                          label:
                            - color: var(--black)
                          name:
                            - color: var(--black)
                      - value: uploading
                        icon: mdi:cloud-upload-outline
                        label: Uploading
                        styles:
                          card:
                            - background-color: var(--blue)
                          label:
                            - color: var(--black)
                          name:
                            - color: var(--black)
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.qbittorrent_all_torrents
                        template: custom_card_sensor_small
                        name: All
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' Torrent';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.qbittorrent_active_torrents
                        template: custom_card_sensor_small
                        name: Active
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' Torrent';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.qbittorrent_inactive_torrents
                        template: custom_card_sensor_small
                        name: Inactive
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' Torrent';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
                      - type: custom:button-card
                        entity: sensor.qbittorrent_paused_torrents
                        template: custom_card_sensor_small
                        name: Paused
                        variables:
                          state: |
                            [[[ 
                              var st = states[entity.entity_id].state;
                              var uni = ' Torrent';
                              return `
                              ${st}<span style="font-size:
                            0.5em;opacity:0.7">${uni}</span>
                              `
                            ]]]
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#3d-printer'
                button_type: name
                name: 3d Printer
                icon: mdi:printer-3d
              - type: conditional
                conditions:
                  - condition: state
                    entity: sensor.prusalink
                    state: printing
                card:
                  show_state: false
                  show_name: false
                  camera_view: auto
                  type: picture-entity
                  entity: camera.prusalink_preview
                  camera_image: camera.prusalink_preview
                  tap_action:
                    action: more-info
              - type: custom:button-card
                entity: sensor.prusalink
                name: |
                  [[[
                    if (states['sensor.prusalink'].state == 'printing') {
                      return states['sensor.prusalink_filename'].state;
                    } else {
                      return 'Prusa Mini+';
                    }
                  ]]]
                icon: mdi:printer-3d
                show_name: true
                show_icon: true
                show_label: true
                show_state: false
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
                label: |
                  [[[
                    if (states['sensor.prusalink'].state != 'unavailable') {
                      return states['sensor.prusalink'].state;
                    } else {
                      return 'Off';
                    }
                  ]]]
                custom_fields:
                  bar: |
                    [[[
                      var color = "var(--green)";
                      var state = states['sensor.prusalink_progress'].state;
                      if (state < 10) color = "var(--red)";
                      else if (state < 50) color = "var(--yellow)";
                      else if (state < 90) color = "var(--orange)";
                      return `
                      <div>
                      <div style="background:${color}; height: 12px; width:${state}%">
                      </div>
                      </div>`
                    ]]]
                  rem:
                    card:
                      type: conditional
                      conditions:
                        - condition: state
                          entity: sensor.prusalink
                          state: printing
                      card:
                        type: custom:button-card
                        entity: sensor.prusamini_timer
                        name: |
                          [[[
                           var remainingTime = states['sensor.prusamini_timer'].attributes.remaining;
                           return `Time: ${remainingTime}`;
                          ]]]
                        show_icon: false
                        styles:
                          card:
                            - width: min
                            - background: none
                            - overflow: visible
                          name:
                            - font-size: 12px
                            - color: |
                                [[[
                                  if (entity.state == 'on') {
                                    return 'var(--black)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                            - font-weight: 500
                  start:
                    card:
                      type: conditional
                      conditions:
                        - condition: state
                          entity: sensor.prusa_mini
                          state: printing
                      card:
                        type: custom:button-card
                        entity: sensor.prusamini_timer
                        name: |
                          [[[
                           var endTime = states['sensor.prusamini_timer'].attributes.triggered;
                           // Extract time from the end time
                           var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                           return `${time} Uhr`;
                           ]]]
                        show_icon: false
                        styles:
                          card:
                            - width: min
                            - padding: 5px
                            - background: none
                          name:
                            - font-size: 12px
                            - color: |
                                [[[
                                  if (entity.state == 'on') {
                                    return 'var(--black)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                  end:
                    card:
                      type: conditional
                      conditions:
                        - condition: state
                          entity: sensor.prusalink
                          state: printing
                      card:
                        type: custom:button-card
                        entity: sensor.prusamini_timer
                        name: |
                          [[[
                           var endTime = states['sensor.prusamini_timer'].attributes.end_time;
                           // Extract time from the end time
                           var time = new Date(endTime).toLocaleTimeString('en-US', {hour: '2-digit', minute: '2-digit', hour12: false});
                           return `${time} Uhr`;
                           ]]]
                        show_icon: false
                        styles:
                          card:
                            - width: min
                            - padding: 5px
                            - background: none
                          name:
                            - font-size: 12px
                            - color: |
                                [[[
                                  if (entity.state == 'on') {
                                    return 'var(--black)';
                                  } else {
                                    return 'var(--primary-background-color)';
                                  }
                                ]]]
                  icon1:
                    card:
                      type: custom:button-card
                      icon: mdi:printer-3d
                      styles:
                        card:
                          - background-color: var(--contrast1)
                          - width: 30px
                          - height: 30px
                        icon:
                          - width: 18px
                          - color: var(--contrast20)
                styles:
                  grid:
                    - grid-template-areas: '". icon1" "l l" "n n" "rem rem" "bar bar" "start end"'
                    - grid-template-rows: 24px 1fr 24px min-content min-content min-content
                    - grid-template-columns: 60% 40%
                  card:
                    - height: 100%
                    - padding: 1rem
                    - background: |
                        [[[
                          if (entity.state == 'printing') {
                            return 'var(--purple)';
                          } else if (entity.state == 'attention') {
                            return 'var(--red)';
                          } else if (entity.state == 'error') {
                            return 'var(--red)';
                          } else if (entity.state == 'finished') {
                            return 'var(--green)';
                          } else {
                            return 'var(--contrast2)';
                          }
                        ]]]
                  img_cell:
                    - position: absolute
                    - top: 20%
                    - left: 40%
                    - overflow: visible
                  icon:
                    - position: absolute
                    - width: 20em
                    - opacity: 20%
                    - color: |
                        [[[
                          if (entity.state == 'printing') {
                            return 'var(--black)';
                          } else if (entity.state == 'attention') {
                            return 'var(--black)';
                          } else if (entity.state == 'error') {
                            return 'var(--black)';
                          } else if (entity.state == 'finished') {
                            return 'var(--black)';
                          } else {
                            return 'var(--contrast20)';
                          }
                        ]]]
                    - transform: rotate(-20deg)
                  label:
                    - text-align: left
                    - font-size: 18px
                    - font-weight: 500
                    - justify-self: start
                    - align-self: end
                    - overflow: visible
                    - color: |
                        [[[
                          if (entity.state == 'printing') {
                            return 'var(--black)';
                          } else if (entity.state == 'attention') {
                            return 'var(--black)';
                          } else if (entity.state == 'error') {
                            return 'var(--black)';
                          } else if (entity.state == 'finished') {
                            return 'var(--black)';
                          } else {
                            return 'var(--contrast20)';
                          }
                        ]]]
                  name:
                    - text-align: left
                    - font-size: 12px
                    - opacity: 0.7
                    - justify-self: start
                    - align-self: center
                    - overflow: visible
                    - color: |
                        [[[
                          if (entity.state == 'printing') {
                            return 'var(--black)';
                          } else if (entity.state == 'attention') {
                            return 'var(--black)';
                          } else if (entity.state == 'error') {
                            return 'var(--black)';
                          } else if (entity.state == 'finished') {
                            return 'var(--black)';
                          } else {
                            return 'var(--contrast20)';
                          }
                        ]]]
                  custom_fields:
                    bar:
                      - justify-self: start
                      - width: 100%
                      - height: |
                          [[[
                            if (entity.state == 'printing') {
                              return '12px';
                            } else {
                              return '0px';
                            }
                          ]]]
                      - background: var(--contrast1)
                      - border-radius: 24px
                    end:
                      - justify-self: end
                    start:
                      - justify-self: start
                    rem:
                      - justify-self: start
                      - align-self: end
                      - height: |
                          [[[
                            if (entity.state == 'printing') {
                              return '27px';
                            } else {
                              return '0px';
                            }
                          ]]]
                    icon1:
                      - justify-self: end
                      - width: 24px
                      - color: |
                          [[[
                            if (entity.state == 'printing') {
                              return 'var(--black)';
                            } else if (entity.state == 'attention') {
                              return 'var(--black)';
                            } else if (entity.state == 'error') {
                            return 'var(--black)';
                          } else if (entity.state == 'finished') {
                            return 'var(--black)';
                            } else {
                              return 'var(--contrast20)';
                            }
                          ]]]
                    icon2:
                      - justify-self: end
                      - align-self: end
                      - width: 24px
                      - color: |
                          [[[
                            if (entity.state == 'printing') {
                              return 'var(--black)';
                            } else if (entity.state == 'attention') {
                              return 'var(--black)';
                            } else if (entity.state == 'error') {
                            return 'var(--black)';
                          } else if (entity.state == 'finished') {
                            return 'var(--black)';
                            } else {
                              return 'var(--contrast20)';
                            }
                          ]]]
                  hold_action:
                    action: more-info
              - type: conditional
                conditions:
                  - condition: state
                    entity: sensor.prusalink_progress
                    state_not: unavailable
                card:
                  square: false
                  columns: 3
                  type: grid
                  cards:
                    - type: custom:button-card
                      template: button_template
                      entity: button.prusalink_resume_job
                      icon: mdi:play
                      name: Print
                      label: Start
                      tap_action:
                        action: toggle
                      variables:
                        icon2: mdi:play
                        background_color_off: var(--green)
                        color_off: var(--contrast1)
                    - type: custom:button-card
                      template: button_template
                      entity: button.prusalink_pause_job
                      icon: mdi:play
                      name: Print
                      label: Pause
                      tap_action:
                        action: toggle
                      variables:
                        icon2: mdi:pause
                        background_color_off: var(--yellow)
                        color_off: var(--contrast1)
                    - type: custom:button-card
                      template: button_template
                      entity: button.prusalink_cancel_job
                      icon: mdi:stop
                      name: Print
                      label: Stop
                      tap_action:
                        action: toggle
                      variables:
                        icon2: mdi:stop
                        background_color_off: var(--red)
                        color_off: var(--contrast1)
                    - type: custom:button-card
                      entity: sensor.prusalink_nozzle_temperature
                      template: custom_card_sensor_small
                      name: Nozzle Temp
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' °C';
                            return `
                            ${st}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
                    - type: custom:button-card
                      entity: sensor.prusalink_heatbed_temperature
                      template: custom_card_sensor_small
                      name: Bed Temp
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' °C';
                            return `
                            ${st}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
                    - type: custom:button-card
                      entity: sensor.prusalink_progress
                      template: custom_card_sensor_small
                      name: Job Done
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' %';
                            return `
                            ${st}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
                    - type: custom:button-card
                      entity: sensor.prusalink_nozzle_target_temperature
                      template: custom_card_sensor_small
                      name: Target Nozzle Temp
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' °C';
                            return `
                            ${st}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
                    - type: custom:button-card
                      entity: sensor.prusalink_heatbed_target_temperature
                      template: custom_card_sensor_small
                      name: Target Bed Temp
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' °C';
                            return `
                            ${st}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
                    - type: custom:button-card
                      entity: sensor.prusalink_material
                      template: custom_card_sensor_small
                      name: Material
                      variables:
                        state: |
                          [[[ 
                            var st = states[entity.entity_id].state;
                            var uni = ' ';
                            return `
                            ${st}<span style="font-size:
                          0.5em;opacity:0.7">${uni}</span>
                            `
                          ]]]
        column_span: 3
    type: sections
    max_columns: 3
    path: server
    icon: mdi:server-outline
    cards: []
    dense_section_placement: false
    theme: Rounded-Bubble
  - title: Energy
    header:
      card:
        type: markdown
        text_only: true
        content: |-

          {% if (states("sensor.time_of_day") == "morning") %}
            # Good Morning, {{user}}!
            {{ states("input_text.ai_morning_brief") }}
          {% elif (states("sensor.time_of_day") == "day") %}
            # Hey, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}.
          {% elif (states("sensor.time_of_day") == "evening") %}
            # Good Evening, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% elif (states("sensor.time_of_day") == "night") %}
            # Good Night, {{user}}!
            It's {{ states("sensor.time") }}, the weather is {{ state_translated("weather.home") | lower }} with {{ state_attr("weather.home","temperature") }}°C. Right now there are {{ states("sensor.lights_on_count") }} lights on and {{ states("sensor.window_open_count") }} windows open. The security system is set to {{ state_translated("alarm_control_panel.security_system") }}; the flat door is {{ states("lock.flat_door") }}. {% if states("binary_sensor.is_alarm_on") == "on" %}Your alarm is set to {{ states("sensor.wake_time_1") }}.{% endif %} 

          {% endif %}
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      layout: responsive
      badges_position: top
      badges_wrap: scroll
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.vacation_mode
        color: orange
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.vacation_mode
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_julians_iphone
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_julians_iphone
            state: 'off'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: input_boolean.notifications_anna
        color: primary
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: input_boolean.notifications_anna
            state: 'off'
          - condition: user
            users:
              - 82def695e9504f63b1eb09150073737d
        icon: mdi:cellphone-message-off
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.lights_on_count
        color: amber
        visibility:
          - condition: numeric_state
            entity: sensor.lights_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#lights
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.chores_on_count
        color: yellow
        visibility:
          - condition: numeric_state
            entity: sensor.chores_on_count
            above: 0
        tap_action:
          action: navigate
          navigation_path: home#chores
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            {{ 100 - state_attr('sensor.dishwasher_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            mdi:dishwasher
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            mdi:dishwasher-alert
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            mdi:dishwasher
          {% else %}
            mdi:dishwasher-off
          {% endif %}    
        color: |-
          {% if is_state('sensor.dishwasher_status', 'Running') %}
            blue
          {% elif is_state('sensor.dishwasher_status', 'Clean') %}
            green
          {% elif is_state('sensor.dishwasher_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.dishwasher_status
        label: ''
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_dishwasher
          data: {}
        visibility:
          - condition: state
            entity: sensor.dishwasher_status
            state_not: 'Off'
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            {{ 100 - state_attr('sensor.waschmaschine_timer','remaining_perc') | round(0) }}%
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            Clean
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
        icon: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            mdi:washing-machine
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            mdi:washing-machine-alert
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            mdi:washing-machine
          {% else %}
            mdi:washing-machine-off
          {% endif %}
        color: |-
          {% if is_state('sensor.washing_machine_status', 'Running') %}
            blue
          {% elif is_state('sensor.washing_machine_status', 'Clean') %}
            green
          {% elif is_state('sensor.washing_machine_status', 'Idle') %}
            yellow
          {% else %}
            grey
          {% endif %}
        entity: sensor.washing_machine_status
        double_tap_action:
          action: perform-action
          perform_action: input_boolean.turn_off
          target:
            entity_id: input_boolean.chores_laundry
          data: {}
        visibility:
          - condition: state
            entity: sensor.washing_machine_status
            state_not: 'Off'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.prusalink_progress
        icon: mdi:printer-3d
        color: orange
        visibility:
          - condition: state
            entity: sensor.prusalink
            state: printing
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#3d-printer
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: vacuum.dobby
        color: purple
        visibility:
          - condition: state
            entity: vacuum.dobby
            state_not: docked
        tap_action:
          action: navigate
          navigation_path: home#vacuum
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.fan_outlet
        color: blue
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.fan_outlet
            state: 'on'
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: switch.desk_webcam
        color: green
        tap_action:
          action: toggle
        visibility:
          - condition: state
            entity: switch.desk_webcam
            state: 'on'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.wake_time_1
        icon: mdi:alarm
        color: yellow
        visibility:
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
              - 82def695e9504f63b1eb09150073737d
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - entity: binary_sensor.is_alarm_on
                    state: 'on'
                  - entity: sensor.time_of_day
                    state_not: day
                  - condition: state
                    entity: input_boolean.alarm_has_run
                    state: 'off'
                  - entity: alarm_control_panel.security_system
                    state_not: armed_away
                  - entity: alarm_control_panel.security_system
                    state_not: triggered
                  - condition: state
                    entity: person.julian_
                    state: home
              - condition: state
                entity: input_boolean.sound_alarm_is_running
                state: 'on'
        tap_action:
          action: navigate
          navigation_path: home#alarm
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.raspberry_pi_health_attention
        icon: mdi:minidisc
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.raspberry_pi_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sensor.junglemoneynas_volume_1_status
        icon: mdi:nas
        color: red
        visibility:
          - condition: state
            entity: sensor.junglemoneynas_volume_1_status
            state_not: normal
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#nas
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.battery_health_attention
        icon: mdi:battery-20
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.battery_health_attention
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        tap_action:
          action: navigate
          navigation_path: server#battery
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state('alarm_control_panel.security_system', 'triggered') or
                is_state('alarm_control_panel.alexa_guard_431b6', 'triggered')  %}
                  TRIGGERED
                {% elif is_state('alarm_control_panel.security_system', 'armed_away')  %}
                  Armed
                {% elif is_state('alarm_control_panel.security_system', 'armed_home') %}
                  Home
                {% elif is_state('alarm_control_panel.security_system', 'armed_night') %}
                  Night
                {% else %}
                  Arming...
                {% endif %}
        icon: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            mdi:shield-home-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            mdi:shield-lock-outline
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            mdi:shield-alert-outline
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            mdi:shield-moon-outline
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            mdi:shield-off-outline
          {% else %}
            mdi:shield-alert-outline
          {% endif %}
        color: >-
          {% if is_state('alarm_control_panel.security_system', 'armed_home') %}
            green
          {% elif is_state('alarm_control_panel.security_system', 'armed_away')
          %}
            red
          {% elif is_state('alarm_control_panel.security_system', 'triggered')
          %}
            orange
          {% elif is_state('alarm_control_panel.security_system', 'armed_night')
          %}
            blue
          {% elif is_state('alarm_control_panel.security_system', 'disarmed') %}
            grey
          {% else %}
            yellow
          {% endif %}
        entity: alarm_control_panel.security_system
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: '{{ states("sensor.window_open_count") }}'
        icon: mdi:window-open-variant
        entity: group.window_sensors
        color: red
        tap_action:
          action: more-info
        visibility:
          - condition: numeric_state
            entity: sensor.window_open_count
            above: 0
      - type: custom:mushroom-template-badge
        icon: |-
          {% if is_state('lock.flat_door', 'locked') %}
            mdi:lock
          {% else %}
            mdi:lock-open
          {% endif %}
        color: |-
          {% if is_state('lock.flat_door', 'locked') %}
            green
          {% else %}
            red
          {% endif %}
        entity: lock.flat_door
        double_tap_action:
          action: call-service
          service: lock.lock
          data: {}
          target:
            entity_id: lock.flat_door
        content: ''
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.home_assistant_update
        color: red
        visibility:
          - condition: state
            entity: binary_sensor.home_assistant_update
            state: 'on'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
          - condition: screen
            media_query: '(min-width: 768px)'
        tap_action:
          action: navigate
          navigation_path: server#updates
      - type: custom:mushroom-template-badge
        icon: mdi:account-tie-voice
        color: white
        content: ''
        tap_action:
          action: assist
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
      - type: custom:mushroom-template-badge
        entity: person.julian_
        picture: '{{ state_attr("person.julian_","entity_picture") }}'
        content: '{{ states("sensor.julians_apple_watch_area") }}'
        label: Julian
        visibility:
          - condition: screen
            media_query: '(min-width: 768px)'
          - condition: user
            users:
              - 3eea636aa3de4c7f9c662ad29c6e92e0
        icon: ''
        color: ''
        tap_action:
          action: navigate
          navigation_path: home#julian
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template: custom_card_user
              - type: custom:bubble-card
                card_type: empty-column
            visibility:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 767px)'
          - type: custom:decluttering-card
            template: footer_template
          - type: custom:bubble-card
            card_type: separator
            name: Energy
            icon: mdi:lightning-bolt
          - type: vertical-stack
            cards:
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.dishwasher_power
                    above: 0
                card:
                  type: custom:button-card
                  template: custom_card_device_sensor
                  entity: sensor.dishwasher_power
                  name: Dishwasher
                  icon: mdi:dishwasher
                  label: >-
                    [[[ return states["sensor.dishwasher_power"].state + " kWh"
                    ]]]
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.washing_machine_power
                    above: 0
                card:
                  type: custom:button-card
                  template: custom_card_device_sensor
                  entity: sensor.washing_machine_power
                  name: Washing Machine
                  icon: mdi:washing-machine
                  label: >-
                    [[[ return states["sensor.washing_machine_power"].state + "
                    kWh" ]]]
        visibility:
          - condition: screen
            media_query: '(min-width: 0px) and (max-width: 767px)'
      - type: grid
        cards:
          - type: custom:navbar-card
            desktop:
              position: left
              min_width: 768
              show_labels: true
            mobile:
              show_labels: true
            routes:
              - icon: mdi:home-outline
                icon_selected: mdi:home-assistant
                url: /dashboard-bubble/home
                label: Home
              - icon: mdi:sofa-outline
                icon_selected: mdi:sofa
                label: Rooms
                badge:
                  show: |
                    [[[ return states['light.all_lights'].state === 'on' ]]]
                  color: var(--yellow-color)
                  count: |
                    [[[ return states['sensor.lights_on_count'].state ]]]
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:sofa-outline
                    url: /dashboard-bubble/home#living-room
                    label: Living Room
                  - icon: mdi:bed-king-outline
                    url: /dashboard-bubble/home#bedroom
                    label: Bedroom
                  - icon: mdi:monitor
                    url: /dashboard-bubble/home#office
                    label: Office
                  - icon: mdi:silverware-variant
                    url: /dashboard-bubble/home#kitchen
                    label: Kitchen
                  - icon: mdi:paper-roll-outline
                    url: /dashboard-bubble/home#bathroom
                    label: Bathroom
                  - icon: mdi:desk
                    url: /dashboard-bubble/home#guest-room
                    label: Guest Room
                  - icon: mdi:door
                    url: /dashboard-bubble/home#corridor
                    label: Corridor
              - icon: mdi:music
                url: /dashboard-bubble/music
                label: Music
                badge:
                  show: >
                    [[[ return states['media_player.music'].state === 'playing'
                    ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return false;
                    else if (states['remote.harmony_hub'].state == "on") return true;
                    else return false;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:television
                url: /dashboard-bubble/home#remote
                label: TV
                badge:
                  show: >
                    [[[ return states['media_player.tv_and_ps5'].state ===
                    'playing' ]]]
                  color: var(--green-color)
                hidden: |
                  [[[
                    if (states['media_player.music'].state == "playing") return true;
                    else if (states['remote.harmony_hub'].state == "on") return false;
                    else return true;
                  ]]]
                hold_action:
                  action: open-popup
                popup:
                  - icon: mdi:music
                    url: /dashboard-bubble/music
                    label: Music
                  - icon: mdi:television
                    url: /dashboard-bubble/home#remote
                    label: TV
              - icon: mdi:shield-outline
                icon_selected: mdi:security
                url: /dashboard-bubble/security
                label: Security
                badge:
                  show: >
                    [[[ return states['binary_sensor.window_sensors'].state ===
                    'on' ]]]
                  color: var(--red-color)
                  count: |
                    [[[ return states['sensor.window_open_count'].state ]]]
              - icon: mdi:face-agent
                url: /dashboard-bubble/home#julian
                label: Julian
                hidden: |
                  [[[ return user.name != "Julian" ]]]
                badge:
                  show: >
                    [[[ return states['input_boolean.debug_rounded'].state ===
                    'on' ]]]
                  color: var(--red-color)
              - icon: mdi:face-woman
                url: /dashboard-bubble/home#anna
                label: Anna
                hidden: |
                  [[[ return user.name != "Anna" ]]]
              - icon: mdi:dots-horizontal
                label: More
                selected: true
                badge:
                  show: |
                    [[[
                      if (states['binary_sensor.monitored_entities'].state == "on") return true;
                      else if (states['binary_sensor.home_assistant_update'].state == "on") return true;
                      else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                      else return false;
                    ]]]
                  color: var(--red-color)
                tap_action:
                  action: open-popup
                popup:
                  - icon: mdi:server-outline
                    url: /dashboard-bubble/server
                    label: Server
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                    badge:
                      show: |
                        [[[
                          if (states['binary_sensor.monitored_entities'].state == "on") return true;
                          else if (states['binary_sensor.battery_health_attention'].state == "on") return true;
                          else return false;
                        ]]]
                      color: var(--red-color)
                  - icon: mdi:cart
                    url: /dashboard-bring/home
                    label: Shopping List
                    badge:
                      show: |
                        [[[ return states['todo.shopping_list'].state > 0 ]]]
                      color: var(--red-color)
                      count: |
                        [[[ return states['todo.shopping_list'].state ]]]
                  - icon: mdi:bookshelf
                    url: /d5369777_music_assistant/ingress
                    label: Music Assistant
                  - icon: mdi:cog
                    url: /config/dashboard
                    label: Settings
                    badge:
                      show: >
                        [[[ return
                        states['binary_sensor.home_assistant_update'].state ===
                        'on' ]]]
                      color: var(--red-color)
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
                  - icon: mdi:hammer
                    url: /developer-tools/yaml
                    label: Developer Tools
                    hidden: |
                      [[[ return user.name != "Julian" ]]]
            styles: |
              .navbar {
                --navbar-primary-color: var(--yellow-color);
                background: var(--contrast2);
              }
          - type: heading
            icon: mdi:lightning-bolt
            heading: Overview
            heading_style: title
            visibility:
              - condition: screen
                media_query: '(min-width: 768px)'
          - type: energy-distribution
            link_dashboard: true
      - type: grid
        cards:
          - type: heading
            heading: Energy Usage
            heading_style: title
            icon: mdi:power
          - type: energy-usage-graph
      - type: grid
        cards:
          - type: heading
            heading: Sensors
            heading_style: title
            icon: mdi:home-lightning-bolt-outline
          - square: false
            columns: 2
            type: grid
            cards:
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: sensor.tasmota_power_power_curr
                    name: Power Current
                    icon: mdi:lightning-bolt
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' W';
                          return `
                          ${parseFloat(st).toFixed(0)}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: sensor.tasmota_power_total_in
                    name: Consumption
                    icon: mdi:transmission-tower-import
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' kWh';
                          return `
                          ${parseFloat(st).toFixed(0)}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: sensor.tasmota_power_total_out
                    name: Total Return
                    icon: mdi:transmission-tower-export
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' kWh';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: input_number.electricity_price
                    name: Electricity Price
                    icon: mdi:currency-eur
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' ct/kWh';
                          return `
                          ${st*100}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: sensor.plug_energy_power
                    name: Solar Current
                    icon: mdi:solar-panel
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' W';
                          return `
                          ${parseFloat(st).toFixed(0)}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: sensor.plug_energy_today
                    name: Solar Today
                    icon: mdi:solar-power
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' kWh';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: sensor.plug_energy_total
                    name: Solar Total
                    icon: mdi:meter-electric-outline
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' kWh';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: sensor.solar_savings
                    name: Solar Savings
                    icon: mdi:piggy-bank
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' €';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
      - type: grid
        cards:
          - type: heading
            heading: Solar
            heading_style: title
            icon: mdi:solar-power-variant
          - type: energy-solar-graph
      - type: grid
        cards:
          - type: heading
            heading: Water Usage
            heading_style: title
            icon: mdi:water
          - square: false
            columns: 2
            type: grid
            cards:
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: input_number.kaltwasserzaehler
                    name: Cold Water
                    icon: mdi:water-outline
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' m³';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: input_number.water_price
                    name: Water Price
                    icon: mdi:currency-eur
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' m³';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: input_number.warmwasserzaehler
                    name: Warm Water
                    icon: mdi:water-thermometer
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = ' m³';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
                  - type: custom:button-card
                    template: custom_card_sensor_medium
                    entity: input_datetime.wasserzahler_ablesedatum
                    name: Date
                    icon: mdi:calendar
                    variables:
                      state: |
                        [[[ 
                          var st = states[entity.entity_id].state;
                          var uni = '';
                          return `
                          ${st}<span style="font-size:
                        0.5em;opacity:0.7">${uni}</span>
                          `
                        ]]]
    type: sections
    max_columns: 3
    path: energy
    icon: mdi:lightning-bolt
    cards: []
    dense_section_placement: false
    theme: Rounded-Bubble
